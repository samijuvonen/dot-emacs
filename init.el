  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;; DO NOT EDIT THIS FILE. Edit emacs.org instead and tangle: C-c C-v C-t.  ;;
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; Benchmark init

;;    This is for figuring out why startup is slow, normally disabled.

;;    Installation: Run make inside the directory where you installed
;;    benchmark-init, this will produce the benchmark-init-loaddefs.el file. Then
;;    place the following code as early as possible in your Emacs initialization
;;    script. 


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A][Benchmark\ init:1]]
;; (add-to-list 'load-path "~/.emacs.d/vendor/benchmark-init-el/")
;; (require 'benchmark-init-loaddefs)
;; (benchmark-init/activate)
;; Benchmark\ init:1 ends here

;; Name and email


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A][Name\ and\ email:1]]
(defvar at-sign "@")
(defvar my-domain "juvonen.org")
;; default name and email address
(setq user-full-name "Sami Juvonen"
      user-email (concat "sami" at-sign my-domain)
      )
;; Name\ and\ email:1 ends here

;; Turn on debug

;; Remember to turn it off at end.


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A][Turn\ on\ debug:1]]
(setq debug-on-error t)
(setq debug-on-quit t)
;; Turn\ on\ debug:1 ends here

;; Configure package manager

;; This configures the Emacs package manager. I try to keep it simple:
;; - Orgmode from orgmode.org
;; - prefer stable(r) packages, so only use Melpa-stable and GNU Elpa

;; I use use-package for loading and configuring all packages if at all possible.
;; This makes this configuration file much more modular and manageable. I hope
;; to avoid another Emacs bankruptcy. Been there, done that, rm -f'd .emacs...


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A][Configure\ package\ manager:1]]
(setq load-prefer-newer t)

(require 'package)
(setq package-enable-at-startup nil)
(setq package-archives
      '(("gnu" . "http://elpa.gnu.org/packages/")
        ("org" . "http://orgmode.org/elpa/")
        ("melpa-stable" . "https://stable.melpa.org/packages/")
        ;;("melpa" . "https://melpa.org/packages/")
        ))

(setq package-archive-priorities  '(
                                    ("gnu" . 30)
                                    ("org" . 30)
                                    ("melpa-stable" . 20)
                                    ("melpa" . 0)
                                    ))

(package-initialize)

;; These don't seem to work the way I think they would.
;; use-package configuration - needs to be set before refresh
;;(setq use-package-always-ensure t)
;; (setq use-package-always-pin "melpa-stable")

;; Bootstrap `use-package'. Install it if not installed already.
(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

(eval-when-compile (require 'use-package))
(use-package bind-key ;; part of use-package
  :commands (bind-key) )


(defvar my/vendor-dir (expand-file-name "vendor" user-emacs-directory))
(unless (file-directory-p my/vendor-dir) (make-directory my/vendor-dir))
(add-to-list 'load-path my/vendor-dir)
(dolist (pkg (directory-files my/vendor-dir t "\\w+"))
  (when (file-directory-p pkg)
    (add-to-list 'load-path pkg)))
;; Configure\ package\ manager:1 ends here

;; Custom utility functions


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A][Custom\ utility\ functions:1]]
(defun beautify-json ()
  "Run JSON through Python. From https://writequit.org/org/settings.html"
  (interactive)
  (let ((b (if mark-active (min (point) (mark)) (point-min)))
        (e (if mark-active (max (point) (mark)) (point-max))))
    (shell-command-on-region b e
                             "python -mjson.tool" (current-buffer) t))
  )

(defun modi/switch-to-scratch-and-back (arg)
  "Toggle between *scratch-MODE* buffer and the current buffer.
If a scratch buffer does not exist, create it with the major mode set to that
of the buffer from where this function is called.

        COMMAND -> Open/switch to a scratch buffer in the current buffer's major mode
    C-0 COMMAND -> Open/switch to a scratch buffer in `fundamental-mode'
    C-u COMMAND -> Open/switch to a scratch buffer in `org-mode'
C-u C-u COMMAND -> Open/switch to a scratch buffer in `emacs-elisp-mode'

source: http://emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81
"
  (interactive "p")
  (if (and (= arg 1) ; no prefix
           (string-match-p "\\*scratch" (buffer-name)))
      (switch-to-buffer (other-buffer))
    (let ((mode-str (cl-case arg
                      (0  "fundamental-mode") ; C-0
                      (4  "org-mode") ; C-u
                      (16 "emacs-lisp-mode") ; C-u C-u
                      (t  (format "%s" major-mode))))) ; no prefix
      (switch-to-buffer (get-buffer-create
                         (concat "*scratch-" mode-str "*")))
      (funcall (intern mode-str))))) ; http://stackoverflow.com/a/7539787/1219634

(defalias 'scratch 'modi/switch-to-scratch-and-back)

;; this allows creating dir path from find-file automagically.
;; http://mbork.pl/2016-07-25_Making_directories_on_the_fly
(defun make-parent-directory ()
  "Make sure the directory of `buffer-file-name' exists."
  (make-directory (file-name-directory buffer-file-name) t))

(add-hook 'find-file-not-found-functions #'make-parent-directory)

;;
;; From http://cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/
;;
(defun hugo-post (title)
  (interactive "sTitle: ")
  (org-insert-heading) (insert title)
  (insert (concat "\n"
                  "#+begin_src html :tangle /tmp/blog/content/post/" (replace-regexp-in-string " " "_" title) ".md\n"
                  "+++\n"
                  "categories = []\n"
                  "title = \"" title "\"\n"
                  "date = \"" (format-time-string "%Y-%m-%d %H:%M" (org-current-time)) "\n"
                  "+++\n"
                  "\n\n\n\n"
                  "#+end_src")))

(defun hugo-setup ()
  ;;run me in the org file for your blog!
  (interactive)
  (shell-command "rm -rf /tmp/blog; mkdir -p /tmp/blog/content/post /tmp/blog/themes /tmp/blog/layouts/partials/ /tmp/blog/static/")
  (shell-command "git clone **whatever you like** /tmp/blog/themes/theme")
  (org-babel-tangle))
;; Custom\ utility\ functions:1 ends here

;; Startup

;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A][Startup:1]]
(setq inhibit-startup-message 't       ;; yes, I know you're Emacs
      initial-scratch-message ""       ;; we're friends already
      inhibit-splash-screen t          ;; really
      ) 
(fset 'display-startup-echo-area-message #'ignore) ;; c'mon!

;; save Emacs layout on exit
(desktop-save-mode)
;; Startup:1 ends here

;; Backups and cached persistence data


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A][Backups\ and\ cached\ persistence\ data:1]]
;; set up a global cache for emacsfluvia
(defvar my/cache-dir )
(if (eq system-type 'gnu/linux)
    (if (eq nil (getenv "XDG_CACHE_HOME"))
        (setq my/cache-dir (expand-file-name ".cache/emacs" (getenv "HOME")))      
      (setq my/cache-dir (expand-file-name "emacs" (getenv "XDG_CACHE_HOME"))))
  (setq my/cache-dir (expand-file-name "cache" user-emacs-directory))  
  )

(unless (file-directory-p my/cache-dir)
  (make-directory my/cache-dir t))
(unless (file-directory-p (expand-file-name ".gitignore" my/cache-dir))
  (with-temp-file (expand-file-name ".gitignore" my/cache-dir)
    (insert "*\n!.gitignore\n")))

(defvar my/backup-dir (expand-file-name "backup" my/cache-dir))
(unless (file-directory-p my/backup-dir)
  (make-directory my/backup-dir t))
(setq backup-directory-alist `((".*" . ,my/backup-dir)))
      
(setq make-backup-files t             
      backup-by-copying t               ; don't clobber symlinks
      version-control t                 ; version numbers for backup files
      delete-old-versions t             ; delete excess backup files silently
      delete-by-moving-to-trash t
      kept-old-versions 2               ; oldest versions to keep
      kept-new-versions 5               ; newest versions to keep
      )

;; Save actions persistently across sessions.
(use-package savehist
  :init
  (setq savehist-file (expand-file-name "history" my/cache-dir)
        history-length 1000
        history-delete-duplicates t
        savehist-save-minibuffer-history t
        savehist-additional-variables '(kill-ring
                                        search-ring
                                        regexp-search-ring))
  :config
  (savehist-mode 1))
;; recent files
(use-package recentf
  :init
  (setq recentf-max-saved-items 200
        recentf-max-menu-items 20
        recentf-save-file (expand-file-name "recent"  my/cache-dir))
  :config
  (recentf-mode t))

;; save place in edited files
(use-package saveplace
  :init
  (setq-default save-place t)
  (setq save-place-file (expand-file-name "places" my/cache-dir))
  )

;; Auto-save
;; Save in the visited file, don't create separate autosave files.
;; We have undo and git.
(setq auto-save-visited-file-name t
      auto-save-interval 100         ;; default is 300 chars
      auto-save-timeout 10           ;; default is 30 sec
      )

(if (version< emacs-version "24.4")
      () ; should maybe do something here
    ;; Emacs 24.4+, save on frame focus lost. May be good enough.
    (add-hook 'focus-out-hook (lambda () (save-some-buffers t))))
;; Backups\ and\ cached\ persistence\ data:1 ends here

;; Ido
;;     I am one of those people who can't seem to grok Helm, so I use Ido.

;;     6/2016: Now disabled, using Ivy/Swiper/Counsel instead.


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A][Ido:1]]
(use-package ido
  :disabled t
  :ensure t
  :init
  (setq ido-everywhere t
        ido-enable-flex-matching t
        ido-show-dot-for-dired t
        ido-enable-dot-prefix t
        ido-create-new-buffer 'always
        ido-max-window-height 0.4
        ido-use-filename-at-point 'guess
        ido-use-url-at-point t
        ido-max-prospects 20
        ido-max-dir-file-cache 400
        ido-enter-matching-directory t
        ido-use-virtual-buffers t
        ido-save-directory-list-file (expand-file-name "ido.last" my/cache-dir)
        ido-default-file-method 'selected-window
        ido-default-buffer-method 'selected-window)
  :config
  (ido-mode +1)
  )

;; smex: replace regular M-x
;; remember recently and most frequently used commands
(use-package smex
  :disabled t
  :ensure t
  :init
  (setq smex-history-length 40
        smex-save-file (expand-file-name "smex.items" my/cache-dir))
  :bind
  (("M-x" . smex)
   ("<menu>" . smex) ;; linux menu key runs execute-extended-command by default
   ("M-X" . smex-major-mode-commands)
   ("C-c C-c M-x" . execute-extended-command))

  :config
  (smex-initialize))

  ;;; smarter fuzzy matching for ido
(use-package flx-ido
  :disabled t
  :ensure t
  :init
  (setq ido-use-faces nil) ;; to see flx highlights
  :config
  (flx-ido-mode 1))

(use-package ido-ubiquitous
  :ensure t
  :disabled t
  :config
  (ido-ubiquitous-mode +1))
;; Ido:1 ends here

;; Ivy

;; Ivy is another piece of Emacs magic from Oleh Krehel a.k.a. abo-abo. It works in the same 
;; space as Ido and Helm. I've found it more intuitive and just plain awesome since I installed it.
;; I'm using the stable version but reading his blog makes me want to install the dev version. So
;; far I've been able to resist.


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A][Ivy:1]]
(use-package swiper
  :ensure t
  :diminish ""
  :init
  (use-package counsel
    :ensure t)
  (use-package ivy
    :ensure t)
  (setq ivy-use-virtual-buffers t)
  (setq ivy-height 10)
  (setq ivy-count-format "(%d/%d) ")
  (setq magit-completing-read-function 'ivy-completing-read)
  (setq projectile-completion-system 'ivy)
  :config
  (ivy-mode 1)
  ;; (global-set-key (kbd "C-s") 'swiper)
  ;; (global-set-key (kbd "M-x") 'counsel-M-x)
  ;; (global-set-key (kbd "C-x C-f") 'counsel-find-file)
  ;; (global-set-key (kbd "C-h f") 'counsel-describe-function)
  ;; (global-set-key (kbd "C-h v") 'counsel-describe-variable)
  ;; (global-set-key (kbd "C-h l") 'counsel-load-library)
  ;; (global-set-key (kbd "<f2> i") 'counsel-info-lookup-symbol)
  ;; (global-set-key (kbd "<f2> u") 'counsel-unicode-char)
  ;; ;; Ivy-based interface to shell and system tools
  ;; (global-set-key (kbd "C-c g") 'counsel-git)
  ;; (global-set-key (kbd "C-c G") 'counsel-git-grep)
  ;; (global-set-key (kbd "C-c k") 'counsel-ag)
  ;; (global-set-key (kbd "C-x l") 'counsel-locate)
  ;; ;;(global-set-key (kbd "C-S-o") 'counsel-rhythmbox)
  ;; ;; ivy-resume resumes the last Ivy-based completion.
  ;; (global-set-key (kbd "C-c C-r") 'ivy-resume)
  :bind
  (("C-s" . counsel-grep-or-swiper)
   ("M-x" . counsel-M-x)
   ("C-x C-f" . counsel-find-file)
   ("C-h f" . counsel-describe-function)
   ("C-h v" . counsel-describe-variable)
   ("C-h I" . counsel-info-lookup-symbol)
   ("C-h u" . counsel-unicode-char)
   ("C-c g" . counsel-git)
   ("C-c G" . counsel-git-grep)
   ("C-c A" . counsel-ag)
   ("C-c L" . counsel-locate)
   ("C-c C-r" . ivy-resume)
   ;; ("C-c v" . ivy-push-view) ; these are not yet in ivy stable 2016-07-31
   ;; ("C-c V" . ivy-pop-view)
   )
  )
;; Ivy:1 ends here

;; Modeline information


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A][Modeline\ information:1]]
(setq line-number-display-limit-width 10000)
(line-number-mode t)
(column-number-mode t)            ;; show some more leg
(size-indication-mode t)

;; diminish keeps modeline tidy
(use-package diminish
  :ensure t
  )

(diminish 'auto-fill-function "")
(diminish 'buffer-face-mode "" )
(diminish 'google-this-mode "")
  
;; Modeline\ information:1 ends here

;; Minor modes


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A][Minor\ modes:1]]
(delete-selection-mode 1)
(electric-pair-mode 1)

(setq auto-revert-verbose nil)         ;; no whining
(global-auto-revert-mode 1)            ;; if file changes on disk, reread it

(setq-default indent-tabs-mode nil     ;; we don't like tabs by default
              tab-width 4              ;; not too wide
              fill-column 80
              sentence-end-double-space nil)   ;; not in high school any more
;; Minor\ modes:1 ends here

;; Hooks


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A][Hooks:1]]
(add-hook 'text-mode-hook 'turn-on-auto-fill)
;; Hooks:1 ends here

;; Misc buffer options


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A][Misc\ buffer\ options:1]]
(prefer-coding-system 'utf-8)          ;; be modern
(set-default-coding-systems 'utf-8)
(set-terminal-coding-system 'utf-8)
(set-keyboard-coding-system 'utf-8)
(setq default-buffer-file-coding-system 'utf-8)

(setq-default find-file-visit-truename t) ;; resolve symlinks
(setq view-read-only t)                ;; visit read-only files in view-mode
(setq confirm-nonexistent-file-or-buffer nil)
(setq next-line-add-newlines nil)
(setq require-final-newline t)
(setq kill-whole-line t)


;; unique buffer names
(use-package uniquify
  :config
  (setq uniquify-buffer-name-style 'forward
        uniquify-separator "/"
        uniquify-after-kill-buffer-p t
        uniquify-ignore-buffers-re "^\\*"))

;; volatile highlights - temporarily highlight changes from pasting etc
(use-package volatile-highlights
  :ensure t
  :diminish ""
  :config
  (volatile-highlights-mode t)
  )

(use-package ibuffer
  :commands (ibuffer)
  :bind ("C-x C-b" . ibuffer))

(use-package which-func
  :init
  (setq which-func-unknown "")
  :config
  (which-function-mode)
  )

(add-to-list 'display-buffer-alist
             '("wclock" . ((display-buffer-pop-up-window) .
                           ((inhibit-same-window . t))) 
               ))
;; Misc\ buffer\ options:1 ends here

;; TODO Set libraries unwritable 

;;      Need to make this toggleable - package-install also thinks it's unwritable


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A][Set\ libraries\ unwritable:1]]
;; Always open installed Emacs files as read-only. From EmacsWiki.
;; (dir-locals-set-class-variables
;;  'unwritable-directory
;;  '((nil . ((buffer-read-only . t)))))
;; (dir-locals-set-directory-class (expand-file-name "elpa" user-emacs-directory) 'unwritable-directory)
;; (dir-locals-set-directory-class (expand-file-name "vendor" user-emacs-directory) 'unwritable-directory)
;; Set\ libraries\ unwritable:1 ends here

;; Defaults for user interaction


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A][Defaults\ for\ user\ interaction:1]]
(fset 'yes-or-no-p 'y-or-n-p)          ;; less rsi
(setq suggest-key-bindings 6           ;; be friendly, show for 6s
      echo-keystrokes 0.5)             ;; default is 1s

(setq enable-recursive-minibuffers t)

(global-hl-line-mode 1)
(setq show-paren-delay 0)
(show-paren-mode 1)

(blink-cursor-mode nil)                ;; stop the madness
;;(setq visible-bell t)                  ;; be less annoying
;;(setq ring-bell-function 'ignore) 
(defun my/terminal-visible-bell ()
   "A friendlier visual bell effect. Flash the modeline."
   (invert-face 'mode-line)
   (run-with-timer 0.1 nil 'invert-face 'mode-line))
 
 (setq visible-bell nil
       ring-bell-function 'my/terminal-visible-bell)

;; scrolling. TODO: experiment
(setq scroll-margin 2
      scroll-conservatively 10000
      scroll-preserve-screen-position 1)

(setq ediff-window-setup-function 'ediff-setup-windows-plain)

(setq read-file-name-completion-ignore-case t) ;; case-insensitive completion

(setq hippie-expand-try-functions-list '(try-expand-dabbrev
                                         try-expand-dabbrev-all-buffers
                                         try-expand-dabbrev-from-kill
                                         try-complete-file-name-partially
                                         try-complete-file-name
                                         try-expand-all-abbrevs
                                         try-expand-list
                                         try-expand-line
                                         try-complete-lisp-symbol-partially
                                         try-complete-lisp-symbol))

(setq tab-always-indent 'complete)
(add-to-list 'completion-styles 'initials t)
;; Defaults\ for\ user\ interaction:1 ends here

;; Regular expressions


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A][Regular\ expressions:1]]
(use-package re-builder
  :config (setq reb-re-syntax 'rx))
;; Regular\ expressions:1 ends here

;; Performance options


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A][Performance\ options:1]]
(setq gc-cons-threshold (* 50 1024 1024) ;; 8 -> 100MB
      large-file-warning-threshold (* 100 1024 1024)
      message-log-max 16384)

;; seed pseudo-random number generator
(random t)
;; Performance\ options:1 ends here

;; Looks: fonts and themes

;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A][Looks:\ fonts\ and\ themes:1]]
;; use bbatsov's ported Solarized theme 
(use-package solarized-theme
  :ensure t
  :init
  (setq solarized-use-variable-pitch nil
        ;; Prefer italics over bold
        solarized-use-less-bold t
        solarized-use-more-italic t
        ;; Emphasize docstrings
        solarized-distinct-doc-face t 
        ;; make the fringe stand out from the background
        solarized-distinct-fringe-background t
        ;; make the modeline high contrast
        solarized-high-contrast-mode-line nil
        ;; colors for indicators such as git:gutter, flycheck and similar
        solarized-emphasize-indicators t
        ;; size of org-mode headlines (but keep other size-changes)
        solarized-scale-org-headlines t
        ;; Avoid all font-size changes
        ;; solarized-height-minus-1 1
        ;; solarized-height-plus-1 1
        ;; solarized-height-plus-2 1
        ;; solarized-height-plus-3 1
        ;; solarized-height-plus-4 1
        )
  :config
  (load-theme 'solarized-light 'no-confirm)
)

;; (set-face-attribute 'default nil
;;                     :family "Source Code Pro" :height 115 :weight 'regular :width 'semi-condensed)
;; (set-face-attribute 'variable-pitch nil
;;                     :family "Source Sans Pro" :height 125 :weight 'regular)
(set-face-attribute 'default nil
                    :family "Fira Mono" :height 120 :weight 'regular)
;; (set-face-attribute 'variable-pitch nil
;;                     :family "Fira Sans" :height 125 :weight 'regular)
;; (set-face-attribute 'variable-pitch nil
;;                      :family "Linux Biolinum O" :height 140 :weight 'regular)
 ;; (set-face-attribute 'variable-pitch nil
 ;;                     :family "Lato" :height 130 :weight 'medium)
(set-face-attribute 'variable-pitch nil
                    :family "DejaVu Sans Book" :height 130 :weight 'regular)

(global-font-lock-mode t)
(setq x-underline-at-descent-line t)

(set-face-background hl-line-face "white" )

(add-hook 'text-mode-hook 'variable-pitch-mode)
(add-hook 'Info-mode-hook 'variable-pitch-mode)


(use-package beacon
  :pin gnu
  :disabled t
  :ensure t
  :diminish ""
  :init (beacon-mode 1)
  )
;; Looks:\ fonts\ and\ themes:1 ends here

;; Emacs windows
;; Winner-mode returns the previous window layout with C-c <left> in case
;; something messed it up.


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A][Emacs\ windows:1]]
(setq split-height-threshold nil)
(setq split-width-threshold 150)

(use-package winner
  :ensure t
  :defer 10
  :config
  (winner-mode 1)
  )
;; Emacs\ windows:1 ends here

;; Emacs frames
;; Emacs frames are what the OS calls "windows".

;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A][Emacs\ frames:1]]
  ;; don't want these
  (when (functionp 'set-scroll-bar-mode) (set-scroll-bar-mode 'nil))
  (when (functionp 'blink-cursor-mode) (blink-cursor-mode -1))
  (when (functionp 'tool-bar-mode) (tool-bar-mode -1))

  ;; losing my neckbeard cred with these:
  (when (functionp 'mouse-wheel-mode) (mouse-wheel-mode 1))
  (when (functionp 'menu-bar-mode) (menu-bar-mode 1))
  (when (functionp 'tooltip-mode) (tooltip-mode 1))

;; more useful frame title, that show either a file or a
;; buffer name (if the buffer isn't visiting a file)
(setq frame-title-format
      '((:eval (if (buffer-file-name)
                   (abbreviate-file-name (buffer-file-name)) "%b")))
      )

;; clipboardy thingies
(setq x-select-enable-clipboard t
      x-select-enable-primary t
      save-interprogram-paste-before-kill t)
;; Emacs\ frames:1 ends here

;; Navigation


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A][Navigation:1]]
  (use-package avy
    :pin gnu
    :ensure t
    :init (avy-setup-default)
    :bind 
    (("M-g g" . avy-goto-line)
     ("M-g M-g" . avy-goto-line)
     ("C-\\" . avy-goto-char-2)
     ("M-g c" . avy-goto-char-timer))
    )


  (use-package ace-window
    :pin gnu
    :ensure t
    :bind ("C-x o" . ace-window)
    ;;:config
    ;;(setq aw-keys '(?a ?s ?d ?f ?g ?h ?j ?k ?l))
    )

  ;; imenu rescan
  (setq imenu-auto-rescan t)
;; Navigation:1 ends here

;; Expand-region


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A][Expand-region:1]]
(use-package expand-region
  :ensure t
  :bind ("C-=" . er/expand-region))
;; Expand-region:1 ends here

;; Encryption


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A][Encryption:1]]
(setq epg-gpg-program "gpg2")
(setq epa-file-encrypt-to '(user-email))
;; Encryption:1 ends here

;; Google this


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A][Google\ this:1]]
(use-package google-this
  :diminish t
  :config
  (google-this-mode 1)
  )
;; Google\ this:1 ends here

;; Undo-tree

;; 7/2016: disabled because getting weird tracebacks.
;; TODO: file a bug?


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A][Undo-tree:1]]
  (use-package undo-tree
    :disabled t
    :ensure t
    :diminish ""
    :config (global-undo-tree-mode) 
    )
;; Undo-tree:1 ends here

;; Lorem ipsum

;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A][Lorem\ ipsum:1]]
(use-package lorem-ipsum
  :load-path "vendor/emacs-lorem-ipsum"
  :commands (lorem-ipsum-insert-paragraphs lorem-ipsum-insert-sentences)
  )
;; Lorem\ ipsum:1 ends here

;; Crux

;; Crux is Bozhidar Batsov's Collection of Ridiculously Useful eXtensions. It is
;; what it says on the tin, versions of useful functions that are part of many init.el.


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A][Crux:1]]
(use-package crux
  :ensure t
  :bind
  (("C-a" . crux-move-beginning-of-line)
   ("C-c n" . crux-cleanup-buffer-or-region)
   ("C-c C-e" . crux-eval-and-replace)
   ("C-c 2" . crux-duplicate-current-line-or-region)
   ("C-c 3" . crux-duplicate-and-comment-current-line-or-region)
   ("C-c r" . crux-rename-file-and-buffer)
   ("C-c R" . crux-reopen-as-root)
   ("C-c o" . crux-open-with))
  :config
  (crux-with-region-or-buffer indent-region)
  (crux-with-region-or-buffer untabify)
  (crux-with-region-or-line comment-or-uncomment-region)
  )
;; Crux:1 ends here

;; Version Control

;; Magit alone along with Orgmode would be enough reason to use Emacs.


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A][Version\ Control:1]]
(use-package magit
  :ensure t
  :diminish "g"
  :commands (magit-status)
  :bind 
  (("<f8>" . magit-status))
  )

(use-package with-editor
  :ensure t
  :config
  (shell-command-with-editor-mode)
  )

(use-package git-timemachine
  :ensure t
  )

(use-package diff-hl
  :pin gnu
  :ensure t
  :config
  (global-diff-hl-mode)
  )
;; Version\ Control:1 ends here

;; Ack

;;  Ack supports ack, ag, git grep, etc.


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A][Ack:1]]
(use-package ack
  :ensure t
  :pin gnu
  :commands ack)
;; Ack:1 ends here

;; Tramp

;; Don't run an editor on a server, edit the files from the comfort of a local Emacs.


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A][Tramp:1]]
(use-package tramp
  :config
  (setq tramp-default-method "ssh")
  )
;; Tramp:1 ends here

;; PDF Tools

;; PDF Tools requires =dnf install -y poppler-glib-devel= on Fedora.


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A][PDF\ Tools:1]]
(use-package pdf-tools
  :ensure t
  :defer
  :config
  (pdf-tools-install)
  )
;; PDF\ Tools:1 ends here

;; YASnippets


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A][YASnippets:1]]
(use-package yasnippet
  :defer t
  :if (not noninteractive)
  :diminish yas-minor-mode
  :commands (yas-global-mode yas-minor-mode) 
  )
;; YASnippets:1 ends here

;; Orgmode


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A][Orgmode:1]]
(use-package org
  :ensure org-plus-contrib
  :defer t
  :pin org
  :bind 
  (("C-c l" . org-store-link)
   ("C-c a" . org-agenda)
   ("C-c c" . org-capture)
   ("C-c b" . org-iswitchb)
   ("C-c t" . org-time-stamp-inactive)) ; flycheck steals C-c ! map
  :init
  (eval-after-load 'ox '(require 'ox-koma-letter))
  (eval-after-load 'ox-latex
    '(add-to-list 'org-latex-packages-alist '("AUTO" "babel" t) t) 
    )
  :config 
  (setq org-modules '(org-crypt org-docview org-habit org-info
                                org-protocol org-bookmark org-bullets
                                org-checklist org-eshell org-learn org-man 
                                org-toc)
        )
  (add-to-list 'org-structure-template-alist
               '("py" "\n#+BEGIN_SRC python\n?\n#+END_SRC\n"
                 "<src lang=\"python\">\n?\n</src>")
               )
  (add-to-list 'org-structure-template-alist
               '("el" "\n#+BEGIN_SRC emacs-lisp\n?\n#+END_SRC\n"
                 "<src lang=\"emacs-lisp\">\n?\n</src>")
               )
  (add-to-list 'org-structure-template-alist
               '("sh" "\n#+BEGIN_SRC sh\n?\n#+END_SRC\n"
                 "<src lang=\"sh\">\n?\n</src>")
               )   

  (setq org-directory "~/Documents/Org"
        org-agenda-files (list "~/Documents/Org")
        org-default-notes-file "~/Documents/Org/notes.org.gpg"
        org-startup-folded "contents"
        org-archive-folder "~/Documents/Org/.archive"
        org-special-ctrl-a/e t
        ;;org-ctrl-k-protect-subtree t
        org-catch-invisible-edits 'show ; TODO check 'smart
        org-return-follows-link t
        org-src-fontify-natively t
        org-src-tab-acts-natively t
        org-src-preserve-indentation t
        org-support-shift-select t
        )
  (setq org-ellipsis "…")
  (setq org-todo-keywords
        (quote ((sequence "TODO(t)" "NEXT(n)" "|" "DONE(d)")
                (sequence "WAITING(w@/!)" "HOLD(h@/!)" "|" "CANCELLED(c@/!)" 
                          "PHONE" "MEETING")
                ))
        )
  (setq org-use-fast-todo-selection t)
  (setq org-treat-S-cursor-todo-selection-as-state-change nil)
  (setq org-todo-state-tags-triggers
        (quote (("CANCELLED" ("CANCELLED" . t))
                ("WAITING" ("WAITING" . t))
                ("HOLD" ("WAITING") ("HOLD" . t))
                (done ("WAITING") ("HOLD"))
                ("TODO" ("WAITING") ("CANCELLED") ("HOLD"))
                ("NEXT" ("WAITING") ("CANCELLED") ("HOLD"))
                ("DONE" ("WAITING") ("CANCELLED") ("HOLD"))
                ))
        )
  (setq org-capture-templates
        '(("t" "Todo" entry
           (file+headline "~/Documents/Org/todo.org" "Tasks")
           "* TODO %?\n  %i\n  %a")
          ("n" "Note" entry
           (file+headline "~/Documents/Org/notes.org.gpg" "Unorganized")
           "* %?\n  %i\n  %a")
          ("j" "Journal" entry
           (file+datetree "~/Documents/Org/journal.org.gpg")
           "* %u %?\n  %i\n  %a")
          )
        )
  (add-hook 'org-mode-hook
            (lambda () (imenu-add-to-menubar "Index")
              (org-bullets-mode 1)) 
            )

  (org-babel-do-load-languages
   'org-babel-load-languages
   '(
     (calc . t)
     (ditaa . t)
     (dot . t)
     (emacs-lisp . t)
     (gnuplot . t)
     (js . t)
     (makefile . t)
     (python . t)
     (R . t)
     (ruby . t)
     (sh . t)
     ))

  (setq texcmd "latexmk -xelatex")
  (setq org-latex-pdf-process (list texcmd))
  
  ) ;; End of use-package org

(use-package org-bullets
  :init (setq org-bullets-bullet-list '("●" "★" "❀" "►" "•" "▸" "☢"))
  :defer t
  :ensure t
  :commands (org-bullets-mode)
  )

(use-package ob-ipython
  :load-path "vendor/ob-ipython"
  :defer t
  :config 
  (setq ob-ipython-command "ipython3")
  (add-to-list 'org-structure-template-alist
               '("ipy" "\n#+BEGIN_SRC ipython :session\n?\n#+END_SRC\n"
                 "<src lang=\"python\">\n?\n</src>"))
  )

(use-package ox-pandoc
  :defer t
  :ensure t
  )

(use-package org-gcal
  :ensure t
  )

(use-package org-gnome
  :ensure t
  )

 
;; Orgmode:1 ends here

;; Ansible


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A][Ansible:1]]
(use-package yaml-mode
  :ensure t
  :init 
  (add-to-list 'auto-mode-alist '("\\.yml$" . yaml-mode))
  (add-to-list 'auto-mode-alist '("\\.yaml$" . yaml-mode))
  (add-hook 'yaml-mode-hook
            '(lambda ()
               (define-key yaml-mode-map "\C-m" 'newline-and-indent)))
  )

(use-package ansible
  :ensure t
  ;;:config (ansible::set-default-keymap)
  )

(use-package ansible-doc
  :ensure t
  :init
  (add-hook 'yaml-mode-hook #'ansible-doc-mode)
  )

(use-package company-ansible
  :ensure t
  )
;; Ansible:1 ends here

;; Docker


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A][Docker:1]]
(use-package dockerfile-mode
  :ensure t
  )

(use-package docker
  :ensure t
  )
;; Docker:1 ends here

;; Puppet


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dockerfile-mode%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20docker%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Puppet%0A%0A][Puppet:1]]
(use-package puppet-mode
  :ensure t
  )
;; Puppet:1 ends here

;; Vagrant


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dockerfile-mode%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20docker%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Puppet%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20puppet-mode%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Vagrant%0A%0A][Vagrant:1]]
(use-package vagrant
  :ensure t)
;; (use-package vagrant-tramp
;;   :ensure t)
;; Vagrant:1 ends here

;; General programming


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dockerfile-mode%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20docker%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Puppet%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20puppet-mode%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Vagrant%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20vagrant%0A%20:ensure%20t)%0A;;%20(use-package%20vagrant-tramp%0A;;%20:ensure%20t)%0A#+END_SRC%0A%0A*%20Programming%0A**%20General%20programming%0A%0A][General\ programming:1]]
;; compilation: don't ask about saving, don't save, and add helper to shell mode.
(setq compilation-ask-about-save nil)
(setq compilation-save-buffers-predicate '(lambda () nil))
(add-hook 'shell-mode-hook 'compilation-shell-minor-mode)

;; make a file executable if it starts with #!
(add-hook
 'after-save-hook
 'executable-make-buffer-file-executable-if-script-p)


(use-package company
  :pin gnu
  :ensure t
  :config
    (global-company-mode)
    (use-package company-quickhelp
      :ensure t
      :config
      (setq company-quickhelp-idle-delay 3)
      (company-quickhelp-mode 1)
      )
    (use-package company-emoji
      :ensure t
      :config
      (add-hook 'markdown-mode-hook 'company-mode)
      (add-hook 'markdown-mode-hook 'company-emoji-init) 
      )
    (use-package company-jedi
      :disabled t
      :ensure t
      :config (add-to-list 'company-backends 'company-jedi) 
      )  
  )


(use-package flycheck
  :ensure t
  :defer t
  :commands (flycheck-mode)
  :diminish ""
  :init (global-flycheck-mode)
  :bind
  (("M-g M-n" . flycheck-next-error)
   ("M-g M-p" . flycheck-previous-error)
   ("M-g M-=" . flycheck-list-errors))
  :config
  (setq-default flycheck-disabled-checkers '(emacs-lisp-checkdoc))
  )

(use-package aggressive-indent
  :pin gnu
  :ensure t
  :commands (aggressive-indent-mode)
  :config 
  (add-to-list 'aggressive-indent-excluded-modes 'elpy-mode)  ;; aggressive indent is too aggressive for python
  (aggressive-indent-global-mode 1))

(use-package rainbow-mode
  :pin gnu
  :ensure t
  )

(use-package yasnippet
  :ensure t
  :init
    (yas-global-mode 1)
    )


(add-hook 'prog-mode-hook 'flyspell-prog-mode)
(add-hook 'prog-mode-hook 'imenu-add-menubar-index)
(add-hook 'prog-mode-hook 'aggressive-indent-mode)
;; General\ programming:1 ends here

;; Makefile


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dockerfile-mode%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20docker%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Puppet%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20puppet-mode%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Vagrant%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20vagrant%0A%20:ensure%20t)%0A;;%20(use-package%20vagrant-tramp%0A;;%20:ensure%20t)%0A#+END_SRC%0A%0A*%20Programming%0A**%20General%20programming%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20compilation:%20don't%20ask%20about%20saving,%20don't%20save,%20and%20add%20helper%20to%20shell%20mode.%0A(setq%20compilation-ask-about-save%20nil)%0A(setq%20compilation-save-buffers-predicate%20'(lambda%20()%20nil))%0A(add-hook%20'shell-mode-hook%20'compilation-shell-minor-mode)%0A%0A;;%20make%20a%20file%20executable%20if%20it%20starts%20with%20#!%0A(add-hook%0A%20'after-save-hook%0A%20'executable-make-buffer-file-executable-if-script-p)%0A%0A%0A(use-package%20company%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-company-mode)%0A%20(use-package%20company-quickhelp%0A%20:ensure%20t%0A%20:config%0A%20(setq%20company-quickhelp-idle-delay%203)%0A%20(company-quickhelp-mode%201)%0A%20)%0A%20(use-package%20company-emoji%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'markdown-mode-hook%20'company-mode)%0A%20(add-hook%20'markdown-mode-hook%20'company-emoji-init)%20%0A%20)%0A%20(use-package%20company-jedi%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:config%20(add-to-list%20'company-backends%20'company-jedi)%20%0A%20)%20%0A%20)%0A%0A%0A(use-package%20flycheck%0A%20:ensure%20t%0A%20:defer%20t%0A%20:commands%20(flycheck-mode)%0A%20:diminish%20""%0A%20:init%20(global-flycheck-mode)%0A%20:bind%0A%20(("M-g%20M-n"%20.%20flycheck-next-error)%0A%20("M-g%20M-p"%20.%20flycheck-previous-error)%0A%20("M-g%20M-="%20.%20flycheck-list-errors))%0A%20:config%0A%20(setq-default%20flycheck-disabled-checkers%20'(emacs-lisp-checkdoc))%0A%20)%0A%0A(use-package%20aggressive-indent%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:commands%20(aggressive-indent-mode)%0A%20:config%20%0A%20(add-to-list%20'aggressive-indent-excluded-modes%20'elpy-mode)%20;;%20aggressive%20indent%20is%20too%20aggressive%20for%20python%0A%20(aggressive-indent-global-mode%201))%0A%0A(use-package%20rainbow-mode%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20yasnippet%0A%20:ensure%20t%0A%20:init%0A%20(yas-global-mode%201)%0A%20)%0A%0A%0A(add-hook%20'prog-mode-hook%20'flyspell-prog-mode)%0A(add-hook%20'prog-mode-hook%20'imenu-add-menubar-index)%0A(add-hook%20'prog-mode-hook%20'aggressive-indent-mode)%0A%0A#+END_SRC%0A**%20Makefile%0A%0A][Makefile:1]]
(defun my-makefile-hook
    (setq indent-tabs-mode t)
  )
(add-hook 'makefile-mode-hook 'my-makefile-hook)
;; Makefile:1 ends here

;; Projectile


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dockerfile-mode%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20docker%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Puppet%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20puppet-mode%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Vagrant%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20vagrant%0A%20:ensure%20t)%0A;;%20(use-package%20vagrant-tramp%0A;;%20:ensure%20t)%0A#+END_SRC%0A%0A*%20Programming%0A**%20General%20programming%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20compilation:%20don't%20ask%20about%20saving,%20don't%20save,%20and%20add%20helper%20to%20shell%20mode.%0A(setq%20compilation-ask-about-save%20nil)%0A(setq%20compilation-save-buffers-predicate%20'(lambda%20()%20nil))%0A(add-hook%20'shell-mode-hook%20'compilation-shell-minor-mode)%0A%0A;;%20make%20a%20file%20executable%20if%20it%20starts%20with%20#!%0A(add-hook%0A%20'after-save-hook%0A%20'executable-make-buffer-file-executable-if-script-p)%0A%0A%0A(use-package%20company%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-company-mode)%0A%20(use-package%20company-quickhelp%0A%20:ensure%20t%0A%20:config%0A%20(setq%20company-quickhelp-idle-delay%203)%0A%20(company-quickhelp-mode%201)%0A%20)%0A%20(use-package%20company-emoji%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'markdown-mode-hook%20'company-mode)%0A%20(add-hook%20'markdown-mode-hook%20'company-emoji-init)%20%0A%20)%0A%20(use-package%20company-jedi%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:config%20(add-to-list%20'company-backends%20'company-jedi)%20%0A%20)%20%0A%20)%0A%0A%0A(use-package%20flycheck%0A%20:ensure%20t%0A%20:defer%20t%0A%20:commands%20(flycheck-mode)%0A%20:diminish%20""%0A%20:init%20(global-flycheck-mode)%0A%20:bind%0A%20(("M-g%20M-n"%20.%20flycheck-next-error)%0A%20("M-g%20M-p"%20.%20flycheck-previous-error)%0A%20("M-g%20M-="%20.%20flycheck-list-errors))%0A%20:config%0A%20(setq-default%20flycheck-disabled-checkers%20'(emacs-lisp-checkdoc))%0A%20)%0A%0A(use-package%20aggressive-indent%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:commands%20(aggressive-indent-mode)%0A%20:config%20%0A%20(add-to-list%20'aggressive-indent-excluded-modes%20'elpy-mode)%20;;%20aggressive%20indent%20is%20too%20aggressive%20for%20python%0A%20(aggressive-indent-global-mode%201))%0A%0A(use-package%20rainbow-mode%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20yasnippet%0A%20:ensure%20t%0A%20:init%0A%20(yas-global-mode%201)%0A%20)%0A%0A%0A(add-hook%20'prog-mode-hook%20'flyspell-prog-mode)%0A(add-hook%20'prog-mode-hook%20'imenu-add-menubar-index)%0A(add-hook%20'prog-mode-hook%20'aggressive-indent-mode)%0A%0A#+END_SRC%0A**%20Makefile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20my-makefile-hook%0A%20(setq%20indent-tabs-mode%20t)%0A%20)%0A(add-hook%20'makefile-mode-hook%20'my-makefile-hook)%0A#+END_SRC%0A%0A**%20Projectile%0A%0A][Projectile:1]]
(use-package projectile
  :ensure t
  :config (projectile-global-mode 1)
  :diminish projectile-mode
  :init
  (progn
    (setq projectile-file-exists-remote-cache-expire (* 30 60))
    (setq projectile-switch-project-action 'projectile-find-file-dwim)))
;; Projectile:1 ends here

;; Python


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dockerfile-mode%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20docker%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Puppet%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20puppet-mode%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Vagrant%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20vagrant%0A%20:ensure%20t)%0A;;%20(use-package%20vagrant-tramp%0A;;%20:ensure%20t)%0A#+END_SRC%0A%0A*%20Programming%0A**%20General%20programming%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20compilation:%20don't%20ask%20about%20saving,%20don't%20save,%20and%20add%20helper%20to%20shell%20mode.%0A(setq%20compilation-ask-about-save%20nil)%0A(setq%20compilation-save-buffers-predicate%20'(lambda%20()%20nil))%0A(add-hook%20'shell-mode-hook%20'compilation-shell-minor-mode)%0A%0A;;%20make%20a%20file%20executable%20if%20it%20starts%20with%20#!%0A(add-hook%0A%20'after-save-hook%0A%20'executable-make-buffer-file-executable-if-script-p)%0A%0A%0A(use-package%20company%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-company-mode)%0A%20(use-package%20company-quickhelp%0A%20:ensure%20t%0A%20:config%0A%20(setq%20company-quickhelp-idle-delay%203)%0A%20(company-quickhelp-mode%201)%0A%20)%0A%20(use-package%20company-emoji%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'markdown-mode-hook%20'company-mode)%0A%20(add-hook%20'markdown-mode-hook%20'company-emoji-init)%20%0A%20)%0A%20(use-package%20company-jedi%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:config%20(add-to-list%20'company-backends%20'company-jedi)%20%0A%20)%20%0A%20)%0A%0A%0A(use-package%20flycheck%0A%20:ensure%20t%0A%20:defer%20t%0A%20:commands%20(flycheck-mode)%0A%20:diminish%20""%0A%20:init%20(global-flycheck-mode)%0A%20:bind%0A%20(("M-g%20M-n"%20.%20flycheck-next-error)%0A%20("M-g%20M-p"%20.%20flycheck-previous-error)%0A%20("M-g%20M-="%20.%20flycheck-list-errors))%0A%20:config%0A%20(setq-default%20flycheck-disabled-checkers%20'(emacs-lisp-checkdoc))%0A%20)%0A%0A(use-package%20aggressive-indent%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:commands%20(aggressive-indent-mode)%0A%20:config%20%0A%20(add-to-list%20'aggressive-indent-excluded-modes%20'elpy-mode)%20;;%20aggressive%20indent%20is%20too%20aggressive%20for%20python%0A%20(aggressive-indent-global-mode%201))%0A%0A(use-package%20rainbow-mode%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20yasnippet%0A%20:ensure%20t%0A%20:init%0A%20(yas-global-mode%201)%0A%20)%0A%0A%0A(add-hook%20'prog-mode-hook%20'flyspell-prog-mode)%0A(add-hook%20'prog-mode-hook%20'imenu-add-menubar-index)%0A(add-hook%20'prog-mode-hook%20'aggressive-indent-mode)%0A%0A#+END_SRC%0A**%20Makefile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20my-makefile-hook%0A%20(setq%20indent-tabs-mode%20t)%0A%20)%0A(add-hook%20'makefile-mode-hook%20'my-makefile-hook)%0A#+END_SRC%0A%0A**%20Projectile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20projectile%0A%20:ensure%20t%0A%20:config%20(projectile-global-mode%201)%0A%20:diminish%20projectile-mode%0A%20:init%0A%20(progn%0A%20(setq%20projectile-file-exists-remote-cache-expire%20(*%2030%2060))%0A%20(setq%20projectile-switch-project-action%20'projectile-find-file-dwim)))%0A%0A#+END_SRC%0A%0A**%20Python%0A%0A][Python:1]]
(use-package elpy
  :ensure t
  :commands (elpy-enable)
  :diminish "🐍"
  :init 
  (setq elpy-rpc-backend "jedi"
        elpy-rpc-project-specific 't
        )
  (elpy-enable)
  :config
  (elpy-use-ipython "ipython3") 
  (when (fboundp 'flycheck-mode)
    (setq elpy-modules (delete 'elpy-module-flymake elpy-modules)))
  ;; fix PEP8 compliance on save
  (use-package py-autopep8
    :ensure t
    :config
    (add-hook 'elpy-mode-hook 'py-autopep8-enable-on-save))
  ;; emacs ipython notebook
  (use-package ein
    :ensure t)
  )
;; Python:1 ends here

;; Emacs lisp


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dockerfile-mode%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20docker%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Puppet%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20puppet-mode%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Vagrant%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20vagrant%0A%20:ensure%20t)%0A;;%20(use-package%20vagrant-tramp%0A;;%20:ensure%20t)%0A#+END_SRC%0A%0A*%20Programming%0A**%20General%20programming%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20compilation:%20don't%20ask%20about%20saving,%20don't%20save,%20and%20add%20helper%20to%20shell%20mode.%0A(setq%20compilation-ask-about-save%20nil)%0A(setq%20compilation-save-buffers-predicate%20'(lambda%20()%20nil))%0A(add-hook%20'shell-mode-hook%20'compilation-shell-minor-mode)%0A%0A;;%20make%20a%20file%20executable%20if%20it%20starts%20with%20#!%0A(add-hook%0A%20'after-save-hook%0A%20'executable-make-buffer-file-executable-if-script-p)%0A%0A%0A(use-package%20company%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-company-mode)%0A%20(use-package%20company-quickhelp%0A%20:ensure%20t%0A%20:config%0A%20(setq%20company-quickhelp-idle-delay%203)%0A%20(company-quickhelp-mode%201)%0A%20)%0A%20(use-package%20company-emoji%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'markdown-mode-hook%20'company-mode)%0A%20(add-hook%20'markdown-mode-hook%20'company-emoji-init)%20%0A%20)%0A%20(use-package%20company-jedi%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:config%20(add-to-list%20'company-backends%20'company-jedi)%20%0A%20)%20%0A%20)%0A%0A%0A(use-package%20flycheck%0A%20:ensure%20t%0A%20:defer%20t%0A%20:commands%20(flycheck-mode)%0A%20:diminish%20""%0A%20:init%20(global-flycheck-mode)%0A%20:bind%0A%20(("M-g%20M-n"%20.%20flycheck-next-error)%0A%20("M-g%20M-p"%20.%20flycheck-previous-error)%0A%20("M-g%20M-="%20.%20flycheck-list-errors))%0A%20:config%0A%20(setq-default%20flycheck-disabled-checkers%20'(emacs-lisp-checkdoc))%0A%20)%0A%0A(use-package%20aggressive-indent%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:commands%20(aggressive-indent-mode)%0A%20:config%20%0A%20(add-to-list%20'aggressive-indent-excluded-modes%20'elpy-mode)%20;;%20aggressive%20indent%20is%20too%20aggressive%20for%20python%0A%20(aggressive-indent-global-mode%201))%0A%0A(use-package%20rainbow-mode%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20yasnippet%0A%20:ensure%20t%0A%20:init%0A%20(yas-global-mode%201)%0A%20)%0A%0A%0A(add-hook%20'prog-mode-hook%20'flyspell-prog-mode)%0A(add-hook%20'prog-mode-hook%20'imenu-add-menubar-index)%0A(add-hook%20'prog-mode-hook%20'aggressive-indent-mode)%0A%0A#+END_SRC%0A**%20Makefile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20my-makefile-hook%0A%20(setq%20indent-tabs-mode%20t)%0A%20)%0A(add-hook%20'makefile-mode-hook%20'my-makefile-hook)%0A#+END_SRC%0A%0A**%20Projectile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20projectile%0A%20:ensure%20t%0A%20:config%20(projectile-global-mode%201)%0A%20:diminish%20projectile-mode%0A%20:init%0A%20(progn%0A%20(setq%20projectile-file-exists-remote-cache-expire%20(*%2030%2060))%0A%20(setq%20projectile-switch-project-action%20'projectile-find-file-dwim)))%0A%0A#+END_SRC%0A%0A**%20Python%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20elpy%0A%20:ensure%20t%0A%20:commands%20(elpy-enable)%0A%20:diminish%20"%F0%9F%90%8D"%0A%20:init%20%0A%20(setq%20elpy-rpc-backend%20"jedi"%0A%20elpy-rpc-project-specific%20't%0A%20)%0A%20(elpy-enable)%0A%20:config%0A%20(elpy-use-ipython%20"ipython3")%20%0A%20(when%20(fboundp%20'flycheck-mode)%0A%20(setq%20elpy-modules%20(delete%20'elpy-module-flymake%20elpy-modules)))%0A%20;;%20fix%20PEP8%20compliance%20on%20save%0A%20(use-package%20py-autopep8%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'elpy-mode-hook%20'py-autopep8-enable-on-save))%0A%20;;%20emacs%20ipython%20notebook%0A%20(use-package%20ein%0A%20:ensure%20t)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Emacs%20lisp%0A%0A][Emacs\ lisp:1]]
(use-package paredit
  :ensure t
  :commands (paredit-mode)
  :config
  (progn
    (defvar electrify-return-match "[\]}\)\"]"
      "If this regexp matches the text after the cursor, do an \"electric\"
       return.")

    (defun electrify-return-if-match (arg)
      "If the text after the cursor matches
       `electrify-return-match' then open and indent an empty line
        between the cursor and the text. Move the cursor to the new line."
      (interactive "P")
      (let ((case-fold-search nil))
        (if (looking-at electrify-return-match)
            (save-excursion (newline-and-indent)))
        (newline arg)
        (indent-according-to-mode)))
    ))

(defun my/lisp-mode ()
  (paredit-mode t) 
  (turn-on-eldoc-mode)
  (eldoc-add-command
   'paredit-backward-delete
   'paredit-close-round)
  (local-set-key (kbd "RET") 'electrify-return-if-match)
  (eldoc-add-command 'electrify-return-if-match)
  (show-paren-mode t))

(add-hook 'emacs-lisp-mode-hook 'my/lisp-mode)
(add-hook 'eval-expression-minibuffer-setup-hook 'my/lisp-mode)

;;(use-package rainbow-delimiters)
;; Emacs\ lisp:1 ends here

;; Ruby

;; Ruby-mode is included with Emacs (23+).


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dockerfile-mode%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20docker%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Puppet%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20puppet-mode%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Vagrant%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20vagrant%0A%20:ensure%20t)%0A;;%20(use-package%20vagrant-tramp%0A;;%20:ensure%20t)%0A#+END_SRC%0A%0A*%20Programming%0A**%20General%20programming%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20compilation:%20don't%20ask%20about%20saving,%20don't%20save,%20and%20add%20helper%20to%20shell%20mode.%0A(setq%20compilation-ask-about-save%20nil)%0A(setq%20compilation-save-buffers-predicate%20'(lambda%20()%20nil))%0A(add-hook%20'shell-mode-hook%20'compilation-shell-minor-mode)%0A%0A;;%20make%20a%20file%20executable%20if%20it%20starts%20with%20#!%0A(add-hook%0A%20'after-save-hook%0A%20'executable-make-buffer-file-executable-if-script-p)%0A%0A%0A(use-package%20company%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-company-mode)%0A%20(use-package%20company-quickhelp%0A%20:ensure%20t%0A%20:config%0A%20(setq%20company-quickhelp-idle-delay%203)%0A%20(company-quickhelp-mode%201)%0A%20)%0A%20(use-package%20company-emoji%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'markdown-mode-hook%20'company-mode)%0A%20(add-hook%20'markdown-mode-hook%20'company-emoji-init)%20%0A%20)%0A%20(use-package%20company-jedi%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:config%20(add-to-list%20'company-backends%20'company-jedi)%20%0A%20)%20%0A%20)%0A%0A%0A(use-package%20flycheck%0A%20:ensure%20t%0A%20:defer%20t%0A%20:commands%20(flycheck-mode)%0A%20:diminish%20""%0A%20:init%20(global-flycheck-mode)%0A%20:bind%0A%20(("M-g%20M-n"%20.%20flycheck-next-error)%0A%20("M-g%20M-p"%20.%20flycheck-previous-error)%0A%20("M-g%20M-="%20.%20flycheck-list-errors))%0A%20:config%0A%20(setq-default%20flycheck-disabled-checkers%20'(emacs-lisp-checkdoc))%0A%20)%0A%0A(use-package%20aggressive-indent%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:commands%20(aggressive-indent-mode)%0A%20:config%20%0A%20(add-to-list%20'aggressive-indent-excluded-modes%20'elpy-mode)%20;;%20aggressive%20indent%20is%20too%20aggressive%20for%20python%0A%20(aggressive-indent-global-mode%201))%0A%0A(use-package%20rainbow-mode%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20yasnippet%0A%20:ensure%20t%0A%20:init%0A%20(yas-global-mode%201)%0A%20)%0A%0A%0A(add-hook%20'prog-mode-hook%20'flyspell-prog-mode)%0A(add-hook%20'prog-mode-hook%20'imenu-add-menubar-index)%0A(add-hook%20'prog-mode-hook%20'aggressive-indent-mode)%0A%0A#+END_SRC%0A**%20Makefile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20my-makefile-hook%0A%20(setq%20indent-tabs-mode%20t)%0A%20)%0A(add-hook%20'makefile-mode-hook%20'my-makefile-hook)%0A#+END_SRC%0A%0A**%20Projectile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20projectile%0A%20:ensure%20t%0A%20:config%20(projectile-global-mode%201)%0A%20:diminish%20projectile-mode%0A%20:init%0A%20(progn%0A%20(setq%20projectile-file-exists-remote-cache-expire%20(*%2030%2060))%0A%20(setq%20projectile-switch-project-action%20'projectile-find-file-dwim)))%0A%0A#+END_SRC%0A%0A**%20Python%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20elpy%0A%20:ensure%20t%0A%20:commands%20(elpy-enable)%0A%20:diminish%20"%F0%9F%90%8D"%0A%20:init%20%0A%20(setq%20elpy-rpc-backend%20"jedi"%0A%20elpy-rpc-project-specific%20't%0A%20)%0A%20(elpy-enable)%0A%20:config%0A%20(elpy-use-ipython%20"ipython3")%20%0A%20(when%20(fboundp%20'flycheck-mode)%0A%20(setq%20elpy-modules%20(delete%20'elpy-module-flymake%20elpy-modules)))%0A%20;;%20fix%20PEP8%20compliance%20on%20save%0A%20(use-package%20py-autopep8%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'elpy-mode-hook%20'py-autopep8-enable-on-save))%0A%20;;%20emacs%20ipython%20notebook%0A%20(use-package%20ein%0A%20:ensure%20t)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Emacs%20lisp%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20paredit%0A%20:ensure%20t%0A%20:commands%20(paredit-mode)%0A%20:config%0A%20(progn%0A%20(defvar%20electrify-return-match%20"%5B\%5D}\)\"%5D"%0A%20"If%20this%20regexp%20matches%20the%20text%20after%20the%20cursor,%20do%20an%20\"electric\"%0A%20return.")%0A%0A%20(defun%20electrify-return-if-match%20(arg)%0A%20"If%20the%20text%20after%20the%20cursor%20matches%0A%20`electrify-return-match'%20then%20open%20and%20indent%20an%20empty%20line%0A%20between%20the%20cursor%20and%20the%20text.%20Move%20the%20cursor%20to%20the%20new%20line."%0A%20(interactive%20"P")%0A%20(let%20((case-fold-search%20nil))%0A%20(if%20(looking-at%20electrify-return-match)%0A%20(save-excursion%20(newline-and-indent)))%0A%20(newline%20arg)%0A%20(indent-according-to-mode)))%0A%20))%0A%0A(defun%20my/lisp-mode%20()%0A%20(paredit-mode%20t)%20%0A%20(turn-on-eldoc-mode)%0A%20(eldoc-add-command%0A%20'paredit-backward-delete%0A%20'paredit-close-round)%0A%20(local-set-key%20(kbd%20"RET")%20'electrify-return-if-match)%0A%20(eldoc-add-command%20'electrify-return-if-match)%0A%20(show-paren-mode%20t))%0A%0A(add-hook%20'emacs-lisp-mode-hook%20'my/lisp-mode)%0A(add-hook%20'eval-expression-minibuffer-setup-hook%20'my/lisp-mode)%0A%0A;;(use-package%20rainbow-delimiters)%0A%0A#+END_SRC%0A%0A**%20Shell%20script%0A**%20Ruby%0A%0ARuby-mode%20is%20included%20with%20Emacs%20(23+).%0A%0A][Ruby:1]]
(use-package ruby-mode
  :diminish "💎"
  )

;; Rubyish file extensions:
(add-to-list 'auto-mode-alist
             '("\\.\\(?:cap\\|gemspec\\|irbrc\\|gemrc\\|rake\\|rb\\|ru\\|thor\\)\\'" 
               . ruby-mode))
(add-to-list 'auto-mode-alist
             '("\\(?:Brewfile\\|Capfile\\|Gemfile\\(?:\\.[a-zA-Z0-9._-]+\\)?\\|[rR]akefile\\)\\'" 
               . ruby-mode))

;; inf-ruby gives us a Ruby REPL
;; not in Melpa-stable. TODO put it in vendor/
(use-package inf-ruby
  :config 
  (add-hook 'ruby-mode-hook 'inf-ruby-minor-mode)
  )
;; Ruby:1 ends here

;; Go


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dockerfile-mode%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20docker%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Puppet%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20puppet-mode%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Vagrant%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20vagrant%0A%20:ensure%20t)%0A;;%20(use-package%20vagrant-tramp%0A;;%20:ensure%20t)%0A#+END_SRC%0A%0A*%20Programming%0A**%20General%20programming%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20compilation:%20don't%20ask%20about%20saving,%20don't%20save,%20and%20add%20helper%20to%20shell%20mode.%0A(setq%20compilation-ask-about-save%20nil)%0A(setq%20compilation-save-buffers-predicate%20'(lambda%20()%20nil))%0A(add-hook%20'shell-mode-hook%20'compilation-shell-minor-mode)%0A%0A;;%20make%20a%20file%20executable%20if%20it%20starts%20with%20#!%0A(add-hook%0A%20'after-save-hook%0A%20'executable-make-buffer-file-executable-if-script-p)%0A%0A%0A(use-package%20company%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-company-mode)%0A%20(use-package%20company-quickhelp%0A%20:ensure%20t%0A%20:config%0A%20(setq%20company-quickhelp-idle-delay%203)%0A%20(company-quickhelp-mode%201)%0A%20)%0A%20(use-package%20company-emoji%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'markdown-mode-hook%20'company-mode)%0A%20(add-hook%20'markdown-mode-hook%20'company-emoji-init)%20%0A%20)%0A%20(use-package%20company-jedi%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:config%20(add-to-list%20'company-backends%20'company-jedi)%20%0A%20)%20%0A%20)%0A%0A%0A(use-package%20flycheck%0A%20:ensure%20t%0A%20:defer%20t%0A%20:commands%20(flycheck-mode)%0A%20:diminish%20""%0A%20:init%20(global-flycheck-mode)%0A%20:bind%0A%20(("M-g%20M-n"%20.%20flycheck-next-error)%0A%20("M-g%20M-p"%20.%20flycheck-previous-error)%0A%20("M-g%20M-="%20.%20flycheck-list-errors))%0A%20:config%0A%20(setq-default%20flycheck-disabled-checkers%20'(emacs-lisp-checkdoc))%0A%20)%0A%0A(use-package%20aggressive-indent%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:commands%20(aggressive-indent-mode)%0A%20:config%20%0A%20(add-to-list%20'aggressive-indent-excluded-modes%20'elpy-mode)%20;;%20aggressive%20indent%20is%20too%20aggressive%20for%20python%0A%20(aggressive-indent-global-mode%201))%0A%0A(use-package%20rainbow-mode%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20yasnippet%0A%20:ensure%20t%0A%20:init%0A%20(yas-global-mode%201)%0A%20)%0A%0A%0A(add-hook%20'prog-mode-hook%20'flyspell-prog-mode)%0A(add-hook%20'prog-mode-hook%20'imenu-add-menubar-index)%0A(add-hook%20'prog-mode-hook%20'aggressive-indent-mode)%0A%0A#+END_SRC%0A**%20Makefile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20my-makefile-hook%0A%20(setq%20indent-tabs-mode%20t)%0A%20)%0A(add-hook%20'makefile-mode-hook%20'my-makefile-hook)%0A#+END_SRC%0A%0A**%20Projectile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20projectile%0A%20:ensure%20t%0A%20:config%20(projectile-global-mode%201)%0A%20:diminish%20projectile-mode%0A%20:init%0A%20(progn%0A%20(setq%20projectile-file-exists-remote-cache-expire%20(*%2030%2060))%0A%20(setq%20projectile-switch-project-action%20'projectile-find-file-dwim)))%0A%0A#+END_SRC%0A%0A**%20Python%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20elpy%0A%20:ensure%20t%0A%20:commands%20(elpy-enable)%0A%20:diminish%20"%F0%9F%90%8D"%0A%20:init%20%0A%20(setq%20elpy-rpc-backend%20"jedi"%0A%20elpy-rpc-project-specific%20't%0A%20)%0A%20(elpy-enable)%0A%20:config%0A%20(elpy-use-ipython%20"ipython3")%20%0A%20(when%20(fboundp%20'flycheck-mode)%0A%20(setq%20elpy-modules%20(delete%20'elpy-module-flymake%20elpy-modules)))%0A%20;;%20fix%20PEP8%20compliance%20on%20save%0A%20(use-package%20py-autopep8%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'elpy-mode-hook%20'py-autopep8-enable-on-save))%0A%20;;%20emacs%20ipython%20notebook%0A%20(use-package%20ein%0A%20:ensure%20t)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Emacs%20lisp%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20paredit%0A%20:ensure%20t%0A%20:commands%20(paredit-mode)%0A%20:config%0A%20(progn%0A%20(defvar%20electrify-return-match%20"%5B\%5D}\)\"%5D"%0A%20"If%20this%20regexp%20matches%20the%20text%20after%20the%20cursor,%20do%20an%20\"electric\"%0A%20return.")%0A%0A%20(defun%20electrify-return-if-match%20(arg)%0A%20"If%20the%20text%20after%20the%20cursor%20matches%0A%20`electrify-return-match'%20then%20open%20and%20indent%20an%20empty%20line%0A%20between%20the%20cursor%20and%20the%20text.%20Move%20the%20cursor%20to%20the%20new%20line."%0A%20(interactive%20"P")%0A%20(let%20((case-fold-search%20nil))%0A%20(if%20(looking-at%20electrify-return-match)%0A%20(save-excursion%20(newline-and-indent)))%0A%20(newline%20arg)%0A%20(indent-according-to-mode)))%0A%20))%0A%0A(defun%20my/lisp-mode%20()%0A%20(paredit-mode%20t)%20%0A%20(turn-on-eldoc-mode)%0A%20(eldoc-add-command%0A%20'paredit-backward-delete%0A%20'paredit-close-round)%0A%20(local-set-key%20(kbd%20"RET")%20'electrify-return-if-match)%0A%20(eldoc-add-command%20'electrify-return-if-match)%0A%20(show-paren-mode%20t))%0A%0A(add-hook%20'emacs-lisp-mode-hook%20'my/lisp-mode)%0A(add-hook%20'eval-expression-minibuffer-setup-hook%20'my/lisp-mode)%0A%0A;;(use-package%20rainbow-delimiters)%0A%0A#+END_SRC%0A%0A**%20Shell%20script%0A**%20Ruby%0A%0ARuby-mode%20is%20included%20with%20Emacs%20(23+).%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ruby-mode%0A%20:diminish%20"%F0%9F%92%8E"%0A%20)%0A%0A;;%20Rubyish%20file%20extensions:%0A(add-to-list%20'auto-mode-alist%0A%20'("\\.\\(?:cap\\|gemspec\\|irbrc\\|gemrc\\|rake\\|rb\\|ru\\|thor\\)\\'"%20%0A%20.%20ruby-mode))%0A(add-to-list%20'auto-mode-alist%0A%20'("\\(?:Brewfile\\|Capfile\\|Gemfile\\(?:\\.%5Ba-zA-Z0-9._-%5D+\\)?\\|%5BrR%5Dakefile\\)\\'"%20%0A%20.%20ruby-mode))%0A%0A;;%20inf-ruby%20gives%20us%20a%20Ruby%20REPL%0A;;%20not%20in%20Melpa-stable.%20TODO%20put%20it%20in%20vendor/%0A(use-package%20inf-ruby%0A%20:config%20%0A%20(add-hook%20'ruby-mode-hook%20'inf-ruby-minor-mode)%0A%20)%0A#+END_SRC%0A%0A**%20Go%0A%0A][Go:1]]
;; install godef w/ go get github.com/rogpeppe/godef
(use-package go-mode
  :ensure t
  )

;; requires gocode: go get -u github.com/nsf/gocode
(use-package go-eldoc
  :ensure t
  )
(use-package company-go
  :ensure t
  )


(add-hook 'go-mode-hook 
          (lambda ()
            (add-hook 'before-save-hook #'gofmt-before-save)
            (local-set-key (kbd "M-.") #'godef-jump)
            (flycheck-mode 1)))
(add-hook 'go-mode-hook 'go-eldoc-setup)
;; Go:1 ends here

;; Web mode


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dockerfile-mode%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20docker%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Puppet%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20puppet-mode%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Vagrant%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20vagrant%0A%20:ensure%20t)%0A;;%20(use-package%20vagrant-tramp%0A;;%20:ensure%20t)%0A#+END_SRC%0A%0A*%20Programming%0A**%20General%20programming%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20compilation:%20don't%20ask%20about%20saving,%20don't%20save,%20and%20add%20helper%20to%20shell%20mode.%0A(setq%20compilation-ask-about-save%20nil)%0A(setq%20compilation-save-buffers-predicate%20'(lambda%20()%20nil))%0A(add-hook%20'shell-mode-hook%20'compilation-shell-minor-mode)%0A%0A;;%20make%20a%20file%20executable%20if%20it%20starts%20with%20#!%0A(add-hook%0A%20'after-save-hook%0A%20'executable-make-buffer-file-executable-if-script-p)%0A%0A%0A(use-package%20company%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-company-mode)%0A%20(use-package%20company-quickhelp%0A%20:ensure%20t%0A%20:config%0A%20(setq%20company-quickhelp-idle-delay%203)%0A%20(company-quickhelp-mode%201)%0A%20)%0A%20(use-package%20company-emoji%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'markdown-mode-hook%20'company-mode)%0A%20(add-hook%20'markdown-mode-hook%20'company-emoji-init)%20%0A%20)%0A%20(use-package%20company-jedi%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:config%20(add-to-list%20'company-backends%20'company-jedi)%20%0A%20)%20%0A%20)%0A%0A%0A(use-package%20flycheck%0A%20:ensure%20t%0A%20:defer%20t%0A%20:commands%20(flycheck-mode)%0A%20:diminish%20""%0A%20:init%20(global-flycheck-mode)%0A%20:bind%0A%20(("M-g%20M-n"%20.%20flycheck-next-error)%0A%20("M-g%20M-p"%20.%20flycheck-previous-error)%0A%20("M-g%20M-="%20.%20flycheck-list-errors))%0A%20:config%0A%20(setq-default%20flycheck-disabled-checkers%20'(emacs-lisp-checkdoc))%0A%20)%0A%0A(use-package%20aggressive-indent%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:commands%20(aggressive-indent-mode)%0A%20:config%20%0A%20(add-to-list%20'aggressive-indent-excluded-modes%20'elpy-mode)%20;;%20aggressive%20indent%20is%20too%20aggressive%20for%20python%0A%20(aggressive-indent-global-mode%201))%0A%0A(use-package%20rainbow-mode%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20yasnippet%0A%20:ensure%20t%0A%20:init%0A%20(yas-global-mode%201)%0A%20)%0A%0A%0A(add-hook%20'prog-mode-hook%20'flyspell-prog-mode)%0A(add-hook%20'prog-mode-hook%20'imenu-add-menubar-index)%0A(add-hook%20'prog-mode-hook%20'aggressive-indent-mode)%0A%0A#+END_SRC%0A**%20Makefile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20my-makefile-hook%0A%20(setq%20indent-tabs-mode%20t)%0A%20)%0A(add-hook%20'makefile-mode-hook%20'my-makefile-hook)%0A#+END_SRC%0A%0A**%20Projectile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20projectile%0A%20:ensure%20t%0A%20:config%20(projectile-global-mode%201)%0A%20:diminish%20projectile-mode%0A%20:init%0A%20(progn%0A%20(setq%20projectile-file-exists-remote-cache-expire%20(*%2030%2060))%0A%20(setq%20projectile-switch-project-action%20'projectile-find-file-dwim)))%0A%0A#+END_SRC%0A%0A**%20Python%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20elpy%0A%20:ensure%20t%0A%20:commands%20(elpy-enable)%0A%20:diminish%20"%F0%9F%90%8D"%0A%20:init%20%0A%20(setq%20elpy-rpc-backend%20"jedi"%0A%20elpy-rpc-project-specific%20't%0A%20)%0A%20(elpy-enable)%0A%20:config%0A%20(elpy-use-ipython%20"ipython3")%20%0A%20(when%20(fboundp%20'flycheck-mode)%0A%20(setq%20elpy-modules%20(delete%20'elpy-module-flymake%20elpy-modules)))%0A%20;;%20fix%20PEP8%20compliance%20on%20save%0A%20(use-package%20py-autopep8%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'elpy-mode-hook%20'py-autopep8-enable-on-save))%0A%20;;%20emacs%20ipython%20notebook%0A%20(use-package%20ein%0A%20:ensure%20t)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Emacs%20lisp%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20paredit%0A%20:ensure%20t%0A%20:commands%20(paredit-mode)%0A%20:config%0A%20(progn%0A%20(defvar%20electrify-return-match%20"%5B\%5D}\)\"%5D"%0A%20"If%20this%20regexp%20matches%20the%20text%20after%20the%20cursor,%20do%20an%20\"electric\"%0A%20return.")%0A%0A%20(defun%20electrify-return-if-match%20(arg)%0A%20"If%20the%20text%20after%20the%20cursor%20matches%0A%20`electrify-return-match'%20then%20open%20and%20indent%20an%20empty%20line%0A%20between%20the%20cursor%20and%20the%20text.%20Move%20the%20cursor%20to%20the%20new%20line."%0A%20(interactive%20"P")%0A%20(let%20((case-fold-search%20nil))%0A%20(if%20(looking-at%20electrify-return-match)%0A%20(save-excursion%20(newline-and-indent)))%0A%20(newline%20arg)%0A%20(indent-according-to-mode)))%0A%20))%0A%0A(defun%20my/lisp-mode%20()%0A%20(paredit-mode%20t)%20%0A%20(turn-on-eldoc-mode)%0A%20(eldoc-add-command%0A%20'paredit-backward-delete%0A%20'paredit-close-round)%0A%20(local-set-key%20(kbd%20"RET")%20'electrify-return-if-match)%0A%20(eldoc-add-command%20'electrify-return-if-match)%0A%20(show-paren-mode%20t))%0A%0A(add-hook%20'emacs-lisp-mode-hook%20'my/lisp-mode)%0A(add-hook%20'eval-expression-minibuffer-setup-hook%20'my/lisp-mode)%0A%0A;;(use-package%20rainbow-delimiters)%0A%0A#+END_SRC%0A%0A**%20Shell%20script%0A**%20Ruby%0A%0ARuby-mode%20is%20included%20with%20Emacs%20(23+).%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ruby-mode%0A%20:diminish%20"%F0%9F%92%8E"%0A%20)%0A%0A;;%20Rubyish%20file%20extensions:%0A(add-to-list%20'auto-mode-alist%0A%20'("\\.\\(?:cap\\|gemspec\\|irbrc\\|gemrc\\|rake\\|rb\\|ru\\|thor\\)\\'"%20%0A%20.%20ruby-mode))%0A(add-to-list%20'auto-mode-alist%0A%20'("\\(?:Brewfile\\|Capfile\\|Gemfile\\(?:\\.%5Ba-zA-Z0-9._-%5D+\\)?\\|%5BrR%5Dakefile\\)\\'"%20%0A%20.%20ruby-mode))%0A%0A;;%20inf-ruby%20gives%20us%20a%20Ruby%20REPL%0A;;%20not%20in%20Melpa-stable.%20TODO%20put%20it%20in%20vendor/%0A(use-package%20inf-ruby%0A%20:config%20%0A%20(add-hook%20'ruby-mode-hook%20'inf-ruby-minor-mode)%0A%20)%0A#+END_SRC%0A%0A**%20Go%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20install%20godef%20w/%20go%20get%20github.com/rogpeppe/godef%0A(use-package%20go-mode%0A%20:ensure%20t%0A%20)%0A%0A;;%20requires%20gocode:%20go%20get%20-u%20github.com/nsf/gocode%0A(use-package%20go-eldoc%0A%20:ensure%20t%0A%20)%0A(use-package%20company-go%0A%20:ensure%20t%0A%20)%0A%0A%0A(add-hook%20'go-mode-hook%20%0A%20(lambda%20()%0A%20(add-hook%20'before-save-hook%20#'gofmt-before-save)%0A%20(local-set-key%20(kbd%20"M-.")%20#'godef-jump)%0A%20(flycheck-mode%201)))%0A(add-hook%20'go-mode-hook%20'go-eldoc-setup)%0A%0A#+END_SRC%0A%0A**%20Web%20mode%0A%0A][Web\ mode:1]]
(use-package web-mode
  :ensure t
  :init
  (setq web-mode-enable-auto-pairing t)
  (setq web-mode-enable-css-colorization t)
  (setq web-mode-enable-current-element-highlight t)
  (setq web-mode-enable-current-column-highlight t)
  (setq web-mode-ac-sources-alist
        '(("css" . (ac-source-css-property))
          ("html" . (ac-source-words-in-buffer ac-source-abbrev)))
        )
  :config
  (add-to-list 'auto-mode-alist '("\\.erb\\'" . web-mode))
  (add-to-list 'auto-mode-alist '("\\.djhtml\\'" . web-mode))
  (add-to-list 'auto-mode-alist '("\\.dtl\\'" . web-mode))
  (add-to-list 'auto-mode-alist '("\\.html?\\'" . web-mode))
  )
;; Web\ mode:1 ends here

;; AUCTeX

;;    -dnf install -y emacs-auctex-


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dockerfile-mode%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20docker%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Puppet%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20puppet-mode%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Vagrant%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20vagrant%0A%20:ensure%20t)%0A;;%20(use-package%20vagrant-tramp%0A;;%20:ensure%20t)%0A#+END_SRC%0A%0A*%20Programming%0A**%20General%20programming%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20compilation:%20don't%20ask%20about%20saving,%20don't%20save,%20and%20add%20helper%20to%20shell%20mode.%0A(setq%20compilation-ask-about-save%20nil)%0A(setq%20compilation-save-buffers-predicate%20'(lambda%20()%20nil))%0A(add-hook%20'shell-mode-hook%20'compilation-shell-minor-mode)%0A%0A;;%20make%20a%20file%20executable%20if%20it%20starts%20with%20#!%0A(add-hook%0A%20'after-save-hook%0A%20'executable-make-buffer-file-executable-if-script-p)%0A%0A%0A(use-package%20company%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-company-mode)%0A%20(use-package%20company-quickhelp%0A%20:ensure%20t%0A%20:config%0A%20(setq%20company-quickhelp-idle-delay%203)%0A%20(company-quickhelp-mode%201)%0A%20)%0A%20(use-package%20company-emoji%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'markdown-mode-hook%20'company-mode)%0A%20(add-hook%20'markdown-mode-hook%20'company-emoji-init)%20%0A%20)%0A%20(use-package%20company-jedi%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:config%20(add-to-list%20'company-backends%20'company-jedi)%20%0A%20)%20%0A%20)%0A%0A%0A(use-package%20flycheck%0A%20:ensure%20t%0A%20:defer%20t%0A%20:commands%20(flycheck-mode)%0A%20:diminish%20""%0A%20:init%20(global-flycheck-mode)%0A%20:bind%0A%20(("M-g%20M-n"%20.%20flycheck-next-error)%0A%20("M-g%20M-p"%20.%20flycheck-previous-error)%0A%20("M-g%20M-="%20.%20flycheck-list-errors))%0A%20:config%0A%20(setq-default%20flycheck-disabled-checkers%20'(emacs-lisp-checkdoc))%0A%20)%0A%0A(use-package%20aggressive-indent%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:commands%20(aggressive-indent-mode)%0A%20:config%20%0A%20(add-to-list%20'aggressive-indent-excluded-modes%20'elpy-mode)%20;;%20aggressive%20indent%20is%20too%20aggressive%20for%20python%0A%20(aggressive-indent-global-mode%201))%0A%0A(use-package%20rainbow-mode%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20yasnippet%0A%20:ensure%20t%0A%20:init%0A%20(yas-global-mode%201)%0A%20)%0A%0A%0A(add-hook%20'prog-mode-hook%20'flyspell-prog-mode)%0A(add-hook%20'prog-mode-hook%20'imenu-add-menubar-index)%0A(add-hook%20'prog-mode-hook%20'aggressive-indent-mode)%0A%0A#+END_SRC%0A**%20Makefile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20my-makefile-hook%0A%20(setq%20indent-tabs-mode%20t)%0A%20)%0A(add-hook%20'makefile-mode-hook%20'my-makefile-hook)%0A#+END_SRC%0A%0A**%20Projectile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20projectile%0A%20:ensure%20t%0A%20:config%20(projectile-global-mode%201)%0A%20:diminish%20projectile-mode%0A%20:init%0A%20(progn%0A%20(setq%20projectile-file-exists-remote-cache-expire%20(*%2030%2060))%0A%20(setq%20projectile-switch-project-action%20'projectile-find-file-dwim)))%0A%0A#+END_SRC%0A%0A**%20Python%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20elpy%0A%20:ensure%20t%0A%20:commands%20(elpy-enable)%0A%20:diminish%20"%F0%9F%90%8D"%0A%20:init%20%0A%20(setq%20elpy-rpc-backend%20"jedi"%0A%20elpy-rpc-project-specific%20't%0A%20)%0A%20(elpy-enable)%0A%20:config%0A%20(elpy-use-ipython%20"ipython3")%20%0A%20(when%20(fboundp%20'flycheck-mode)%0A%20(setq%20elpy-modules%20(delete%20'elpy-module-flymake%20elpy-modules)))%0A%20;;%20fix%20PEP8%20compliance%20on%20save%0A%20(use-package%20py-autopep8%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'elpy-mode-hook%20'py-autopep8-enable-on-save))%0A%20;;%20emacs%20ipython%20notebook%0A%20(use-package%20ein%0A%20:ensure%20t)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Emacs%20lisp%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20paredit%0A%20:ensure%20t%0A%20:commands%20(paredit-mode)%0A%20:config%0A%20(progn%0A%20(defvar%20electrify-return-match%20"%5B\%5D}\)\"%5D"%0A%20"If%20this%20regexp%20matches%20the%20text%20after%20the%20cursor,%20do%20an%20\"electric\"%0A%20return.")%0A%0A%20(defun%20electrify-return-if-match%20(arg)%0A%20"If%20the%20text%20after%20the%20cursor%20matches%0A%20`electrify-return-match'%20then%20open%20and%20indent%20an%20empty%20line%0A%20between%20the%20cursor%20and%20the%20text.%20Move%20the%20cursor%20to%20the%20new%20line."%0A%20(interactive%20"P")%0A%20(let%20((case-fold-search%20nil))%0A%20(if%20(looking-at%20electrify-return-match)%0A%20(save-excursion%20(newline-and-indent)))%0A%20(newline%20arg)%0A%20(indent-according-to-mode)))%0A%20))%0A%0A(defun%20my/lisp-mode%20()%0A%20(paredit-mode%20t)%20%0A%20(turn-on-eldoc-mode)%0A%20(eldoc-add-command%0A%20'paredit-backward-delete%0A%20'paredit-close-round)%0A%20(local-set-key%20(kbd%20"RET")%20'electrify-return-if-match)%0A%20(eldoc-add-command%20'electrify-return-if-match)%0A%20(show-paren-mode%20t))%0A%0A(add-hook%20'emacs-lisp-mode-hook%20'my/lisp-mode)%0A(add-hook%20'eval-expression-minibuffer-setup-hook%20'my/lisp-mode)%0A%0A;;(use-package%20rainbow-delimiters)%0A%0A#+END_SRC%0A%0A**%20Shell%20script%0A**%20Ruby%0A%0ARuby-mode%20is%20included%20with%20Emacs%20(23+).%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ruby-mode%0A%20:diminish%20"%F0%9F%92%8E"%0A%20)%0A%0A;;%20Rubyish%20file%20extensions:%0A(add-to-list%20'auto-mode-alist%0A%20'("\\.\\(?:cap\\|gemspec\\|irbrc\\|gemrc\\|rake\\|rb\\|ru\\|thor\\)\\'"%20%0A%20.%20ruby-mode))%0A(add-to-list%20'auto-mode-alist%0A%20'("\\(?:Brewfile\\|Capfile\\|Gemfile\\(?:\\.%5Ba-zA-Z0-9._-%5D+\\)?\\|%5BrR%5Dakefile\\)\\'"%20%0A%20.%20ruby-mode))%0A%0A;;%20inf-ruby%20gives%20us%20a%20Ruby%20REPL%0A;;%20not%20in%20Melpa-stable.%20TODO%20put%20it%20in%20vendor/%0A(use-package%20inf-ruby%0A%20:config%20%0A%20(add-hook%20'ruby-mode-hook%20'inf-ruby-minor-mode)%0A%20)%0A#+END_SRC%0A%0A**%20Go%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20install%20godef%20w/%20go%20get%20github.com/rogpeppe/godef%0A(use-package%20go-mode%0A%20:ensure%20t%0A%20)%0A%0A;;%20requires%20gocode:%20go%20get%20-u%20github.com/nsf/gocode%0A(use-package%20go-eldoc%0A%20:ensure%20t%0A%20)%0A(use-package%20company-go%0A%20:ensure%20t%0A%20)%0A%0A%0A(add-hook%20'go-mode-hook%20%0A%20(lambda%20()%0A%20(add-hook%20'before-save-hook%20#'gofmt-before-save)%0A%20(local-set-key%20(kbd%20"M-.")%20#'godef-jump)%0A%20(flycheck-mode%201)))%0A(add-hook%20'go-mode-hook%20'go-eldoc-setup)%0A%0A#+END_SRC%0A%0A**%20Web%20mode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20web-mode%0A%20:ensure%20t%0A%20:init%0A%20(setq%20web-mode-enable-auto-pairing%20t)%0A%20(setq%20web-mode-enable-css-colorization%20t)%0A%20(setq%20web-mode-enable-current-element-highlight%20t)%0A%20(setq%20web-mode-enable-current-column-highlight%20t)%0A%20(setq%20web-mode-ac-sources-alist%0A%20'(("css"%20.%20(ac-source-css-property))%0A%20("html"%20.%20(ac-source-words-in-buffer%20ac-source-abbrev)))%0A%20)%0A%20:config%0A%20(add-to-list%20'auto-mode-alist%20'("\\.erb\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.djhtml\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.dtl\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.html?\\'"%20.%20web-mode))%0A%20)%0A#+END_SRC%0A%0A*%20Writing%0A%20General%20writing%20settings.%0A%0A**%20AUCTeX%0A%0A%20-dnf%20install%20-y%20emacs-auctex-%0A%0A][AUCTeX:1]]
(when (require 'tex-site nil 'noerror)
  ;; currently using Auctex from Fedora.
  ;; these are recommended in info
  (setq TeX-auto-save t)
  (setq TeX-parse-self t)
  ;;(setq-default TeX-master nil)
  ;; we don't care for Computer Modern, let's use All. The. Fonts.
  (setq latex-run-command  "latexmk -xelatex")
  ;; mkiv is the recommended ConTeXt version
  (setq ConTeXt-Mark-version "IV")
  )
;; AUCTeX:1 ends here

;; Proselint

;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dockerfile-mode%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20docker%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Puppet%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20puppet-mode%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Vagrant%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20vagrant%0A%20:ensure%20t)%0A;;%20(use-package%20vagrant-tramp%0A;;%20:ensure%20t)%0A#+END_SRC%0A%0A*%20Programming%0A**%20General%20programming%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20compilation:%20don't%20ask%20about%20saving,%20don't%20save,%20and%20add%20helper%20to%20shell%20mode.%0A(setq%20compilation-ask-about-save%20nil)%0A(setq%20compilation-save-buffers-predicate%20'(lambda%20()%20nil))%0A(add-hook%20'shell-mode-hook%20'compilation-shell-minor-mode)%0A%0A;;%20make%20a%20file%20executable%20if%20it%20starts%20with%20#!%0A(add-hook%0A%20'after-save-hook%0A%20'executable-make-buffer-file-executable-if-script-p)%0A%0A%0A(use-package%20company%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-company-mode)%0A%20(use-package%20company-quickhelp%0A%20:ensure%20t%0A%20:config%0A%20(setq%20company-quickhelp-idle-delay%203)%0A%20(company-quickhelp-mode%201)%0A%20)%0A%20(use-package%20company-emoji%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'markdown-mode-hook%20'company-mode)%0A%20(add-hook%20'markdown-mode-hook%20'company-emoji-init)%20%0A%20)%0A%20(use-package%20company-jedi%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:config%20(add-to-list%20'company-backends%20'company-jedi)%20%0A%20)%20%0A%20)%0A%0A%0A(use-package%20flycheck%0A%20:ensure%20t%0A%20:defer%20t%0A%20:commands%20(flycheck-mode)%0A%20:diminish%20""%0A%20:init%20(global-flycheck-mode)%0A%20:bind%0A%20(("M-g%20M-n"%20.%20flycheck-next-error)%0A%20("M-g%20M-p"%20.%20flycheck-previous-error)%0A%20("M-g%20M-="%20.%20flycheck-list-errors))%0A%20:config%0A%20(setq-default%20flycheck-disabled-checkers%20'(emacs-lisp-checkdoc))%0A%20)%0A%0A(use-package%20aggressive-indent%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:commands%20(aggressive-indent-mode)%0A%20:config%20%0A%20(add-to-list%20'aggressive-indent-excluded-modes%20'elpy-mode)%20;;%20aggressive%20indent%20is%20too%20aggressive%20for%20python%0A%20(aggressive-indent-global-mode%201))%0A%0A(use-package%20rainbow-mode%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20yasnippet%0A%20:ensure%20t%0A%20:init%0A%20(yas-global-mode%201)%0A%20)%0A%0A%0A(add-hook%20'prog-mode-hook%20'flyspell-prog-mode)%0A(add-hook%20'prog-mode-hook%20'imenu-add-menubar-index)%0A(add-hook%20'prog-mode-hook%20'aggressive-indent-mode)%0A%0A#+END_SRC%0A**%20Makefile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20my-makefile-hook%0A%20(setq%20indent-tabs-mode%20t)%0A%20)%0A(add-hook%20'makefile-mode-hook%20'my-makefile-hook)%0A#+END_SRC%0A%0A**%20Projectile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20projectile%0A%20:ensure%20t%0A%20:config%20(projectile-global-mode%201)%0A%20:diminish%20projectile-mode%0A%20:init%0A%20(progn%0A%20(setq%20projectile-file-exists-remote-cache-expire%20(*%2030%2060))%0A%20(setq%20projectile-switch-project-action%20'projectile-find-file-dwim)))%0A%0A#+END_SRC%0A%0A**%20Python%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20elpy%0A%20:ensure%20t%0A%20:commands%20(elpy-enable)%0A%20:diminish%20"%F0%9F%90%8D"%0A%20:init%20%0A%20(setq%20elpy-rpc-backend%20"jedi"%0A%20elpy-rpc-project-specific%20't%0A%20)%0A%20(elpy-enable)%0A%20:config%0A%20(elpy-use-ipython%20"ipython3")%20%0A%20(when%20(fboundp%20'flycheck-mode)%0A%20(setq%20elpy-modules%20(delete%20'elpy-module-flymake%20elpy-modules)))%0A%20;;%20fix%20PEP8%20compliance%20on%20save%0A%20(use-package%20py-autopep8%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'elpy-mode-hook%20'py-autopep8-enable-on-save))%0A%20;;%20emacs%20ipython%20notebook%0A%20(use-package%20ein%0A%20:ensure%20t)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Emacs%20lisp%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20paredit%0A%20:ensure%20t%0A%20:commands%20(paredit-mode)%0A%20:config%0A%20(progn%0A%20(defvar%20electrify-return-match%20"%5B\%5D}\)\"%5D"%0A%20"If%20this%20regexp%20matches%20the%20text%20after%20the%20cursor,%20do%20an%20\"electric\"%0A%20return.")%0A%0A%20(defun%20electrify-return-if-match%20(arg)%0A%20"If%20the%20text%20after%20the%20cursor%20matches%0A%20`electrify-return-match'%20then%20open%20and%20indent%20an%20empty%20line%0A%20between%20the%20cursor%20and%20the%20text.%20Move%20the%20cursor%20to%20the%20new%20line."%0A%20(interactive%20"P")%0A%20(let%20((case-fold-search%20nil))%0A%20(if%20(looking-at%20electrify-return-match)%0A%20(save-excursion%20(newline-and-indent)))%0A%20(newline%20arg)%0A%20(indent-according-to-mode)))%0A%20))%0A%0A(defun%20my/lisp-mode%20()%0A%20(paredit-mode%20t)%20%0A%20(turn-on-eldoc-mode)%0A%20(eldoc-add-command%0A%20'paredit-backward-delete%0A%20'paredit-close-round)%0A%20(local-set-key%20(kbd%20"RET")%20'electrify-return-if-match)%0A%20(eldoc-add-command%20'electrify-return-if-match)%0A%20(show-paren-mode%20t))%0A%0A(add-hook%20'emacs-lisp-mode-hook%20'my/lisp-mode)%0A(add-hook%20'eval-expression-minibuffer-setup-hook%20'my/lisp-mode)%0A%0A;;(use-package%20rainbow-delimiters)%0A%0A#+END_SRC%0A%0A**%20Shell%20script%0A**%20Ruby%0A%0ARuby-mode%20is%20included%20with%20Emacs%20(23+).%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ruby-mode%0A%20:diminish%20"%F0%9F%92%8E"%0A%20)%0A%0A;;%20Rubyish%20file%20extensions:%0A(add-to-list%20'auto-mode-alist%0A%20'("\\.\\(?:cap\\|gemspec\\|irbrc\\|gemrc\\|rake\\|rb\\|ru\\|thor\\)\\'"%20%0A%20.%20ruby-mode))%0A(add-to-list%20'auto-mode-alist%0A%20'("\\(?:Brewfile\\|Capfile\\|Gemfile\\(?:\\.%5Ba-zA-Z0-9._-%5D+\\)?\\|%5BrR%5Dakefile\\)\\'"%20%0A%20.%20ruby-mode))%0A%0A;;%20inf-ruby%20gives%20us%20a%20Ruby%20REPL%0A;;%20not%20in%20Melpa-stable.%20TODO%20put%20it%20in%20vendor/%0A(use-package%20inf-ruby%0A%20:config%20%0A%20(add-hook%20'ruby-mode-hook%20'inf-ruby-minor-mode)%0A%20)%0A#+END_SRC%0A%0A**%20Go%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20install%20godef%20w/%20go%20get%20github.com/rogpeppe/godef%0A(use-package%20go-mode%0A%20:ensure%20t%0A%20)%0A%0A;;%20requires%20gocode:%20go%20get%20-u%20github.com/nsf/gocode%0A(use-package%20go-eldoc%0A%20:ensure%20t%0A%20)%0A(use-package%20company-go%0A%20:ensure%20t%0A%20)%0A%0A%0A(add-hook%20'go-mode-hook%20%0A%20(lambda%20()%0A%20(add-hook%20'before-save-hook%20#'gofmt-before-save)%0A%20(local-set-key%20(kbd%20"M-.")%20#'godef-jump)%0A%20(flycheck-mode%201)))%0A(add-hook%20'go-mode-hook%20'go-eldoc-setup)%0A%0A#+END_SRC%0A%0A**%20Web%20mode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20web-mode%0A%20:ensure%20t%0A%20:init%0A%20(setq%20web-mode-enable-auto-pairing%20t)%0A%20(setq%20web-mode-enable-css-colorization%20t)%0A%20(setq%20web-mode-enable-current-element-highlight%20t)%0A%20(setq%20web-mode-enable-current-column-highlight%20t)%0A%20(setq%20web-mode-ac-sources-alist%0A%20'(("css"%20.%20(ac-source-css-property))%0A%20("html"%20.%20(ac-source-words-in-buffer%20ac-source-abbrev)))%0A%20)%0A%20:config%0A%20(add-to-list%20'auto-mode-alist%20'("\\.erb\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.djhtml\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.dtl\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.html?\\'"%20.%20web-mode))%0A%20)%0A#+END_SRC%0A%0A*%20Writing%0A%20General%20writing%20settings.%0A%0A**%20AUCTeX%0A%0A%20-dnf%20install%20-y%20emacs-auctex-%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(when%20(require%20'tex-site%20nil%20'noerror)%0A%20;;%20currently%20using%20Auctex%20from%20Fedora.%0A%20;;%20these%20are%20recommended%20in%20info%0A%20(setq%20TeX-auto-save%20t)%0A%20(setq%20TeX-parse-self%20t)%0A%20;;(setq-default%20TeX-master%20nil)%0A%20;;%20we%20don't%20care%20for%20Computer%20Modern,%20let's%20use%20All.%20The.%20Fonts.%0A%20(setq%20latex-run-command%20"latexmk%20-xelatex")%0A%20;;%20mkiv%20is%20the%20recommended%20ConTeXt%20version%0A%20(setq%20ConTeXt-Mark-version%20"IV")%0A%20)%0A#+END_SRC%0A%0A**%20Proselint%0A][Proselint:1]]
;; Requires 'pip install proselint'
;;
;; From https://github.com/amperser/proselint/tree/master/plugins/flycheck
;; (flycheck-define-checker proselint
;;   "A linter for prose."
;;   :command ("proselint" source-inplace)
;;   :error-patterns
;;   ((warning line-start (file-name) ":" line ":" column ": "
;;             (id (one-or-more (not (any " "))))
;;             (message (one-or-more not-newline)
;;                      (zero-or-more "\n" (any " ") (one-or-more not-newline)))
;;             line-end))
;;   :modes (text-mode org-mode markdown-mode gfm-mode))

;; (add-to-list 'flycheck-checkers 'proselint)

;; (add-hook 'text-mode-hook #'flycheck-mode)
;; (add-hook 'org-mode-hook #'flycheck-mode)
;; (add-hook 'markdown-mode-hook #'flycheck-mode)
;; (add-hook 'gfm-mode-hook #'flycheck-mode)
;; Proselint:1 ends here

;; Spelling
;;    Use wcheck-mode

;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dockerfile-mode%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20docker%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Puppet%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20puppet-mode%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Vagrant%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20vagrant%0A%20:ensure%20t)%0A;;%20(use-package%20vagrant-tramp%0A;;%20:ensure%20t)%0A#+END_SRC%0A%0A*%20Programming%0A**%20General%20programming%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20compilation:%20don't%20ask%20about%20saving,%20don't%20save,%20and%20add%20helper%20to%20shell%20mode.%0A(setq%20compilation-ask-about-save%20nil)%0A(setq%20compilation-save-buffers-predicate%20'(lambda%20()%20nil))%0A(add-hook%20'shell-mode-hook%20'compilation-shell-minor-mode)%0A%0A;;%20make%20a%20file%20executable%20if%20it%20starts%20with%20#!%0A(add-hook%0A%20'after-save-hook%0A%20'executable-make-buffer-file-executable-if-script-p)%0A%0A%0A(use-package%20company%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-company-mode)%0A%20(use-package%20company-quickhelp%0A%20:ensure%20t%0A%20:config%0A%20(setq%20company-quickhelp-idle-delay%203)%0A%20(company-quickhelp-mode%201)%0A%20)%0A%20(use-package%20company-emoji%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'markdown-mode-hook%20'company-mode)%0A%20(add-hook%20'markdown-mode-hook%20'company-emoji-init)%20%0A%20)%0A%20(use-package%20company-jedi%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:config%20(add-to-list%20'company-backends%20'company-jedi)%20%0A%20)%20%0A%20)%0A%0A%0A(use-package%20flycheck%0A%20:ensure%20t%0A%20:defer%20t%0A%20:commands%20(flycheck-mode)%0A%20:diminish%20""%0A%20:init%20(global-flycheck-mode)%0A%20:bind%0A%20(("M-g%20M-n"%20.%20flycheck-next-error)%0A%20("M-g%20M-p"%20.%20flycheck-previous-error)%0A%20("M-g%20M-="%20.%20flycheck-list-errors))%0A%20:config%0A%20(setq-default%20flycheck-disabled-checkers%20'(emacs-lisp-checkdoc))%0A%20)%0A%0A(use-package%20aggressive-indent%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:commands%20(aggressive-indent-mode)%0A%20:config%20%0A%20(add-to-list%20'aggressive-indent-excluded-modes%20'elpy-mode)%20;;%20aggressive%20indent%20is%20too%20aggressive%20for%20python%0A%20(aggressive-indent-global-mode%201))%0A%0A(use-package%20rainbow-mode%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20yasnippet%0A%20:ensure%20t%0A%20:init%0A%20(yas-global-mode%201)%0A%20)%0A%0A%0A(add-hook%20'prog-mode-hook%20'flyspell-prog-mode)%0A(add-hook%20'prog-mode-hook%20'imenu-add-menubar-index)%0A(add-hook%20'prog-mode-hook%20'aggressive-indent-mode)%0A%0A#+END_SRC%0A**%20Makefile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20my-makefile-hook%0A%20(setq%20indent-tabs-mode%20t)%0A%20)%0A(add-hook%20'makefile-mode-hook%20'my-makefile-hook)%0A#+END_SRC%0A%0A**%20Projectile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20projectile%0A%20:ensure%20t%0A%20:config%20(projectile-global-mode%201)%0A%20:diminish%20projectile-mode%0A%20:init%0A%20(progn%0A%20(setq%20projectile-file-exists-remote-cache-expire%20(*%2030%2060))%0A%20(setq%20projectile-switch-project-action%20'projectile-find-file-dwim)))%0A%0A#+END_SRC%0A%0A**%20Python%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20elpy%0A%20:ensure%20t%0A%20:commands%20(elpy-enable)%0A%20:diminish%20"%F0%9F%90%8D"%0A%20:init%20%0A%20(setq%20elpy-rpc-backend%20"jedi"%0A%20elpy-rpc-project-specific%20't%0A%20)%0A%20(elpy-enable)%0A%20:config%0A%20(elpy-use-ipython%20"ipython3")%20%0A%20(when%20(fboundp%20'flycheck-mode)%0A%20(setq%20elpy-modules%20(delete%20'elpy-module-flymake%20elpy-modules)))%0A%20;;%20fix%20PEP8%20compliance%20on%20save%0A%20(use-package%20py-autopep8%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'elpy-mode-hook%20'py-autopep8-enable-on-save))%0A%20;;%20emacs%20ipython%20notebook%0A%20(use-package%20ein%0A%20:ensure%20t)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Emacs%20lisp%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20paredit%0A%20:ensure%20t%0A%20:commands%20(paredit-mode)%0A%20:config%0A%20(progn%0A%20(defvar%20electrify-return-match%20"%5B\%5D}\)\"%5D"%0A%20"If%20this%20regexp%20matches%20the%20text%20after%20the%20cursor,%20do%20an%20\"electric\"%0A%20return.")%0A%0A%20(defun%20electrify-return-if-match%20(arg)%0A%20"If%20the%20text%20after%20the%20cursor%20matches%0A%20`electrify-return-match'%20then%20open%20and%20indent%20an%20empty%20line%0A%20between%20the%20cursor%20and%20the%20text.%20Move%20the%20cursor%20to%20the%20new%20line."%0A%20(interactive%20"P")%0A%20(let%20((case-fold-search%20nil))%0A%20(if%20(looking-at%20electrify-return-match)%0A%20(save-excursion%20(newline-and-indent)))%0A%20(newline%20arg)%0A%20(indent-according-to-mode)))%0A%20))%0A%0A(defun%20my/lisp-mode%20()%0A%20(paredit-mode%20t)%20%0A%20(turn-on-eldoc-mode)%0A%20(eldoc-add-command%0A%20'paredit-backward-delete%0A%20'paredit-close-round)%0A%20(local-set-key%20(kbd%20"RET")%20'electrify-return-if-match)%0A%20(eldoc-add-command%20'electrify-return-if-match)%0A%20(show-paren-mode%20t))%0A%0A(add-hook%20'emacs-lisp-mode-hook%20'my/lisp-mode)%0A(add-hook%20'eval-expression-minibuffer-setup-hook%20'my/lisp-mode)%0A%0A;;(use-package%20rainbow-delimiters)%0A%0A#+END_SRC%0A%0A**%20Shell%20script%0A**%20Ruby%0A%0ARuby-mode%20is%20included%20with%20Emacs%20(23+).%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ruby-mode%0A%20:diminish%20"%F0%9F%92%8E"%0A%20)%0A%0A;;%20Rubyish%20file%20extensions:%0A(add-to-list%20'auto-mode-alist%0A%20'("\\.\\(?:cap\\|gemspec\\|irbrc\\|gemrc\\|rake\\|rb\\|ru\\|thor\\)\\'"%20%0A%20.%20ruby-mode))%0A(add-to-list%20'auto-mode-alist%0A%20'("\\(?:Brewfile\\|Capfile\\|Gemfile\\(?:\\.%5Ba-zA-Z0-9._-%5D+\\)?\\|%5BrR%5Dakefile\\)\\'"%20%0A%20.%20ruby-mode))%0A%0A;;%20inf-ruby%20gives%20us%20a%20Ruby%20REPL%0A;;%20not%20in%20Melpa-stable.%20TODO%20put%20it%20in%20vendor/%0A(use-package%20inf-ruby%0A%20:config%20%0A%20(add-hook%20'ruby-mode-hook%20'inf-ruby-minor-mode)%0A%20)%0A#+END_SRC%0A%0A**%20Go%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20install%20godef%20w/%20go%20get%20github.com/rogpeppe/godef%0A(use-package%20go-mode%0A%20:ensure%20t%0A%20)%0A%0A;;%20requires%20gocode:%20go%20get%20-u%20github.com/nsf/gocode%0A(use-package%20go-eldoc%0A%20:ensure%20t%0A%20)%0A(use-package%20company-go%0A%20:ensure%20t%0A%20)%0A%0A%0A(add-hook%20'go-mode-hook%20%0A%20(lambda%20()%0A%20(add-hook%20'before-save-hook%20#'gofmt-before-save)%0A%20(local-set-key%20(kbd%20"M-.")%20#'godef-jump)%0A%20(flycheck-mode%201)))%0A(add-hook%20'go-mode-hook%20'go-eldoc-setup)%0A%0A#+END_SRC%0A%0A**%20Web%20mode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20web-mode%0A%20:ensure%20t%0A%20:init%0A%20(setq%20web-mode-enable-auto-pairing%20t)%0A%20(setq%20web-mode-enable-css-colorization%20t)%0A%20(setq%20web-mode-enable-current-element-highlight%20t)%0A%20(setq%20web-mode-enable-current-column-highlight%20t)%0A%20(setq%20web-mode-ac-sources-alist%0A%20'(("css"%20.%20(ac-source-css-property))%0A%20("html"%20.%20(ac-source-words-in-buffer%20ac-source-abbrev)))%0A%20)%0A%20:config%0A%20(add-to-list%20'auto-mode-alist%20'("\\.erb\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.djhtml\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.dtl\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.html?\\'"%20.%20web-mode))%0A%20)%0A#+END_SRC%0A%0A*%20Writing%0A%20General%20writing%20settings.%0A%0A**%20AUCTeX%0A%0A%20-dnf%20install%20-y%20emacs-auctex-%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(when%20(require%20'tex-site%20nil%20'noerror)%0A%20;;%20currently%20using%20Auctex%20from%20Fedora.%0A%20;;%20these%20are%20recommended%20in%20info%0A%20(setq%20TeX-auto-save%20t)%0A%20(setq%20TeX-parse-self%20t)%0A%20;;(setq-default%20TeX-master%20nil)%0A%20;;%20we%20don't%20care%20for%20Computer%20Modern,%20let's%20use%20All.%20The.%20Fonts.%0A%20(setq%20latex-run-command%20"latexmk%20-xelatex")%0A%20;;%20mkiv%20is%20the%20recommended%20ConTeXt%20version%0A%20(setq%20ConTeXt-Mark-version%20"IV")%0A%20)%0A#+END_SRC%0A%0A**%20Proselint%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Requires%20'pip%20install%20proselint'%0A;;%0A;;%20From%20https:/github.com/amperser/proselint/tree/master/plugins/flycheck%0A;;%20(flycheck-define-checker%20proselint%0A;;%20"A%20linter%20for%20prose."%0A;;%20:command%20("proselint"%20source-inplace)%0A;;%20:error-patterns%0A;;%20((warning%20line-start%20(file-name)%20":"%20line%20":"%20column%20":%20"%0A;;%20(id%20(one-or-more%20(not%20(any%20"%20"))))%0A;;%20(message%20(one-or-more%20not-newline)%0A;;%20(zero-or-more%20"\n"%20(any%20"%20")%20(one-or-more%20not-newline)))%0A;;%20line-end))%0A;;%20:modes%20(text-mode%20org-mode%20markdown-mode%20gfm-mode))%0A%0A;;%20(add-to-list%20'flycheck-checkers%20'proselint)%0A%0A;;%20(add-hook%20'text-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'org-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'markdown-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'gfm-mode-hook%20#'flycheck-mode)%0A#+END_SRC%0A**%20Spelling%0A%20Use%20wcheck-mode%0A][Spelling:1]]
;; (use-package wcheck-mode
;;   :pin gnu
;;   :ensure t
;;   :commands (wcheck-mode wcheck-mode-languages wcheck-actions
;;                          wcheck-jump-forward wcheck-jump-backward)
;;   :init
;;   (setq wcheck-language-data
;;         '(("American English"
;;            (program . "aspell")
;;            (args "-l" "-d" "en_US")
;;            (action-program . "aspell")
;;            (action-args "-a" "-d" "en_US")
;;            (action-parser . wcheck-parser-ispell-suggestions))
;;           ("Finnish"
;;            (program . "enchant")
;;            (args "-l" "-d" "fi")
;;            (syntax . my-finnish-syntax-table)
;;            (action-program . "enchant")
;;            (action-args "-a" "-d" "fi")
;;            (action-parser . enchant-suggestion-menu))))

;;   :config
;;   (defun enchant-suggestions-menu (marked-text)
;;     (cons (cons "[Add to dictionary]" 'enchant-add-to-dictionary)
;;           (wcheck-parser-ispell-suggestions)))

;;   (defvar enchant-dictionaries-dir "~/.config/enchant")
;;   (defun enchant-add-to-dictionary (marked-text)
;;     (let* ((word (aref marked-text 0))
;;            (language (aref marked-text 4))
;;            (file (let ((code (nth 1 (member "-d" (wcheck-query-language-data
;;                                                   language 'action-args)))))
;;                    (when (stringp code)
;;                      (concat (file-name-as-directory enchant-dictionaries-dir)
;;                              code ".dic")))))
;;       (when (and file (file-writable-p file))
;;         (with-temp-buffer
;;           (insert word) (newline)
;;           (append-to-file (point-min) (point-max) file)
;;           (message "Added word \"%s\" to the %s dictionary"
;;                    word language)))))
;;   )  

;; use hunspell if we have it
(when (executable-find "hunspell")
  (setq-default ispell-program-name "hunspell")
  (setq ispell-really-hunspell t))

;; flyspell
(add-hook 'text-mode-hook (lambda ()
                            (flyspell-mode 1)))
(add-hook 'prog-mode-hook (lambda ()
                            (flyspell-prog-mode)))
;; Spelling:1 ends here

;; Markdown


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dockerfile-mode%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20docker%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Puppet%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20puppet-mode%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Vagrant%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20vagrant%0A%20:ensure%20t)%0A;;%20(use-package%20vagrant-tramp%0A;;%20:ensure%20t)%0A#+END_SRC%0A%0A*%20Programming%0A**%20General%20programming%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20compilation:%20don't%20ask%20about%20saving,%20don't%20save,%20and%20add%20helper%20to%20shell%20mode.%0A(setq%20compilation-ask-about-save%20nil)%0A(setq%20compilation-save-buffers-predicate%20'(lambda%20()%20nil))%0A(add-hook%20'shell-mode-hook%20'compilation-shell-minor-mode)%0A%0A;;%20make%20a%20file%20executable%20if%20it%20starts%20with%20#!%0A(add-hook%0A%20'after-save-hook%0A%20'executable-make-buffer-file-executable-if-script-p)%0A%0A%0A(use-package%20company%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-company-mode)%0A%20(use-package%20company-quickhelp%0A%20:ensure%20t%0A%20:config%0A%20(setq%20company-quickhelp-idle-delay%203)%0A%20(company-quickhelp-mode%201)%0A%20)%0A%20(use-package%20company-emoji%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'markdown-mode-hook%20'company-mode)%0A%20(add-hook%20'markdown-mode-hook%20'company-emoji-init)%20%0A%20)%0A%20(use-package%20company-jedi%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:config%20(add-to-list%20'company-backends%20'company-jedi)%20%0A%20)%20%0A%20)%0A%0A%0A(use-package%20flycheck%0A%20:ensure%20t%0A%20:defer%20t%0A%20:commands%20(flycheck-mode)%0A%20:diminish%20""%0A%20:init%20(global-flycheck-mode)%0A%20:bind%0A%20(("M-g%20M-n"%20.%20flycheck-next-error)%0A%20("M-g%20M-p"%20.%20flycheck-previous-error)%0A%20("M-g%20M-="%20.%20flycheck-list-errors))%0A%20:config%0A%20(setq-default%20flycheck-disabled-checkers%20'(emacs-lisp-checkdoc))%0A%20)%0A%0A(use-package%20aggressive-indent%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:commands%20(aggressive-indent-mode)%0A%20:config%20%0A%20(add-to-list%20'aggressive-indent-excluded-modes%20'elpy-mode)%20;;%20aggressive%20indent%20is%20too%20aggressive%20for%20python%0A%20(aggressive-indent-global-mode%201))%0A%0A(use-package%20rainbow-mode%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20yasnippet%0A%20:ensure%20t%0A%20:init%0A%20(yas-global-mode%201)%0A%20)%0A%0A%0A(add-hook%20'prog-mode-hook%20'flyspell-prog-mode)%0A(add-hook%20'prog-mode-hook%20'imenu-add-menubar-index)%0A(add-hook%20'prog-mode-hook%20'aggressive-indent-mode)%0A%0A#+END_SRC%0A**%20Makefile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20my-makefile-hook%0A%20(setq%20indent-tabs-mode%20t)%0A%20)%0A(add-hook%20'makefile-mode-hook%20'my-makefile-hook)%0A#+END_SRC%0A%0A**%20Projectile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20projectile%0A%20:ensure%20t%0A%20:config%20(projectile-global-mode%201)%0A%20:diminish%20projectile-mode%0A%20:init%0A%20(progn%0A%20(setq%20projectile-file-exists-remote-cache-expire%20(*%2030%2060))%0A%20(setq%20projectile-switch-project-action%20'projectile-find-file-dwim)))%0A%0A#+END_SRC%0A%0A**%20Python%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20elpy%0A%20:ensure%20t%0A%20:commands%20(elpy-enable)%0A%20:diminish%20"%F0%9F%90%8D"%0A%20:init%20%0A%20(setq%20elpy-rpc-backend%20"jedi"%0A%20elpy-rpc-project-specific%20't%0A%20)%0A%20(elpy-enable)%0A%20:config%0A%20(elpy-use-ipython%20"ipython3")%20%0A%20(when%20(fboundp%20'flycheck-mode)%0A%20(setq%20elpy-modules%20(delete%20'elpy-module-flymake%20elpy-modules)))%0A%20;;%20fix%20PEP8%20compliance%20on%20save%0A%20(use-package%20py-autopep8%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'elpy-mode-hook%20'py-autopep8-enable-on-save))%0A%20;;%20emacs%20ipython%20notebook%0A%20(use-package%20ein%0A%20:ensure%20t)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Emacs%20lisp%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20paredit%0A%20:ensure%20t%0A%20:commands%20(paredit-mode)%0A%20:config%0A%20(progn%0A%20(defvar%20electrify-return-match%20"%5B\%5D}\)\"%5D"%0A%20"If%20this%20regexp%20matches%20the%20text%20after%20the%20cursor,%20do%20an%20\"electric\"%0A%20return.")%0A%0A%20(defun%20electrify-return-if-match%20(arg)%0A%20"If%20the%20text%20after%20the%20cursor%20matches%0A%20`electrify-return-match'%20then%20open%20and%20indent%20an%20empty%20line%0A%20between%20the%20cursor%20and%20the%20text.%20Move%20the%20cursor%20to%20the%20new%20line."%0A%20(interactive%20"P")%0A%20(let%20((case-fold-search%20nil))%0A%20(if%20(looking-at%20electrify-return-match)%0A%20(save-excursion%20(newline-and-indent)))%0A%20(newline%20arg)%0A%20(indent-according-to-mode)))%0A%20))%0A%0A(defun%20my/lisp-mode%20()%0A%20(paredit-mode%20t)%20%0A%20(turn-on-eldoc-mode)%0A%20(eldoc-add-command%0A%20'paredit-backward-delete%0A%20'paredit-close-round)%0A%20(local-set-key%20(kbd%20"RET")%20'electrify-return-if-match)%0A%20(eldoc-add-command%20'electrify-return-if-match)%0A%20(show-paren-mode%20t))%0A%0A(add-hook%20'emacs-lisp-mode-hook%20'my/lisp-mode)%0A(add-hook%20'eval-expression-minibuffer-setup-hook%20'my/lisp-mode)%0A%0A;;(use-package%20rainbow-delimiters)%0A%0A#+END_SRC%0A%0A**%20Shell%20script%0A**%20Ruby%0A%0ARuby-mode%20is%20included%20with%20Emacs%20(23+).%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ruby-mode%0A%20:diminish%20"%F0%9F%92%8E"%0A%20)%0A%0A;;%20Rubyish%20file%20extensions:%0A(add-to-list%20'auto-mode-alist%0A%20'("\\.\\(?:cap\\|gemspec\\|irbrc\\|gemrc\\|rake\\|rb\\|ru\\|thor\\)\\'"%20%0A%20.%20ruby-mode))%0A(add-to-list%20'auto-mode-alist%0A%20'("\\(?:Brewfile\\|Capfile\\|Gemfile\\(?:\\.%5Ba-zA-Z0-9._-%5D+\\)?\\|%5BrR%5Dakefile\\)\\'"%20%0A%20.%20ruby-mode))%0A%0A;;%20inf-ruby%20gives%20us%20a%20Ruby%20REPL%0A;;%20not%20in%20Melpa-stable.%20TODO%20put%20it%20in%20vendor/%0A(use-package%20inf-ruby%0A%20:config%20%0A%20(add-hook%20'ruby-mode-hook%20'inf-ruby-minor-mode)%0A%20)%0A#+END_SRC%0A%0A**%20Go%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20install%20godef%20w/%20go%20get%20github.com/rogpeppe/godef%0A(use-package%20go-mode%0A%20:ensure%20t%0A%20)%0A%0A;;%20requires%20gocode:%20go%20get%20-u%20github.com/nsf/gocode%0A(use-package%20go-eldoc%0A%20:ensure%20t%0A%20)%0A(use-package%20company-go%0A%20:ensure%20t%0A%20)%0A%0A%0A(add-hook%20'go-mode-hook%20%0A%20(lambda%20()%0A%20(add-hook%20'before-save-hook%20#'gofmt-before-save)%0A%20(local-set-key%20(kbd%20"M-.")%20#'godef-jump)%0A%20(flycheck-mode%201)))%0A(add-hook%20'go-mode-hook%20'go-eldoc-setup)%0A%0A#+END_SRC%0A%0A**%20Web%20mode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20web-mode%0A%20:ensure%20t%0A%20:init%0A%20(setq%20web-mode-enable-auto-pairing%20t)%0A%20(setq%20web-mode-enable-css-colorization%20t)%0A%20(setq%20web-mode-enable-current-element-highlight%20t)%0A%20(setq%20web-mode-enable-current-column-highlight%20t)%0A%20(setq%20web-mode-ac-sources-alist%0A%20'(("css"%20.%20(ac-source-css-property))%0A%20("html"%20.%20(ac-source-words-in-buffer%20ac-source-abbrev)))%0A%20)%0A%20:config%0A%20(add-to-list%20'auto-mode-alist%20'("\\.erb\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.djhtml\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.dtl\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.html?\\'"%20.%20web-mode))%0A%20)%0A#+END_SRC%0A%0A*%20Writing%0A%20General%20writing%20settings.%0A%0A**%20AUCTeX%0A%0A%20-dnf%20install%20-y%20emacs-auctex-%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(when%20(require%20'tex-site%20nil%20'noerror)%0A%20;;%20currently%20using%20Auctex%20from%20Fedora.%0A%20;;%20these%20are%20recommended%20in%20info%0A%20(setq%20TeX-auto-save%20t)%0A%20(setq%20TeX-parse-self%20t)%0A%20;;(setq-default%20TeX-master%20nil)%0A%20;;%20we%20don't%20care%20for%20Computer%20Modern,%20let's%20use%20All.%20The.%20Fonts.%0A%20(setq%20latex-run-command%20"latexmk%20-xelatex")%0A%20;;%20mkiv%20is%20the%20recommended%20ConTeXt%20version%0A%20(setq%20ConTeXt-Mark-version%20"IV")%0A%20)%0A#+END_SRC%0A%0A**%20Proselint%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Requires%20'pip%20install%20proselint'%0A;;%0A;;%20From%20https:/github.com/amperser/proselint/tree/master/plugins/flycheck%0A;;%20(flycheck-define-checker%20proselint%0A;;%20"A%20linter%20for%20prose."%0A;;%20:command%20("proselint"%20source-inplace)%0A;;%20:error-patterns%0A;;%20((warning%20line-start%20(file-name)%20":"%20line%20":"%20column%20":%20"%0A;;%20(id%20(one-or-more%20(not%20(any%20"%20"))))%0A;;%20(message%20(one-or-more%20not-newline)%0A;;%20(zero-or-more%20"\n"%20(any%20"%20")%20(one-or-more%20not-newline)))%0A;;%20line-end))%0A;;%20:modes%20(text-mode%20org-mode%20markdown-mode%20gfm-mode))%0A%0A;;%20(add-to-list%20'flycheck-checkers%20'proselint)%0A%0A;;%20(add-hook%20'text-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'org-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'markdown-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'gfm-mode-hook%20#'flycheck-mode)%0A#+END_SRC%0A**%20Spelling%0A%20Use%20wcheck-mode%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20(use-package%20wcheck-mode%0A;;%20:pin%20gnu%0A;;%20:ensure%20t%0A;;%20:commands%20(wcheck-mode%20wcheck-mode-languages%20wcheck-actions%0A;;%20wcheck-jump-forward%20wcheck-jump-backward)%0A;;%20:init%0A;;%20(setq%20wcheck-language-data%0A;;%20'(("American%20English"%0A;;%20(program%20.%20"aspell")%0A;;%20(args%20"-l"%20"-d"%20"en_US")%0A;;%20(action-program%20.%20"aspell")%0A;;%20(action-args%20"-a"%20"-d"%20"en_US")%0A;;%20(action-parser%20.%20wcheck-parser-ispell-suggestions))%0A;;%20("Finnish"%0A;;%20(program%20.%20"enchant")%0A;;%20(args%20"-l"%20"-d"%20"fi")%0A;;%20(syntax%20.%20my-finnish-syntax-table)%0A;;%20(action-program%20.%20"enchant")%0A;;%20(action-args%20"-a"%20"-d"%20"fi")%0A;;%20(action-parser%20.%20enchant-suggestion-menu))))%0A%0A;;%20:config%0A;;%20(defun%20enchant-suggestions-menu%20(marked-text)%0A;;%20(cons%20(cons%20"%5BAdd%20to%20dictionary%5D"%20'enchant-add-to-dictionary)%0A;;%20(wcheck-parser-ispell-suggestions)))%0A%0A;;%20(defvar%20enchant-dictionaries-dir%20"~/.config/enchant")%0A;;%20(defun%20enchant-add-to-dictionary%20(marked-text)%0A;;%20(let*%20((word%20(aref%20marked-text%200))%0A;;%20(language%20(aref%20marked-text%204))%0A;;%20(file%20(let%20((code%20(nth%201%20(member%20"-d"%20(wcheck-query-language-data%0A;;%20language%20'action-args)))))%0A;;%20(when%20(stringp%20code)%0A;;%20(concat%20(file-name-as-directory%20enchant-dictionaries-dir)%0A;;%20code%20".dic")))))%0A;;%20(when%20(and%20file%20(file-writable-p%20file))%0A;;%20(with-temp-buffer%0A;;%20(insert%20word)%20(newline)%0A;;%20(append-to-file%20(point-min)%20(point-max)%20file)%0A;;%20(message%20"Added%20word%20\"%25s\"%20to%20the%20%25s%20dictionary"%0A;;%20word%20language)))))%0A;;%20)%20%0A%0A;;%20use%20hunspell%20if%20we%20have%20it%0A(when%20(executable-find%20"hunspell")%0A%20(setq-default%20ispell-program-name%20"hunspell")%0A%20(setq%20ispell-really-hunspell%20t))%0A%0A;;%20flyspell%0A(add-hook%20'text-mode-hook%20(lambda%20()%0A%20(flyspell-mode%201)))%0A(add-hook%20'prog-mode-hook%20(lambda%20()%0A%20(flyspell-prog-mode)))%0A%0A%0A#+END_SRC%0A%0A**%20Markdown%0A%0A][Markdown:1]]
(use-package markdown-mode
  :ensure t
  :commands (markdown-mode gfm-mode)
  :mode 
(("README\\.md\\'" . gfm-mode)
         ("\\.md\\'" . markdown-mode)
         ("\\.markdown\\'" . markdown-mode))
  :init 
(setq markdown-command "pandoc -f markdown -t html5")
)
;; Markdown:1 ends here

;; Pandoc

;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dockerfile-mode%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20docker%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Puppet%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20puppet-mode%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Vagrant%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20vagrant%0A%20:ensure%20t)%0A;;%20(use-package%20vagrant-tramp%0A;;%20:ensure%20t)%0A#+END_SRC%0A%0A*%20Programming%0A**%20General%20programming%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20compilation:%20don't%20ask%20about%20saving,%20don't%20save,%20and%20add%20helper%20to%20shell%20mode.%0A(setq%20compilation-ask-about-save%20nil)%0A(setq%20compilation-save-buffers-predicate%20'(lambda%20()%20nil))%0A(add-hook%20'shell-mode-hook%20'compilation-shell-minor-mode)%0A%0A;;%20make%20a%20file%20executable%20if%20it%20starts%20with%20#!%0A(add-hook%0A%20'after-save-hook%0A%20'executable-make-buffer-file-executable-if-script-p)%0A%0A%0A(use-package%20company%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-company-mode)%0A%20(use-package%20company-quickhelp%0A%20:ensure%20t%0A%20:config%0A%20(setq%20company-quickhelp-idle-delay%203)%0A%20(company-quickhelp-mode%201)%0A%20)%0A%20(use-package%20company-emoji%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'markdown-mode-hook%20'company-mode)%0A%20(add-hook%20'markdown-mode-hook%20'company-emoji-init)%20%0A%20)%0A%20(use-package%20company-jedi%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:config%20(add-to-list%20'company-backends%20'company-jedi)%20%0A%20)%20%0A%20)%0A%0A%0A(use-package%20flycheck%0A%20:ensure%20t%0A%20:defer%20t%0A%20:commands%20(flycheck-mode)%0A%20:diminish%20""%0A%20:init%20(global-flycheck-mode)%0A%20:bind%0A%20(("M-g%20M-n"%20.%20flycheck-next-error)%0A%20("M-g%20M-p"%20.%20flycheck-previous-error)%0A%20("M-g%20M-="%20.%20flycheck-list-errors))%0A%20:config%0A%20(setq-default%20flycheck-disabled-checkers%20'(emacs-lisp-checkdoc))%0A%20)%0A%0A(use-package%20aggressive-indent%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:commands%20(aggressive-indent-mode)%0A%20:config%20%0A%20(add-to-list%20'aggressive-indent-excluded-modes%20'elpy-mode)%20;;%20aggressive%20indent%20is%20too%20aggressive%20for%20python%0A%20(aggressive-indent-global-mode%201))%0A%0A(use-package%20rainbow-mode%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20yasnippet%0A%20:ensure%20t%0A%20:init%0A%20(yas-global-mode%201)%0A%20)%0A%0A%0A(add-hook%20'prog-mode-hook%20'flyspell-prog-mode)%0A(add-hook%20'prog-mode-hook%20'imenu-add-menubar-index)%0A(add-hook%20'prog-mode-hook%20'aggressive-indent-mode)%0A%0A#+END_SRC%0A**%20Makefile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20my-makefile-hook%0A%20(setq%20indent-tabs-mode%20t)%0A%20)%0A(add-hook%20'makefile-mode-hook%20'my-makefile-hook)%0A#+END_SRC%0A%0A**%20Projectile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20projectile%0A%20:ensure%20t%0A%20:config%20(projectile-global-mode%201)%0A%20:diminish%20projectile-mode%0A%20:init%0A%20(progn%0A%20(setq%20projectile-file-exists-remote-cache-expire%20(*%2030%2060))%0A%20(setq%20projectile-switch-project-action%20'projectile-find-file-dwim)))%0A%0A#+END_SRC%0A%0A**%20Python%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20elpy%0A%20:ensure%20t%0A%20:commands%20(elpy-enable)%0A%20:diminish%20"%F0%9F%90%8D"%0A%20:init%20%0A%20(setq%20elpy-rpc-backend%20"jedi"%0A%20elpy-rpc-project-specific%20't%0A%20)%0A%20(elpy-enable)%0A%20:config%0A%20(elpy-use-ipython%20"ipython3")%20%0A%20(when%20(fboundp%20'flycheck-mode)%0A%20(setq%20elpy-modules%20(delete%20'elpy-module-flymake%20elpy-modules)))%0A%20;;%20fix%20PEP8%20compliance%20on%20save%0A%20(use-package%20py-autopep8%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'elpy-mode-hook%20'py-autopep8-enable-on-save))%0A%20;;%20emacs%20ipython%20notebook%0A%20(use-package%20ein%0A%20:ensure%20t)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Emacs%20lisp%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20paredit%0A%20:ensure%20t%0A%20:commands%20(paredit-mode)%0A%20:config%0A%20(progn%0A%20(defvar%20electrify-return-match%20"%5B\%5D}\)\"%5D"%0A%20"If%20this%20regexp%20matches%20the%20text%20after%20the%20cursor,%20do%20an%20\"electric\"%0A%20return.")%0A%0A%20(defun%20electrify-return-if-match%20(arg)%0A%20"If%20the%20text%20after%20the%20cursor%20matches%0A%20`electrify-return-match'%20then%20open%20and%20indent%20an%20empty%20line%0A%20between%20the%20cursor%20and%20the%20text.%20Move%20the%20cursor%20to%20the%20new%20line."%0A%20(interactive%20"P")%0A%20(let%20((case-fold-search%20nil))%0A%20(if%20(looking-at%20electrify-return-match)%0A%20(save-excursion%20(newline-and-indent)))%0A%20(newline%20arg)%0A%20(indent-according-to-mode)))%0A%20))%0A%0A(defun%20my/lisp-mode%20()%0A%20(paredit-mode%20t)%20%0A%20(turn-on-eldoc-mode)%0A%20(eldoc-add-command%0A%20'paredit-backward-delete%0A%20'paredit-close-round)%0A%20(local-set-key%20(kbd%20"RET")%20'electrify-return-if-match)%0A%20(eldoc-add-command%20'electrify-return-if-match)%0A%20(show-paren-mode%20t))%0A%0A(add-hook%20'emacs-lisp-mode-hook%20'my/lisp-mode)%0A(add-hook%20'eval-expression-minibuffer-setup-hook%20'my/lisp-mode)%0A%0A;;(use-package%20rainbow-delimiters)%0A%0A#+END_SRC%0A%0A**%20Shell%20script%0A**%20Ruby%0A%0ARuby-mode%20is%20included%20with%20Emacs%20(23+).%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ruby-mode%0A%20:diminish%20"%F0%9F%92%8E"%0A%20)%0A%0A;;%20Rubyish%20file%20extensions:%0A(add-to-list%20'auto-mode-alist%0A%20'("\\.\\(?:cap\\|gemspec\\|irbrc\\|gemrc\\|rake\\|rb\\|ru\\|thor\\)\\'"%20%0A%20.%20ruby-mode))%0A(add-to-list%20'auto-mode-alist%0A%20'("\\(?:Brewfile\\|Capfile\\|Gemfile\\(?:\\.%5Ba-zA-Z0-9._-%5D+\\)?\\|%5BrR%5Dakefile\\)\\'"%20%0A%20.%20ruby-mode))%0A%0A;;%20inf-ruby%20gives%20us%20a%20Ruby%20REPL%0A;;%20not%20in%20Melpa-stable.%20TODO%20put%20it%20in%20vendor/%0A(use-package%20inf-ruby%0A%20:config%20%0A%20(add-hook%20'ruby-mode-hook%20'inf-ruby-minor-mode)%0A%20)%0A#+END_SRC%0A%0A**%20Go%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20install%20godef%20w/%20go%20get%20github.com/rogpeppe/godef%0A(use-package%20go-mode%0A%20:ensure%20t%0A%20)%0A%0A;;%20requires%20gocode:%20go%20get%20-u%20github.com/nsf/gocode%0A(use-package%20go-eldoc%0A%20:ensure%20t%0A%20)%0A(use-package%20company-go%0A%20:ensure%20t%0A%20)%0A%0A%0A(add-hook%20'go-mode-hook%20%0A%20(lambda%20()%0A%20(add-hook%20'before-save-hook%20#'gofmt-before-save)%0A%20(local-set-key%20(kbd%20"M-.")%20#'godef-jump)%0A%20(flycheck-mode%201)))%0A(add-hook%20'go-mode-hook%20'go-eldoc-setup)%0A%0A#+END_SRC%0A%0A**%20Web%20mode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20web-mode%0A%20:ensure%20t%0A%20:init%0A%20(setq%20web-mode-enable-auto-pairing%20t)%0A%20(setq%20web-mode-enable-css-colorization%20t)%0A%20(setq%20web-mode-enable-current-element-highlight%20t)%0A%20(setq%20web-mode-enable-current-column-highlight%20t)%0A%20(setq%20web-mode-ac-sources-alist%0A%20'(("css"%20.%20(ac-source-css-property))%0A%20("html"%20.%20(ac-source-words-in-buffer%20ac-source-abbrev)))%0A%20)%0A%20:config%0A%20(add-to-list%20'auto-mode-alist%20'("\\.erb\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.djhtml\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.dtl\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.html?\\'"%20.%20web-mode))%0A%20)%0A#+END_SRC%0A%0A*%20Writing%0A%20General%20writing%20settings.%0A%0A**%20AUCTeX%0A%0A%20-dnf%20install%20-y%20emacs-auctex-%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(when%20(require%20'tex-site%20nil%20'noerror)%0A%20;;%20currently%20using%20Auctex%20from%20Fedora.%0A%20;;%20these%20are%20recommended%20in%20info%0A%20(setq%20TeX-auto-save%20t)%0A%20(setq%20TeX-parse-self%20t)%0A%20;;(setq-default%20TeX-master%20nil)%0A%20;;%20we%20don't%20care%20for%20Computer%20Modern,%20let's%20use%20All.%20The.%20Fonts.%0A%20(setq%20latex-run-command%20"latexmk%20-xelatex")%0A%20;;%20mkiv%20is%20the%20recommended%20ConTeXt%20version%0A%20(setq%20ConTeXt-Mark-version%20"IV")%0A%20)%0A#+END_SRC%0A%0A**%20Proselint%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Requires%20'pip%20install%20proselint'%0A;;%0A;;%20From%20https:/github.com/amperser/proselint/tree/master/plugins/flycheck%0A;;%20(flycheck-define-checker%20proselint%0A;;%20"A%20linter%20for%20prose."%0A;;%20:command%20("proselint"%20source-inplace)%0A;;%20:error-patterns%0A;;%20((warning%20line-start%20(file-name)%20":"%20line%20":"%20column%20":%20"%0A;;%20(id%20(one-or-more%20(not%20(any%20"%20"))))%0A;;%20(message%20(one-or-more%20not-newline)%0A;;%20(zero-or-more%20"\n"%20(any%20"%20")%20(one-or-more%20not-newline)))%0A;;%20line-end))%0A;;%20:modes%20(text-mode%20org-mode%20markdown-mode%20gfm-mode))%0A%0A;;%20(add-to-list%20'flycheck-checkers%20'proselint)%0A%0A;;%20(add-hook%20'text-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'org-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'markdown-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'gfm-mode-hook%20#'flycheck-mode)%0A#+END_SRC%0A**%20Spelling%0A%20Use%20wcheck-mode%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20(use-package%20wcheck-mode%0A;;%20:pin%20gnu%0A;;%20:ensure%20t%0A;;%20:commands%20(wcheck-mode%20wcheck-mode-languages%20wcheck-actions%0A;;%20wcheck-jump-forward%20wcheck-jump-backward)%0A;;%20:init%0A;;%20(setq%20wcheck-language-data%0A;;%20'(("American%20English"%0A;;%20(program%20.%20"aspell")%0A;;%20(args%20"-l"%20"-d"%20"en_US")%0A;;%20(action-program%20.%20"aspell")%0A;;%20(action-args%20"-a"%20"-d"%20"en_US")%0A;;%20(action-parser%20.%20wcheck-parser-ispell-suggestions))%0A;;%20("Finnish"%0A;;%20(program%20.%20"enchant")%0A;;%20(args%20"-l"%20"-d"%20"fi")%0A;;%20(syntax%20.%20my-finnish-syntax-table)%0A;;%20(action-program%20.%20"enchant")%0A;;%20(action-args%20"-a"%20"-d"%20"fi")%0A;;%20(action-parser%20.%20enchant-suggestion-menu))))%0A%0A;;%20:config%0A;;%20(defun%20enchant-suggestions-menu%20(marked-text)%0A;;%20(cons%20(cons%20"%5BAdd%20to%20dictionary%5D"%20'enchant-add-to-dictionary)%0A;;%20(wcheck-parser-ispell-suggestions)))%0A%0A;;%20(defvar%20enchant-dictionaries-dir%20"~/.config/enchant")%0A;;%20(defun%20enchant-add-to-dictionary%20(marked-text)%0A;;%20(let*%20((word%20(aref%20marked-text%200))%0A;;%20(language%20(aref%20marked-text%204))%0A;;%20(file%20(let%20((code%20(nth%201%20(member%20"-d"%20(wcheck-query-language-data%0A;;%20language%20'action-args)))))%0A;;%20(when%20(stringp%20code)%0A;;%20(concat%20(file-name-as-directory%20enchant-dictionaries-dir)%0A;;%20code%20".dic")))))%0A;;%20(when%20(and%20file%20(file-writable-p%20file))%0A;;%20(with-temp-buffer%0A;;%20(insert%20word)%20(newline)%0A;;%20(append-to-file%20(point-min)%20(point-max)%20file)%0A;;%20(message%20"Added%20word%20\"%25s\"%20to%20the%20%25s%20dictionary"%0A;;%20word%20language)))))%0A;;%20)%20%0A%0A;;%20use%20hunspell%20if%20we%20have%20it%0A(when%20(executable-find%20"hunspell")%0A%20(setq-default%20ispell-program-name%20"hunspell")%0A%20(setq%20ispell-really-hunspell%20t))%0A%0A;;%20flyspell%0A(add-hook%20'text-mode-hook%20(lambda%20()%0A%20(flyspell-mode%201)))%0A(add-hook%20'prog-mode-hook%20(lambda%20()%0A%20(flyspell-prog-mode)))%0A%0A%0A#+END_SRC%0A%0A**%20Markdown%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20markdown-mode%0A%20:ensure%20t%0A%20:commands%20(markdown-mode%20gfm-mode)%0A%20:mode%20%0A(("README\\.md\\'"%20.%20gfm-mode)%0A%20("\\.md\\'"%20.%20markdown-mode)%0A%20("\\.markdown\\'"%20.%20markdown-mode))%0A%20:init%20%0A(setq%20markdown-command%20"pandoc%20-f%20markdown%20-t%20html5")%0A)%0A#+END_SRC%0A%0A**%20Pandoc%0A][Pandoc:1]]
(use-package pandoc-mode
  :ensure t
  :init
  (add-hook 'markdown-mode-hook 'pandoc-mode)
  :config
  (add-hook 'pandoc-mode-hook 'pandoc-load-default-settings)
  )
;; Pandoc:1 ends here

;; Eshell


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dockerfile-mode%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20docker%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Puppet%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20puppet-mode%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Vagrant%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20vagrant%0A%20:ensure%20t)%0A;;%20(use-package%20vagrant-tramp%0A;;%20:ensure%20t)%0A#+END_SRC%0A%0A*%20Programming%0A**%20General%20programming%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20compilation:%20don't%20ask%20about%20saving,%20don't%20save,%20and%20add%20helper%20to%20shell%20mode.%0A(setq%20compilation-ask-about-save%20nil)%0A(setq%20compilation-save-buffers-predicate%20'(lambda%20()%20nil))%0A(add-hook%20'shell-mode-hook%20'compilation-shell-minor-mode)%0A%0A;;%20make%20a%20file%20executable%20if%20it%20starts%20with%20#!%0A(add-hook%0A%20'after-save-hook%0A%20'executable-make-buffer-file-executable-if-script-p)%0A%0A%0A(use-package%20company%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-company-mode)%0A%20(use-package%20company-quickhelp%0A%20:ensure%20t%0A%20:config%0A%20(setq%20company-quickhelp-idle-delay%203)%0A%20(company-quickhelp-mode%201)%0A%20)%0A%20(use-package%20company-emoji%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'markdown-mode-hook%20'company-mode)%0A%20(add-hook%20'markdown-mode-hook%20'company-emoji-init)%20%0A%20)%0A%20(use-package%20company-jedi%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:config%20(add-to-list%20'company-backends%20'company-jedi)%20%0A%20)%20%0A%20)%0A%0A%0A(use-package%20flycheck%0A%20:ensure%20t%0A%20:defer%20t%0A%20:commands%20(flycheck-mode)%0A%20:diminish%20""%0A%20:init%20(global-flycheck-mode)%0A%20:bind%0A%20(("M-g%20M-n"%20.%20flycheck-next-error)%0A%20("M-g%20M-p"%20.%20flycheck-previous-error)%0A%20("M-g%20M-="%20.%20flycheck-list-errors))%0A%20:config%0A%20(setq-default%20flycheck-disabled-checkers%20'(emacs-lisp-checkdoc))%0A%20)%0A%0A(use-package%20aggressive-indent%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:commands%20(aggressive-indent-mode)%0A%20:config%20%0A%20(add-to-list%20'aggressive-indent-excluded-modes%20'elpy-mode)%20;;%20aggressive%20indent%20is%20too%20aggressive%20for%20python%0A%20(aggressive-indent-global-mode%201))%0A%0A(use-package%20rainbow-mode%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20yasnippet%0A%20:ensure%20t%0A%20:init%0A%20(yas-global-mode%201)%0A%20)%0A%0A%0A(add-hook%20'prog-mode-hook%20'flyspell-prog-mode)%0A(add-hook%20'prog-mode-hook%20'imenu-add-menubar-index)%0A(add-hook%20'prog-mode-hook%20'aggressive-indent-mode)%0A%0A#+END_SRC%0A**%20Makefile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20my-makefile-hook%0A%20(setq%20indent-tabs-mode%20t)%0A%20)%0A(add-hook%20'makefile-mode-hook%20'my-makefile-hook)%0A#+END_SRC%0A%0A**%20Projectile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20projectile%0A%20:ensure%20t%0A%20:config%20(projectile-global-mode%201)%0A%20:diminish%20projectile-mode%0A%20:init%0A%20(progn%0A%20(setq%20projectile-file-exists-remote-cache-expire%20(*%2030%2060))%0A%20(setq%20projectile-switch-project-action%20'projectile-find-file-dwim)))%0A%0A#+END_SRC%0A%0A**%20Python%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20elpy%0A%20:ensure%20t%0A%20:commands%20(elpy-enable)%0A%20:diminish%20"%F0%9F%90%8D"%0A%20:init%20%0A%20(setq%20elpy-rpc-backend%20"jedi"%0A%20elpy-rpc-project-specific%20't%0A%20)%0A%20(elpy-enable)%0A%20:config%0A%20(elpy-use-ipython%20"ipython3")%20%0A%20(when%20(fboundp%20'flycheck-mode)%0A%20(setq%20elpy-modules%20(delete%20'elpy-module-flymake%20elpy-modules)))%0A%20;;%20fix%20PEP8%20compliance%20on%20save%0A%20(use-package%20py-autopep8%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'elpy-mode-hook%20'py-autopep8-enable-on-save))%0A%20;;%20emacs%20ipython%20notebook%0A%20(use-package%20ein%0A%20:ensure%20t)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Emacs%20lisp%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20paredit%0A%20:ensure%20t%0A%20:commands%20(paredit-mode)%0A%20:config%0A%20(progn%0A%20(defvar%20electrify-return-match%20"%5B\%5D}\)\"%5D"%0A%20"If%20this%20regexp%20matches%20the%20text%20after%20the%20cursor,%20do%20an%20\"electric\"%0A%20return.")%0A%0A%20(defun%20electrify-return-if-match%20(arg)%0A%20"If%20the%20text%20after%20the%20cursor%20matches%0A%20`electrify-return-match'%20then%20open%20and%20indent%20an%20empty%20line%0A%20between%20the%20cursor%20and%20the%20text.%20Move%20the%20cursor%20to%20the%20new%20line."%0A%20(interactive%20"P")%0A%20(let%20((case-fold-search%20nil))%0A%20(if%20(looking-at%20electrify-return-match)%0A%20(save-excursion%20(newline-and-indent)))%0A%20(newline%20arg)%0A%20(indent-according-to-mode)))%0A%20))%0A%0A(defun%20my/lisp-mode%20()%0A%20(paredit-mode%20t)%20%0A%20(turn-on-eldoc-mode)%0A%20(eldoc-add-command%0A%20'paredit-backward-delete%0A%20'paredit-close-round)%0A%20(local-set-key%20(kbd%20"RET")%20'electrify-return-if-match)%0A%20(eldoc-add-command%20'electrify-return-if-match)%0A%20(show-paren-mode%20t))%0A%0A(add-hook%20'emacs-lisp-mode-hook%20'my/lisp-mode)%0A(add-hook%20'eval-expression-minibuffer-setup-hook%20'my/lisp-mode)%0A%0A;;(use-package%20rainbow-delimiters)%0A%0A#+END_SRC%0A%0A**%20Shell%20script%0A**%20Ruby%0A%0ARuby-mode%20is%20included%20with%20Emacs%20(23+).%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ruby-mode%0A%20:diminish%20"%F0%9F%92%8E"%0A%20)%0A%0A;;%20Rubyish%20file%20extensions:%0A(add-to-list%20'auto-mode-alist%0A%20'("\\.\\(?:cap\\|gemspec\\|irbrc\\|gemrc\\|rake\\|rb\\|ru\\|thor\\)\\'"%20%0A%20.%20ruby-mode))%0A(add-to-list%20'auto-mode-alist%0A%20'("\\(?:Brewfile\\|Capfile\\|Gemfile\\(?:\\.%5Ba-zA-Z0-9._-%5D+\\)?\\|%5BrR%5Dakefile\\)\\'"%20%0A%20.%20ruby-mode))%0A%0A;;%20inf-ruby%20gives%20us%20a%20Ruby%20REPL%0A;;%20not%20in%20Melpa-stable.%20TODO%20put%20it%20in%20vendor/%0A(use-package%20inf-ruby%0A%20:config%20%0A%20(add-hook%20'ruby-mode-hook%20'inf-ruby-minor-mode)%0A%20)%0A#+END_SRC%0A%0A**%20Go%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20install%20godef%20w/%20go%20get%20github.com/rogpeppe/godef%0A(use-package%20go-mode%0A%20:ensure%20t%0A%20)%0A%0A;;%20requires%20gocode:%20go%20get%20-u%20github.com/nsf/gocode%0A(use-package%20go-eldoc%0A%20:ensure%20t%0A%20)%0A(use-package%20company-go%0A%20:ensure%20t%0A%20)%0A%0A%0A(add-hook%20'go-mode-hook%20%0A%20(lambda%20()%0A%20(add-hook%20'before-save-hook%20#'gofmt-before-save)%0A%20(local-set-key%20(kbd%20"M-.")%20#'godef-jump)%0A%20(flycheck-mode%201)))%0A(add-hook%20'go-mode-hook%20'go-eldoc-setup)%0A%0A#+END_SRC%0A%0A**%20Web%20mode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20web-mode%0A%20:ensure%20t%0A%20:init%0A%20(setq%20web-mode-enable-auto-pairing%20t)%0A%20(setq%20web-mode-enable-css-colorization%20t)%0A%20(setq%20web-mode-enable-current-element-highlight%20t)%0A%20(setq%20web-mode-enable-current-column-highlight%20t)%0A%20(setq%20web-mode-ac-sources-alist%0A%20'(("css"%20.%20(ac-source-css-property))%0A%20("html"%20.%20(ac-source-words-in-buffer%20ac-source-abbrev)))%0A%20)%0A%20:config%0A%20(add-to-list%20'auto-mode-alist%20'("\\.erb\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.djhtml\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.dtl\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.html?\\'"%20.%20web-mode))%0A%20)%0A#+END_SRC%0A%0A*%20Writing%0A%20General%20writing%20settings.%0A%0A**%20AUCTeX%0A%0A%20-dnf%20install%20-y%20emacs-auctex-%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(when%20(require%20'tex-site%20nil%20'noerror)%0A%20;;%20currently%20using%20Auctex%20from%20Fedora.%0A%20;;%20these%20are%20recommended%20in%20info%0A%20(setq%20TeX-auto-save%20t)%0A%20(setq%20TeX-parse-self%20t)%0A%20;;(setq-default%20TeX-master%20nil)%0A%20;;%20we%20don't%20care%20for%20Computer%20Modern,%20let's%20use%20All.%20The.%20Fonts.%0A%20(setq%20latex-run-command%20"latexmk%20-xelatex")%0A%20;;%20mkiv%20is%20the%20recommended%20ConTeXt%20version%0A%20(setq%20ConTeXt-Mark-version%20"IV")%0A%20)%0A#+END_SRC%0A%0A**%20Proselint%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Requires%20'pip%20install%20proselint'%0A;;%0A;;%20From%20https:/github.com/amperser/proselint/tree/master/plugins/flycheck%0A;;%20(flycheck-define-checker%20proselint%0A;;%20"A%20linter%20for%20prose."%0A;;%20:command%20("proselint"%20source-inplace)%0A;;%20:error-patterns%0A;;%20((warning%20line-start%20(file-name)%20":"%20line%20":"%20column%20":%20"%0A;;%20(id%20(one-or-more%20(not%20(any%20"%20"))))%0A;;%20(message%20(one-or-more%20not-newline)%0A;;%20(zero-or-more%20"\n"%20(any%20"%20")%20(one-or-more%20not-newline)))%0A;;%20line-end))%0A;;%20:modes%20(text-mode%20org-mode%20markdown-mode%20gfm-mode))%0A%0A;;%20(add-to-list%20'flycheck-checkers%20'proselint)%0A%0A;;%20(add-hook%20'text-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'org-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'markdown-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'gfm-mode-hook%20#'flycheck-mode)%0A#+END_SRC%0A**%20Spelling%0A%20Use%20wcheck-mode%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20(use-package%20wcheck-mode%0A;;%20:pin%20gnu%0A;;%20:ensure%20t%0A;;%20:commands%20(wcheck-mode%20wcheck-mode-languages%20wcheck-actions%0A;;%20wcheck-jump-forward%20wcheck-jump-backward)%0A;;%20:init%0A;;%20(setq%20wcheck-language-data%0A;;%20'(("American%20English"%0A;;%20(program%20.%20"aspell")%0A;;%20(args%20"-l"%20"-d"%20"en_US")%0A;;%20(action-program%20.%20"aspell")%0A;;%20(action-args%20"-a"%20"-d"%20"en_US")%0A;;%20(action-parser%20.%20wcheck-parser-ispell-suggestions))%0A;;%20("Finnish"%0A;;%20(program%20.%20"enchant")%0A;;%20(args%20"-l"%20"-d"%20"fi")%0A;;%20(syntax%20.%20my-finnish-syntax-table)%0A;;%20(action-program%20.%20"enchant")%0A;;%20(action-args%20"-a"%20"-d"%20"fi")%0A;;%20(action-parser%20.%20enchant-suggestion-menu))))%0A%0A;;%20:config%0A;;%20(defun%20enchant-suggestions-menu%20(marked-text)%0A;;%20(cons%20(cons%20"%5BAdd%20to%20dictionary%5D"%20'enchant-add-to-dictionary)%0A;;%20(wcheck-parser-ispell-suggestions)))%0A%0A;;%20(defvar%20enchant-dictionaries-dir%20"~/.config/enchant")%0A;;%20(defun%20enchant-add-to-dictionary%20(marked-text)%0A;;%20(let*%20((word%20(aref%20marked-text%200))%0A;;%20(language%20(aref%20marked-text%204))%0A;;%20(file%20(let%20((code%20(nth%201%20(member%20"-d"%20(wcheck-query-language-data%0A;;%20language%20'action-args)))))%0A;;%20(when%20(stringp%20code)%0A;;%20(concat%20(file-name-as-directory%20enchant-dictionaries-dir)%0A;;%20code%20".dic")))))%0A;;%20(when%20(and%20file%20(file-writable-p%20file))%0A;;%20(with-temp-buffer%0A;;%20(insert%20word)%20(newline)%0A;;%20(append-to-file%20(point-min)%20(point-max)%20file)%0A;;%20(message%20"Added%20word%20\"%25s\"%20to%20the%20%25s%20dictionary"%0A;;%20word%20language)))))%0A;;%20)%20%0A%0A;;%20use%20hunspell%20if%20we%20have%20it%0A(when%20(executable-find%20"hunspell")%0A%20(setq-default%20ispell-program-name%20"hunspell")%0A%20(setq%20ispell-really-hunspell%20t))%0A%0A;;%20flyspell%0A(add-hook%20'text-mode-hook%20(lambda%20()%0A%20(flyspell-mode%201)))%0A(add-hook%20'prog-mode-hook%20(lambda%20()%0A%20(flyspell-prog-mode)))%0A%0A%0A#+END_SRC%0A%0A**%20Markdown%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20markdown-mode%0A%20:ensure%20t%0A%20:commands%20(markdown-mode%20gfm-mode)%0A%20:mode%20%0A(("README\\.md\\'"%20.%20gfm-mode)%0A%20("\\.md\\'"%20.%20markdown-mode)%0A%20("\\.markdown\\'"%20.%20markdown-mode))%0A%20:init%20%0A(setq%20markdown-command%20"pandoc%20-f%20markdown%20-t%20html5")%0A)%0A#+END_SRC%0A%0A**%20Pandoc%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pandoc-mode%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'markdown-mode-hook%20'pandoc-mode)%0A%20:config%0A%20(add-hook%20'pandoc-mode-hook%20'pandoc-load-default-settings)%0A%20)%0A#+END_SRC%0A%0A*%20Applications%0A**%20Shells%0A***%20Eshell%0A%0A][Eshell:1]]
(use-package eshell
  :commands eshell eshell-command
  :init
  (setq eshell-buffer-shorthand t
        eshell-cmpl-ignore-case t
        eshell-cmpl-cycle-completions nil
        eshell-history-size 10000
        eshell-save-history-on-exit t
        eshell-hist-ignoredups t
        eshell-glob-case-insensitive t
        eshell-scroll-to-bottom-on-input 'this)
  :config
  (progn
    (require 'em-smart)
    (setq eshell-where-to-jump 'begin
          eshell-review-quick-commands nil
          eshell-smart-space-goes-to-end t)
    (require 'em-cmpl)
    (require 'em-prompt)
    (require 'em-term)
    (require 'esh-opt)
    
    (setenv "PAGER" "cat")
    (defalias 'e 'find-file)
    (defalias 'ff 'find-file)
    (defalias 'vim 'find-file)
    (defalias 'emacs 'find-file-other-window)
    (defalias 'gd 'magit-diff-unstaged)
    (defalias 'gds 'magit-diff-staged)
    (defun eshell/d (&rest args)
      (dired (pop args) "."))
    
    (defun eshell/x ()
      "Closes the EShell session and gets rid of the EShell window."
      (kill-buffer)
      (delete-window))
    
    (defun eshell/gst (&rest args)
      (magit-status (pop args) nil)
      (eshell/echo))   ;; The echo command suppresses output

    (defun eshell/magit ()
      "Function to open magit-status for the current directory"
      (interactive)
      (magit-status default-directory))
    
    (add-to-list 'eshell-visual-commands "tmux")
    (add-to-list 'eshell-visual-commands "ssh")
    (add-to-list 'eshell-visual-commands "vim")
    (add-to-list 'eshell-visual-commands "links")
    (add-to-list 'eshell-visual-commands "elinks")
    (add-to-list 'eshell-visual-commands "alsamixer")
    (add-to-list 'eshell-visual-commands "nmtui")
    (add-to-list 'eshell-visual-commands "tail")

    (add-to-list 'eshell-visual-subcommands '(("git" "log" "diff" "show")))

    (defun eshell-here ()
      "https://github.com/howardabrams/dot-files/blob/master/emacs-eshell.org
       Opens up a new shell in the directory associated with the
       current buffer's file. The eshell is renamed to match that
       directory to make multiple eshell windows easier."
      (interactive)
      (let* ((parent (if (buffer-file-name)
                         (file-name-directory (buffer-file-name))
                       default-directory))
             (height (/ (window-total-height) 3))
             (name   (car (last (split-string parent "/" t)))))
        (split-window-vertically (- height))
        (other-window 1)
        (eshell "new")
        (rename-buffer (concat "*eshell: " name "*"))

        ;;(insert (concat "ls"))
        ;;(eshell-send-input)
        ))

    (bind-key "C-!" 'eshell-here)
    (bind-key "<f2>" 'eshell-here)
    ))
;; Eshell:1 ends here

;; Dired


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dockerfile-mode%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20docker%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Puppet%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20puppet-mode%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Vagrant%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20vagrant%0A%20:ensure%20t)%0A;;%20(use-package%20vagrant-tramp%0A;;%20:ensure%20t)%0A#+END_SRC%0A%0A*%20Programming%0A**%20General%20programming%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20compilation:%20don't%20ask%20about%20saving,%20don't%20save,%20and%20add%20helper%20to%20shell%20mode.%0A(setq%20compilation-ask-about-save%20nil)%0A(setq%20compilation-save-buffers-predicate%20'(lambda%20()%20nil))%0A(add-hook%20'shell-mode-hook%20'compilation-shell-minor-mode)%0A%0A;;%20make%20a%20file%20executable%20if%20it%20starts%20with%20#!%0A(add-hook%0A%20'after-save-hook%0A%20'executable-make-buffer-file-executable-if-script-p)%0A%0A%0A(use-package%20company%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-company-mode)%0A%20(use-package%20company-quickhelp%0A%20:ensure%20t%0A%20:config%0A%20(setq%20company-quickhelp-idle-delay%203)%0A%20(company-quickhelp-mode%201)%0A%20)%0A%20(use-package%20company-emoji%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'markdown-mode-hook%20'company-mode)%0A%20(add-hook%20'markdown-mode-hook%20'company-emoji-init)%20%0A%20)%0A%20(use-package%20company-jedi%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:config%20(add-to-list%20'company-backends%20'company-jedi)%20%0A%20)%20%0A%20)%0A%0A%0A(use-package%20flycheck%0A%20:ensure%20t%0A%20:defer%20t%0A%20:commands%20(flycheck-mode)%0A%20:diminish%20""%0A%20:init%20(global-flycheck-mode)%0A%20:bind%0A%20(("M-g%20M-n"%20.%20flycheck-next-error)%0A%20("M-g%20M-p"%20.%20flycheck-previous-error)%0A%20("M-g%20M-="%20.%20flycheck-list-errors))%0A%20:config%0A%20(setq-default%20flycheck-disabled-checkers%20'(emacs-lisp-checkdoc))%0A%20)%0A%0A(use-package%20aggressive-indent%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:commands%20(aggressive-indent-mode)%0A%20:config%20%0A%20(add-to-list%20'aggressive-indent-excluded-modes%20'elpy-mode)%20;;%20aggressive%20indent%20is%20too%20aggressive%20for%20python%0A%20(aggressive-indent-global-mode%201))%0A%0A(use-package%20rainbow-mode%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20yasnippet%0A%20:ensure%20t%0A%20:init%0A%20(yas-global-mode%201)%0A%20)%0A%0A%0A(add-hook%20'prog-mode-hook%20'flyspell-prog-mode)%0A(add-hook%20'prog-mode-hook%20'imenu-add-menubar-index)%0A(add-hook%20'prog-mode-hook%20'aggressive-indent-mode)%0A%0A#+END_SRC%0A**%20Makefile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20my-makefile-hook%0A%20(setq%20indent-tabs-mode%20t)%0A%20)%0A(add-hook%20'makefile-mode-hook%20'my-makefile-hook)%0A#+END_SRC%0A%0A**%20Projectile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20projectile%0A%20:ensure%20t%0A%20:config%20(projectile-global-mode%201)%0A%20:diminish%20projectile-mode%0A%20:init%0A%20(progn%0A%20(setq%20projectile-file-exists-remote-cache-expire%20(*%2030%2060))%0A%20(setq%20projectile-switch-project-action%20'projectile-find-file-dwim)))%0A%0A#+END_SRC%0A%0A**%20Python%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20elpy%0A%20:ensure%20t%0A%20:commands%20(elpy-enable)%0A%20:diminish%20"%F0%9F%90%8D"%0A%20:init%20%0A%20(setq%20elpy-rpc-backend%20"jedi"%0A%20elpy-rpc-project-specific%20't%0A%20)%0A%20(elpy-enable)%0A%20:config%0A%20(elpy-use-ipython%20"ipython3")%20%0A%20(when%20(fboundp%20'flycheck-mode)%0A%20(setq%20elpy-modules%20(delete%20'elpy-module-flymake%20elpy-modules)))%0A%20;;%20fix%20PEP8%20compliance%20on%20save%0A%20(use-package%20py-autopep8%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'elpy-mode-hook%20'py-autopep8-enable-on-save))%0A%20;;%20emacs%20ipython%20notebook%0A%20(use-package%20ein%0A%20:ensure%20t)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Emacs%20lisp%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20paredit%0A%20:ensure%20t%0A%20:commands%20(paredit-mode)%0A%20:config%0A%20(progn%0A%20(defvar%20electrify-return-match%20"%5B\%5D}\)\"%5D"%0A%20"If%20this%20regexp%20matches%20the%20text%20after%20the%20cursor,%20do%20an%20\"electric\"%0A%20return.")%0A%0A%20(defun%20electrify-return-if-match%20(arg)%0A%20"If%20the%20text%20after%20the%20cursor%20matches%0A%20`electrify-return-match'%20then%20open%20and%20indent%20an%20empty%20line%0A%20between%20the%20cursor%20and%20the%20text.%20Move%20the%20cursor%20to%20the%20new%20line."%0A%20(interactive%20"P")%0A%20(let%20((case-fold-search%20nil))%0A%20(if%20(looking-at%20electrify-return-match)%0A%20(save-excursion%20(newline-and-indent)))%0A%20(newline%20arg)%0A%20(indent-according-to-mode)))%0A%20))%0A%0A(defun%20my/lisp-mode%20()%0A%20(paredit-mode%20t)%20%0A%20(turn-on-eldoc-mode)%0A%20(eldoc-add-command%0A%20'paredit-backward-delete%0A%20'paredit-close-round)%0A%20(local-set-key%20(kbd%20"RET")%20'electrify-return-if-match)%0A%20(eldoc-add-command%20'electrify-return-if-match)%0A%20(show-paren-mode%20t))%0A%0A(add-hook%20'emacs-lisp-mode-hook%20'my/lisp-mode)%0A(add-hook%20'eval-expression-minibuffer-setup-hook%20'my/lisp-mode)%0A%0A;;(use-package%20rainbow-delimiters)%0A%0A#+END_SRC%0A%0A**%20Shell%20script%0A**%20Ruby%0A%0ARuby-mode%20is%20included%20with%20Emacs%20(23+).%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ruby-mode%0A%20:diminish%20"%F0%9F%92%8E"%0A%20)%0A%0A;;%20Rubyish%20file%20extensions:%0A(add-to-list%20'auto-mode-alist%0A%20'("\\.\\(?:cap\\|gemspec\\|irbrc\\|gemrc\\|rake\\|rb\\|ru\\|thor\\)\\'"%20%0A%20.%20ruby-mode))%0A(add-to-list%20'auto-mode-alist%0A%20'("\\(?:Brewfile\\|Capfile\\|Gemfile\\(?:\\.%5Ba-zA-Z0-9._-%5D+\\)?\\|%5BrR%5Dakefile\\)\\'"%20%0A%20.%20ruby-mode))%0A%0A;;%20inf-ruby%20gives%20us%20a%20Ruby%20REPL%0A;;%20not%20in%20Melpa-stable.%20TODO%20put%20it%20in%20vendor/%0A(use-package%20inf-ruby%0A%20:config%20%0A%20(add-hook%20'ruby-mode-hook%20'inf-ruby-minor-mode)%0A%20)%0A#+END_SRC%0A%0A**%20Go%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20install%20godef%20w/%20go%20get%20github.com/rogpeppe/godef%0A(use-package%20go-mode%0A%20:ensure%20t%0A%20)%0A%0A;;%20requires%20gocode:%20go%20get%20-u%20github.com/nsf/gocode%0A(use-package%20go-eldoc%0A%20:ensure%20t%0A%20)%0A(use-package%20company-go%0A%20:ensure%20t%0A%20)%0A%0A%0A(add-hook%20'go-mode-hook%20%0A%20(lambda%20()%0A%20(add-hook%20'before-save-hook%20#'gofmt-before-save)%0A%20(local-set-key%20(kbd%20"M-.")%20#'godef-jump)%0A%20(flycheck-mode%201)))%0A(add-hook%20'go-mode-hook%20'go-eldoc-setup)%0A%0A#+END_SRC%0A%0A**%20Web%20mode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20web-mode%0A%20:ensure%20t%0A%20:init%0A%20(setq%20web-mode-enable-auto-pairing%20t)%0A%20(setq%20web-mode-enable-css-colorization%20t)%0A%20(setq%20web-mode-enable-current-element-highlight%20t)%0A%20(setq%20web-mode-enable-current-column-highlight%20t)%0A%20(setq%20web-mode-ac-sources-alist%0A%20'(("css"%20.%20(ac-source-css-property))%0A%20("html"%20.%20(ac-source-words-in-buffer%20ac-source-abbrev)))%0A%20)%0A%20:config%0A%20(add-to-list%20'auto-mode-alist%20'("\\.erb\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.djhtml\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.dtl\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.html?\\'"%20.%20web-mode))%0A%20)%0A#+END_SRC%0A%0A*%20Writing%0A%20General%20writing%20settings.%0A%0A**%20AUCTeX%0A%0A%20-dnf%20install%20-y%20emacs-auctex-%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(when%20(require%20'tex-site%20nil%20'noerror)%0A%20;;%20currently%20using%20Auctex%20from%20Fedora.%0A%20;;%20these%20are%20recommended%20in%20info%0A%20(setq%20TeX-auto-save%20t)%0A%20(setq%20TeX-parse-self%20t)%0A%20;;(setq-default%20TeX-master%20nil)%0A%20;;%20we%20don't%20care%20for%20Computer%20Modern,%20let's%20use%20All.%20The.%20Fonts.%0A%20(setq%20latex-run-command%20"latexmk%20-xelatex")%0A%20;;%20mkiv%20is%20the%20recommended%20ConTeXt%20version%0A%20(setq%20ConTeXt-Mark-version%20"IV")%0A%20)%0A#+END_SRC%0A%0A**%20Proselint%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Requires%20'pip%20install%20proselint'%0A;;%0A;;%20From%20https:/github.com/amperser/proselint/tree/master/plugins/flycheck%0A;;%20(flycheck-define-checker%20proselint%0A;;%20"A%20linter%20for%20prose."%0A;;%20:command%20("proselint"%20source-inplace)%0A;;%20:error-patterns%0A;;%20((warning%20line-start%20(file-name)%20":"%20line%20":"%20column%20":%20"%0A;;%20(id%20(one-or-more%20(not%20(any%20"%20"))))%0A;;%20(message%20(one-or-more%20not-newline)%0A;;%20(zero-or-more%20"\n"%20(any%20"%20")%20(one-or-more%20not-newline)))%0A;;%20line-end))%0A;;%20:modes%20(text-mode%20org-mode%20markdown-mode%20gfm-mode))%0A%0A;;%20(add-to-list%20'flycheck-checkers%20'proselint)%0A%0A;;%20(add-hook%20'text-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'org-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'markdown-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'gfm-mode-hook%20#'flycheck-mode)%0A#+END_SRC%0A**%20Spelling%0A%20Use%20wcheck-mode%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20(use-package%20wcheck-mode%0A;;%20:pin%20gnu%0A;;%20:ensure%20t%0A;;%20:commands%20(wcheck-mode%20wcheck-mode-languages%20wcheck-actions%0A;;%20wcheck-jump-forward%20wcheck-jump-backward)%0A;;%20:init%0A;;%20(setq%20wcheck-language-data%0A;;%20'(("American%20English"%0A;;%20(program%20.%20"aspell")%0A;;%20(args%20"-l"%20"-d"%20"en_US")%0A;;%20(action-program%20.%20"aspell")%0A;;%20(action-args%20"-a"%20"-d"%20"en_US")%0A;;%20(action-parser%20.%20wcheck-parser-ispell-suggestions))%0A;;%20("Finnish"%0A;;%20(program%20.%20"enchant")%0A;;%20(args%20"-l"%20"-d"%20"fi")%0A;;%20(syntax%20.%20my-finnish-syntax-table)%0A;;%20(action-program%20.%20"enchant")%0A;;%20(action-args%20"-a"%20"-d"%20"fi")%0A;;%20(action-parser%20.%20enchant-suggestion-menu))))%0A%0A;;%20:config%0A;;%20(defun%20enchant-suggestions-menu%20(marked-text)%0A;;%20(cons%20(cons%20"%5BAdd%20to%20dictionary%5D"%20'enchant-add-to-dictionary)%0A;;%20(wcheck-parser-ispell-suggestions)))%0A%0A;;%20(defvar%20enchant-dictionaries-dir%20"~/.config/enchant")%0A;;%20(defun%20enchant-add-to-dictionary%20(marked-text)%0A;;%20(let*%20((word%20(aref%20marked-text%200))%0A;;%20(language%20(aref%20marked-text%204))%0A;;%20(file%20(let%20((code%20(nth%201%20(member%20"-d"%20(wcheck-query-language-data%0A;;%20language%20'action-args)))))%0A;;%20(when%20(stringp%20code)%0A;;%20(concat%20(file-name-as-directory%20enchant-dictionaries-dir)%0A;;%20code%20".dic")))))%0A;;%20(when%20(and%20file%20(file-writable-p%20file))%0A;;%20(with-temp-buffer%0A;;%20(insert%20word)%20(newline)%0A;;%20(append-to-file%20(point-min)%20(point-max)%20file)%0A;;%20(message%20"Added%20word%20\"%25s\"%20to%20the%20%25s%20dictionary"%0A;;%20word%20language)))))%0A;;%20)%20%0A%0A;;%20use%20hunspell%20if%20we%20have%20it%0A(when%20(executable-find%20"hunspell")%0A%20(setq-default%20ispell-program-name%20"hunspell")%0A%20(setq%20ispell-really-hunspell%20t))%0A%0A;;%20flyspell%0A(add-hook%20'text-mode-hook%20(lambda%20()%0A%20(flyspell-mode%201)))%0A(add-hook%20'prog-mode-hook%20(lambda%20()%0A%20(flyspell-prog-mode)))%0A%0A%0A#+END_SRC%0A%0A**%20Markdown%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20markdown-mode%0A%20:ensure%20t%0A%20:commands%20(markdown-mode%20gfm-mode)%0A%20:mode%20%0A(("README\\.md\\'"%20.%20gfm-mode)%0A%20("\\.md\\'"%20.%20markdown-mode)%0A%20("\\.markdown\\'"%20.%20markdown-mode))%0A%20:init%20%0A(setq%20markdown-command%20"pandoc%20-f%20markdown%20-t%20html5")%0A)%0A#+END_SRC%0A%0A**%20Pandoc%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pandoc-mode%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'markdown-mode-hook%20'pandoc-mode)%0A%20:config%0A%20(add-hook%20'pandoc-mode-hook%20'pandoc-load-default-settings)%0A%20)%0A#+END_SRC%0A%0A*%20Applications%0A**%20Shells%0A***%20Eshell%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20eshell%0A%20:commands%20eshell%20eshell-command%0A%20:init%0A%20(setq%20eshell-buffer-shorthand%20t%0A%20eshell-cmpl-ignore-case%20t%0A%20eshell-cmpl-cycle-completions%20nil%0A%20eshell-history-size%2010000%0A%20eshell-save-history-on-exit%20t%0A%20eshell-hist-ignoredups%20t%0A%20eshell-glob-case-insensitive%20t%0A%20eshell-scroll-to-bottom-on-input%20'this)%0A%20:config%0A%20(progn%0A%20(require%20'em-smart)%0A%20(setq%20eshell-where-to-jump%20'begin%0A%20eshell-review-quick-commands%20nil%0A%20eshell-smart-space-goes-to-end%20t)%0A%20(require%20'em-cmpl)%0A%20(require%20'em-prompt)%0A%20(require%20'em-term)%0A%20(require%20'esh-opt)%0A%20%0A%20(setenv%20"PAGER"%20"cat")%0A%20(defalias%20'e%20'find-file)%0A%20(defalias%20'ff%20'find-file)%0A%20(defalias%20'vim%20'find-file)%0A%20(defalias%20'emacs%20'find-file-other-window)%0A%20(defalias%20'gd%20'magit-diff-unstaged)%0A%20(defalias%20'gds%20'magit-diff-staged)%0A%20(defun%20eshell/d%20(&rest%20args)%0A%20(dired%20(pop%20args)%20"."))%0A%20%0A%20(defun%20eshell/x%20()%0A%20"Closes%20the%20EShell%20session%20and%20gets%20rid%20of%20the%20EShell%20window."%0A%20(kill-buffer)%0A%20(delete-window))%0A%20%0A%20(defun%20eshell/gst%20(&rest%20args)%0A%20(magit-status%20(pop%20args)%20nil)%0A%20(eshell/echo))%20;;%20The%20echo%20command%20suppresses%20output%0A%0A%20(defun%20eshell/magit%20()%0A%20"Function%20to%20open%20magit-status%20for%20the%20current%20directory"%0A%20(interactive)%0A%20(magit-status%20default-directory))%0A%20%0A%20(add-to-list%20'eshell-visual-commands%20"tmux")%0A%20(add-to-list%20'eshell-visual-commands%20"ssh")%0A%20(add-to-list%20'eshell-visual-commands%20"vim")%0A%20(add-to-list%20'eshell-visual-commands%20"links")%0A%20(add-to-list%20'eshell-visual-commands%20"elinks")%0A%20(add-to-list%20'eshell-visual-commands%20"alsamixer")%0A%20(add-to-list%20'eshell-visual-commands%20"nmtui")%0A%20(add-to-list%20'eshell-visual-commands%20"tail")%0A%0A%20(add-to-list%20'eshell-visual-subcommands%20'(("git"%20"log"%20"diff"%20"show")))%0A%0A%20(defun%20eshell-here%20()%0A%20"https:/github.com/howardabrams/dot-files/blob/master/emacs-eshell.org%0A%20Opens%20up%20a%20new%20shell%20in%20the%20directory%20associated%20with%20the%0A%20current%20buffer's%20file.%20The%20eshell%20is%20renamed%20to%20match%20that%0A%20directory%20to%20make%20multiple%20eshell%20windows%20easier."%0A%20(interactive)%0A%20(let*%20((parent%20(if%20(buffer-file-name)%0A%20(file-name-directory%20(buffer-file-name))%0A%20default-directory))%0A%20(height%20(/%20(window-total-height)%203))%0A%20(name%20(car%20(last%20(split-string%20parent%20"/"%20t)))))%0A%20(split-window-vertically%20(-%20height))%0A%20(other-window%201)%0A%20(eshell%20"new")%0A%20(rename-buffer%20(concat%20"*eshell:%20"%20name%20"*"))%0A%0A%20;;(insert%20(concat%20"ls"))%0A%20;;(eshell-send-input)%0A%20))%0A%0A%20(bind-key%20"C-!"%20'eshell-here)%0A%20(bind-key%20"<f2>"%20'eshell-here)%0A%20))%0A%0A#+END_SRC%0A**%20Dired%0A%0A][Dired:1]]
(use-package dired
  :commands (dired)
  :config
  (setq dired-recursive-copies 'always
        dired-recursive-deletes 'always
        dired-dwim-target t
        ;; -F marks links with @
        dired-ls-F-marks-symlinks t
        ;;delete-by-moving-to-trash t
        ;; Auto refresh dired
        global-auto-revert-non-file-buffers t
        wdired-allow-to-change-permissions t
        wdired-allow-to-redirect-links t
        wdired-use-interactive-rename nil 
        wdired-confirm-overwrite t)
)

(add-hook 'dired-load-hook
          (lambda ()
            ;; Bind dired-x-find-file.
            (setq dired-x-hands-off-my-keys nil)
            (load "dired-x")
            ))

;; (add-hook 'dired-mode-hook
;;           (lambda ()
;;             ;; Set dired-x buffer-local variables here.  For example:
;;             ;;(dired-omit-mode 1)
;;             ))
;; Dired:1 ends here

;; Location and calendar


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dockerfile-mode%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20docker%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Puppet%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20puppet-mode%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Vagrant%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20vagrant%0A%20:ensure%20t)%0A;;%20(use-package%20vagrant-tramp%0A;;%20:ensure%20t)%0A#+END_SRC%0A%0A*%20Programming%0A**%20General%20programming%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20compilation:%20don't%20ask%20about%20saving,%20don't%20save,%20and%20add%20helper%20to%20shell%20mode.%0A(setq%20compilation-ask-about-save%20nil)%0A(setq%20compilation-save-buffers-predicate%20'(lambda%20()%20nil))%0A(add-hook%20'shell-mode-hook%20'compilation-shell-minor-mode)%0A%0A;;%20make%20a%20file%20executable%20if%20it%20starts%20with%20#!%0A(add-hook%0A%20'after-save-hook%0A%20'executable-make-buffer-file-executable-if-script-p)%0A%0A%0A(use-package%20company%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-company-mode)%0A%20(use-package%20company-quickhelp%0A%20:ensure%20t%0A%20:config%0A%20(setq%20company-quickhelp-idle-delay%203)%0A%20(company-quickhelp-mode%201)%0A%20)%0A%20(use-package%20company-emoji%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'markdown-mode-hook%20'company-mode)%0A%20(add-hook%20'markdown-mode-hook%20'company-emoji-init)%20%0A%20)%0A%20(use-package%20company-jedi%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:config%20(add-to-list%20'company-backends%20'company-jedi)%20%0A%20)%20%0A%20)%0A%0A%0A(use-package%20flycheck%0A%20:ensure%20t%0A%20:defer%20t%0A%20:commands%20(flycheck-mode)%0A%20:diminish%20""%0A%20:init%20(global-flycheck-mode)%0A%20:bind%0A%20(("M-g%20M-n"%20.%20flycheck-next-error)%0A%20("M-g%20M-p"%20.%20flycheck-previous-error)%0A%20("M-g%20M-="%20.%20flycheck-list-errors))%0A%20:config%0A%20(setq-default%20flycheck-disabled-checkers%20'(emacs-lisp-checkdoc))%0A%20)%0A%0A(use-package%20aggressive-indent%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:commands%20(aggressive-indent-mode)%0A%20:config%20%0A%20(add-to-list%20'aggressive-indent-excluded-modes%20'elpy-mode)%20;;%20aggressive%20indent%20is%20too%20aggressive%20for%20python%0A%20(aggressive-indent-global-mode%201))%0A%0A(use-package%20rainbow-mode%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20yasnippet%0A%20:ensure%20t%0A%20:init%0A%20(yas-global-mode%201)%0A%20)%0A%0A%0A(add-hook%20'prog-mode-hook%20'flyspell-prog-mode)%0A(add-hook%20'prog-mode-hook%20'imenu-add-menubar-index)%0A(add-hook%20'prog-mode-hook%20'aggressive-indent-mode)%0A%0A#+END_SRC%0A**%20Makefile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20my-makefile-hook%0A%20(setq%20indent-tabs-mode%20t)%0A%20)%0A(add-hook%20'makefile-mode-hook%20'my-makefile-hook)%0A#+END_SRC%0A%0A**%20Projectile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20projectile%0A%20:ensure%20t%0A%20:config%20(projectile-global-mode%201)%0A%20:diminish%20projectile-mode%0A%20:init%0A%20(progn%0A%20(setq%20projectile-file-exists-remote-cache-expire%20(*%2030%2060))%0A%20(setq%20projectile-switch-project-action%20'projectile-find-file-dwim)))%0A%0A#+END_SRC%0A%0A**%20Python%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20elpy%0A%20:ensure%20t%0A%20:commands%20(elpy-enable)%0A%20:diminish%20"%F0%9F%90%8D"%0A%20:init%20%0A%20(setq%20elpy-rpc-backend%20"jedi"%0A%20elpy-rpc-project-specific%20't%0A%20)%0A%20(elpy-enable)%0A%20:config%0A%20(elpy-use-ipython%20"ipython3")%20%0A%20(when%20(fboundp%20'flycheck-mode)%0A%20(setq%20elpy-modules%20(delete%20'elpy-module-flymake%20elpy-modules)))%0A%20;;%20fix%20PEP8%20compliance%20on%20save%0A%20(use-package%20py-autopep8%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'elpy-mode-hook%20'py-autopep8-enable-on-save))%0A%20;;%20emacs%20ipython%20notebook%0A%20(use-package%20ein%0A%20:ensure%20t)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Emacs%20lisp%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20paredit%0A%20:ensure%20t%0A%20:commands%20(paredit-mode)%0A%20:config%0A%20(progn%0A%20(defvar%20electrify-return-match%20"%5B\%5D}\)\"%5D"%0A%20"If%20this%20regexp%20matches%20the%20text%20after%20the%20cursor,%20do%20an%20\"electric\"%0A%20return.")%0A%0A%20(defun%20electrify-return-if-match%20(arg)%0A%20"If%20the%20text%20after%20the%20cursor%20matches%0A%20`electrify-return-match'%20then%20open%20and%20indent%20an%20empty%20line%0A%20between%20the%20cursor%20and%20the%20text.%20Move%20the%20cursor%20to%20the%20new%20line."%0A%20(interactive%20"P")%0A%20(let%20((case-fold-search%20nil))%0A%20(if%20(looking-at%20electrify-return-match)%0A%20(save-excursion%20(newline-and-indent)))%0A%20(newline%20arg)%0A%20(indent-according-to-mode)))%0A%20))%0A%0A(defun%20my/lisp-mode%20()%0A%20(paredit-mode%20t)%20%0A%20(turn-on-eldoc-mode)%0A%20(eldoc-add-command%0A%20'paredit-backward-delete%0A%20'paredit-close-round)%0A%20(local-set-key%20(kbd%20"RET")%20'electrify-return-if-match)%0A%20(eldoc-add-command%20'electrify-return-if-match)%0A%20(show-paren-mode%20t))%0A%0A(add-hook%20'emacs-lisp-mode-hook%20'my/lisp-mode)%0A(add-hook%20'eval-expression-minibuffer-setup-hook%20'my/lisp-mode)%0A%0A;;(use-package%20rainbow-delimiters)%0A%0A#+END_SRC%0A%0A**%20Shell%20script%0A**%20Ruby%0A%0ARuby-mode%20is%20included%20with%20Emacs%20(23+).%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ruby-mode%0A%20:diminish%20"%F0%9F%92%8E"%0A%20)%0A%0A;;%20Rubyish%20file%20extensions:%0A(add-to-list%20'auto-mode-alist%0A%20'("\\.\\(?:cap\\|gemspec\\|irbrc\\|gemrc\\|rake\\|rb\\|ru\\|thor\\)\\'"%20%0A%20.%20ruby-mode))%0A(add-to-list%20'auto-mode-alist%0A%20'("\\(?:Brewfile\\|Capfile\\|Gemfile\\(?:\\.%5Ba-zA-Z0-9._-%5D+\\)?\\|%5BrR%5Dakefile\\)\\'"%20%0A%20.%20ruby-mode))%0A%0A;;%20inf-ruby%20gives%20us%20a%20Ruby%20REPL%0A;;%20not%20in%20Melpa-stable.%20TODO%20put%20it%20in%20vendor/%0A(use-package%20inf-ruby%0A%20:config%20%0A%20(add-hook%20'ruby-mode-hook%20'inf-ruby-minor-mode)%0A%20)%0A#+END_SRC%0A%0A**%20Go%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20install%20godef%20w/%20go%20get%20github.com/rogpeppe/godef%0A(use-package%20go-mode%0A%20:ensure%20t%0A%20)%0A%0A;;%20requires%20gocode:%20go%20get%20-u%20github.com/nsf/gocode%0A(use-package%20go-eldoc%0A%20:ensure%20t%0A%20)%0A(use-package%20company-go%0A%20:ensure%20t%0A%20)%0A%0A%0A(add-hook%20'go-mode-hook%20%0A%20(lambda%20()%0A%20(add-hook%20'before-save-hook%20#'gofmt-before-save)%0A%20(local-set-key%20(kbd%20"M-.")%20#'godef-jump)%0A%20(flycheck-mode%201)))%0A(add-hook%20'go-mode-hook%20'go-eldoc-setup)%0A%0A#+END_SRC%0A%0A**%20Web%20mode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20web-mode%0A%20:ensure%20t%0A%20:init%0A%20(setq%20web-mode-enable-auto-pairing%20t)%0A%20(setq%20web-mode-enable-css-colorization%20t)%0A%20(setq%20web-mode-enable-current-element-highlight%20t)%0A%20(setq%20web-mode-enable-current-column-highlight%20t)%0A%20(setq%20web-mode-ac-sources-alist%0A%20'(("css"%20.%20(ac-source-css-property))%0A%20("html"%20.%20(ac-source-words-in-buffer%20ac-source-abbrev)))%0A%20)%0A%20:config%0A%20(add-to-list%20'auto-mode-alist%20'("\\.erb\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.djhtml\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.dtl\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.html?\\'"%20.%20web-mode))%0A%20)%0A#+END_SRC%0A%0A*%20Writing%0A%20General%20writing%20settings.%0A%0A**%20AUCTeX%0A%0A%20-dnf%20install%20-y%20emacs-auctex-%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(when%20(require%20'tex-site%20nil%20'noerror)%0A%20;;%20currently%20using%20Auctex%20from%20Fedora.%0A%20;;%20these%20are%20recommended%20in%20info%0A%20(setq%20TeX-auto-save%20t)%0A%20(setq%20TeX-parse-self%20t)%0A%20;;(setq-default%20TeX-master%20nil)%0A%20;;%20we%20don't%20care%20for%20Computer%20Modern,%20let's%20use%20All.%20The.%20Fonts.%0A%20(setq%20latex-run-command%20"latexmk%20-xelatex")%0A%20;;%20mkiv%20is%20the%20recommended%20ConTeXt%20version%0A%20(setq%20ConTeXt-Mark-version%20"IV")%0A%20)%0A#+END_SRC%0A%0A**%20Proselint%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Requires%20'pip%20install%20proselint'%0A;;%0A;;%20From%20https:/github.com/amperser/proselint/tree/master/plugins/flycheck%0A;;%20(flycheck-define-checker%20proselint%0A;;%20"A%20linter%20for%20prose."%0A;;%20:command%20("proselint"%20source-inplace)%0A;;%20:error-patterns%0A;;%20((warning%20line-start%20(file-name)%20":"%20line%20":"%20column%20":%20"%0A;;%20(id%20(one-or-more%20(not%20(any%20"%20"))))%0A;;%20(message%20(one-or-more%20not-newline)%0A;;%20(zero-or-more%20"\n"%20(any%20"%20")%20(one-or-more%20not-newline)))%0A;;%20line-end))%0A;;%20:modes%20(text-mode%20org-mode%20markdown-mode%20gfm-mode))%0A%0A;;%20(add-to-list%20'flycheck-checkers%20'proselint)%0A%0A;;%20(add-hook%20'text-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'org-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'markdown-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'gfm-mode-hook%20#'flycheck-mode)%0A#+END_SRC%0A**%20Spelling%0A%20Use%20wcheck-mode%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20(use-package%20wcheck-mode%0A;;%20:pin%20gnu%0A;;%20:ensure%20t%0A;;%20:commands%20(wcheck-mode%20wcheck-mode-languages%20wcheck-actions%0A;;%20wcheck-jump-forward%20wcheck-jump-backward)%0A;;%20:init%0A;;%20(setq%20wcheck-language-data%0A;;%20'(("American%20English"%0A;;%20(program%20.%20"aspell")%0A;;%20(args%20"-l"%20"-d"%20"en_US")%0A;;%20(action-program%20.%20"aspell")%0A;;%20(action-args%20"-a"%20"-d"%20"en_US")%0A;;%20(action-parser%20.%20wcheck-parser-ispell-suggestions))%0A;;%20("Finnish"%0A;;%20(program%20.%20"enchant")%0A;;%20(args%20"-l"%20"-d"%20"fi")%0A;;%20(syntax%20.%20my-finnish-syntax-table)%0A;;%20(action-program%20.%20"enchant")%0A;;%20(action-args%20"-a"%20"-d"%20"fi")%0A;;%20(action-parser%20.%20enchant-suggestion-menu))))%0A%0A;;%20:config%0A;;%20(defun%20enchant-suggestions-menu%20(marked-text)%0A;;%20(cons%20(cons%20"%5BAdd%20to%20dictionary%5D"%20'enchant-add-to-dictionary)%0A;;%20(wcheck-parser-ispell-suggestions)))%0A%0A;;%20(defvar%20enchant-dictionaries-dir%20"~/.config/enchant")%0A;;%20(defun%20enchant-add-to-dictionary%20(marked-text)%0A;;%20(let*%20((word%20(aref%20marked-text%200))%0A;;%20(language%20(aref%20marked-text%204))%0A;;%20(file%20(let%20((code%20(nth%201%20(member%20"-d"%20(wcheck-query-language-data%0A;;%20language%20'action-args)))))%0A;;%20(when%20(stringp%20code)%0A;;%20(concat%20(file-name-as-directory%20enchant-dictionaries-dir)%0A;;%20code%20".dic")))))%0A;;%20(when%20(and%20file%20(file-writable-p%20file))%0A;;%20(with-temp-buffer%0A;;%20(insert%20word)%20(newline)%0A;;%20(append-to-file%20(point-min)%20(point-max)%20file)%0A;;%20(message%20"Added%20word%20\"%25s\"%20to%20the%20%25s%20dictionary"%0A;;%20word%20language)))))%0A;;%20)%20%0A%0A;;%20use%20hunspell%20if%20we%20have%20it%0A(when%20(executable-find%20"hunspell")%0A%20(setq-default%20ispell-program-name%20"hunspell")%0A%20(setq%20ispell-really-hunspell%20t))%0A%0A;;%20flyspell%0A(add-hook%20'text-mode-hook%20(lambda%20()%0A%20(flyspell-mode%201)))%0A(add-hook%20'prog-mode-hook%20(lambda%20()%0A%20(flyspell-prog-mode)))%0A%0A%0A#+END_SRC%0A%0A**%20Markdown%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20markdown-mode%0A%20:ensure%20t%0A%20:commands%20(markdown-mode%20gfm-mode)%0A%20:mode%20%0A(("README\\.md\\'"%20.%20gfm-mode)%0A%20("\\.md\\'"%20.%20markdown-mode)%0A%20("\\.markdown\\'"%20.%20markdown-mode))%0A%20:init%20%0A(setq%20markdown-command%20"pandoc%20-f%20markdown%20-t%20html5")%0A)%0A#+END_SRC%0A%0A**%20Pandoc%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pandoc-mode%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'markdown-mode-hook%20'pandoc-mode)%0A%20:config%0A%20(add-hook%20'pandoc-mode-hook%20'pandoc-load-default-settings)%0A%20)%0A#+END_SRC%0A%0A*%20Applications%0A**%20Shells%0A***%20Eshell%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20eshell%0A%20:commands%20eshell%20eshell-command%0A%20:init%0A%20(setq%20eshell-buffer-shorthand%20t%0A%20eshell-cmpl-ignore-case%20t%0A%20eshell-cmpl-cycle-completions%20nil%0A%20eshell-history-size%2010000%0A%20eshell-save-history-on-exit%20t%0A%20eshell-hist-ignoredups%20t%0A%20eshell-glob-case-insensitive%20t%0A%20eshell-scroll-to-bottom-on-input%20'this)%0A%20:config%0A%20(progn%0A%20(require%20'em-smart)%0A%20(setq%20eshell-where-to-jump%20'begin%0A%20eshell-review-quick-commands%20nil%0A%20eshell-smart-space-goes-to-end%20t)%0A%20(require%20'em-cmpl)%0A%20(require%20'em-prompt)%0A%20(require%20'em-term)%0A%20(require%20'esh-opt)%0A%20%0A%20(setenv%20"PAGER"%20"cat")%0A%20(defalias%20'e%20'find-file)%0A%20(defalias%20'ff%20'find-file)%0A%20(defalias%20'vim%20'find-file)%0A%20(defalias%20'emacs%20'find-file-other-window)%0A%20(defalias%20'gd%20'magit-diff-unstaged)%0A%20(defalias%20'gds%20'magit-diff-staged)%0A%20(defun%20eshell/d%20(&rest%20args)%0A%20(dired%20(pop%20args)%20"."))%0A%20%0A%20(defun%20eshell/x%20()%0A%20"Closes%20the%20EShell%20session%20and%20gets%20rid%20of%20the%20EShell%20window."%0A%20(kill-buffer)%0A%20(delete-window))%0A%20%0A%20(defun%20eshell/gst%20(&rest%20args)%0A%20(magit-status%20(pop%20args)%20nil)%0A%20(eshell/echo))%20;;%20The%20echo%20command%20suppresses%20output%0A%0A%20(defun%20eshell/magit%20()%0A%20"Function%20to%20open%20magit-status%20for%20the%20current%20directory"%0A%20(interactive)%0A%20(magit-status%20default-directory))%0A%20%0A%20(add-to-list%20'eshell-visual-commands%20"tmux")%0A%20(add-to-list%20'eshell-visual-commands%20"ssh")%0A%20(add-to-list%20'eshell-visual-commands%20"vim")%0A%20(add-to-list%20'eshell-visual-commands%20"links")%0A%20(add-to-list%20'eshell-visual-commands%20"elinks")%0A%20(add-to-list%20'eshell-visual-commands%20"alsamixer")%0A%20(add-to-list%20'eshell-visual-commands%20"nmtui")%0A%20(add-to-list%20'eshell-visual-commands%20"tail")%0A%0A%20(add-to-list%20'eshell-visual-subcommands%20'(("git"%20"log"%20"diff"%20"show")))%0A%0A%20(defun%20eshell-here%20()%0A%20"https:/github.com/howardabrams/dot-files/blob/master/emacs-eshell.org%0A%20Opens%20up%20a%20new%20shell%20in%20the%20directory%20associated%20with%20the%0A%20current%20buffer's%20file.%20The%20eshell%20is%20renamed%20to%20match%20that%0A%20directory%20to%20make%20multiple%20eshell%20windows%20easier."%0A%20(interactive)%0A%20(let*%20((parent%20(if%20(buffer-file-name)%0A%20(file-name-directory%20(buffer-file-name))%0A%20default-directory))%0A%20(height%20(/%20(window-total-height)%203))%0A%20(name%20(car%20(last%20(split-string%20parent%20"/"%20t)))))%0A%20(split-window-vertically%20(-%20height))%0A%20(other-window%201)%0A%20(eshell%20"new")%0A%20(rename-buffer%20(concat%20"*eshell:%20"%20name%20"*"))%0A%0A%20;;(insert%20(concat%20"ls"))%0A%20;;(eshell-send-input)%0A%20))%0A%0A%20(bind-key%20"C-!"%20'eshell-here)%0A%20(bind-key%20"<f2>"%20'eshell-here)%0A%20))%0A%0A#+END_SRC%0A**%20Dired%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dired%0A%20:commands%20(dired)%0A%20:config%0A%20(setq%20dired-recursive-copies%20'always%0A%20dired-recursive-deletes%20'always%0A%20dired-dwim-target%20t%0A%20;;%20-F%20marks%20links%20with%20@%0A%20dired-ls-F-marks-symlinks%20t%0A%20;;delete-by-moving-to-trash%20t%0A%20;;%20Auto%20refresh%20dired%0A%20global-auto-revert-non-file-buffers%20t%0A%20wdired-allow-to-change-permissions%20t%0A%20wdired-allow-to-redirect-links%20t%0A%20wdired-use-interactive-rename%20nil%20%0A%20wdired-confirm-overwrite%20t)%0A)%0A%0A(add-hook%20'dired-load-hook%0A%20(lambda%20()%0A%20;;%20Bind%20dired-x-find-file.%0A%20(setq%20dired-x-hands-off-my-keys%20nil)%0A%20(load%20"dired-x")%0A%20))%0A%0A;;%20(add-hook%20'dired-mode-hook%0A;;%20(lambda%20()%0A;;%20;;%20Set%20dired-x%20buffer-local%20variables%20here.%20For%20example:%0A;;%20;;(dired-omit-mode%201)%0A;;%20))%0A%0A%0A%0A#+END_SRC%0A%0A*%20Location%20and%20calendar%0A%0A][Location\ and\ calendar:1]]
;; where I hang my hat
(setq calendar-latitude 37.9
      calendar-longitude 122.9
      calendar-location-name "Berkeley, CA, US"
      calendar-time-zone 480
      calendar-standard-time-zone-name "PST"
      calendar-standard-daylight-time-zone-name "PDT")

(setq display-time-24hr-format t)

(setq display-time-world-list
      '(("America/Los_Angeles" "California")
        ("Europe/Helsinki" "Helsinki")
        ("UTC" "UTC")
        ("America/New_York" "US East")
        ("America/Chicago" "Chicago")
        ("America/Denver" "Denver")
        ("US/Hawaii" "Hawaii")
        ("Africa/Dakar" "Dakar")
        ("Europe/London" "London")
        ("Europe/Paris" "Paris")
        ("Europe/Berlin" "Berlin")
        ("Asia/Kolkata" "India")
        ("Asia/Shanghai" "China")
        ("Asia/Tokyo" "Tokyo")))

(setq display-time-world-time-format
      "%R %5Z (UTC%z) - %d %3h - %A")

(setq holiday-bahai-holidays nil)
(setq holiday-christian-holidays nil)
(setq holiday-hebrew-holidays nil)
(setq holiday-islamic-holidays nil)
(setq holiday-other-holidays
      ;; Edited from suomalainen-kalenteri.el
      '((holiday-fixed 1 1 "Uudenvuodenpäivä")
        (holiday-fixed 1 27 "Vainojen uhrien muistopäivä")
        (holiday-fixed 2 5 "J. L. Runebergin päivä (liputus)")
        (holiday-fixed 2 6 "Saamelaisten kansallispäivä")
        (holiday-fixed 2 28 "Kalevalan päivä, suomalaisen kulttuurin päivä (liputus)")
        (holiday-fixed 2 29 "Karkauspäivä")
        (holiday-fixed 3 8 "Kansainvälinen naistenpäivä")
        (holiday-fixed 3 19 "Minna Canthin päivä, tasa-arvon päivä (liputus)")
        (holiday-sexp '(if (>= year 2014) (list 4 8 year))
                      "Romanien kansallispäivä")
        (holiday-fixed 4 9 "Mikael Agricolan päivä, suomen kielen päivä (liputus)")
        (holiday-fixed 4 27 "Kansallinen veteraanipäivä (liputus)")
        (holiday-fixed 5 1 "Vappu, suomalaisen työn päivä (liputus)")
        (holiday-fixed 5 9 "Eurooppa-päivä (liputus)")
        (holiday-fixed 5 12 "J. V. Snellmanin päivä, suomalaisuuden päivä (liputus)")
        (holiday-float 5 0 2 "Äitienpäivä (liputus)")
        (holiday-float 5 0 3 "Kaatuneitten muistopäivä (liputus, puolitangossa)")
        (holiday-fixed 6 4 "Puolustusvoimain lippujuhlan päivä (liputus)")
        (holiday-fixed 6 5 "Maailman ympäristöpäivä")
        (holiday-float 6 6 1 "Juhannuspäivä, Suomen lipun päivä (liputus)" 20)
        (holiday-fixed 7 6 "Eino Leinon päivä, runon ja suven päivä (liputus)")
        (holiday-fixed 10 10 "Aleksis Kiven päivä, suomalaisen kirjallisuuden päivä (liputus)")
        (holiday-fixed 10 24 "YK:n päivä (liputus)")
        (holiday-float 10 6 1 "Pyhäinpäivä" 31)
        (holiday-fixed 11 6 "Ruotsalaisuuden päivä, Kustaa Aadolfin päivä (liputus)")
        (holiday-float 11 0 2 "Isänpäivä (liputus)")
        (holiday-fixed 11 20 "Lapsen oikeuksien päivä")
        (holiday-fixed 12 6 "Itsenäisyyspäivä (liputus)")
        (holiday-sexp '(if (>= year 2011) (list 12 8 year))  "Jean Sibeliuksen päivä, suomalaisen musiikin päivä (liputus)")
        ;; other days
        (holiday-fixed 7 14 "Bastille Day")
        (holiday-float 10 1 2 "Indigenous Peoples' Day")
        ;; muslim holidays
        (holiday-islamic 9 1 "Ramadan begins")
        (holiday-islamic 10 1 "Eid al-Fitr")
        (holiday-islamic 12 10 "Eid al-Adha")
        ;; jewish holidays
        (holiday-hebrew 7 1 "Rosh Hashanah")
        (holiday-hebrew 7 10 "Yom Kippur")
        (holiday-hebrew 3 25 "Hanukkah")
        ;; UN international days
        (holiday-fixed 3 20 "International Day of Happiness")
        (holiday-fixed 4 12 "International Day of Human Space Flight")
        (holiday-fixed 4 30 "International Jazz Day")
        (holiday-fixed 6 1 "Global Day of Parents")
        (holiday-fixed 6 21 "International Day of Yoga")
        (holiday-fixed 7 18 "Nelson Mandela International Day")
        (holiday-fixed 11 19 "World Toilet Day")
        (holiday-float 11 4 3 "World Philosophy Day")
        (holiday-fixed 11 20 "Universal Children's Day")
        ))

        
      
;; (setq holiday-local-holidays
;;       '((holiday-fixed 12 21 "BUSD Winter recess start")
;;         (holiday-fixed 6 17  "BUSD last day of school")))

(add-hook 'calendar-load-hook 
          (lambda () (calendar-set-date-style 'european)))
;; Location\ and\ calendar:1 ends here

;; Global key bindings


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dockerfile-mode%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20docker%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Puppet%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20puppet-mode%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Vagrant%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20vagrant%0A%20:ensure%20t)%0A;;%20(use-package%20vagrant-tramp%0A;;%20:ensure%20t)%0A#+END_SRC%0A%0A*%20Programming%0A**%20General%20programming%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20compilation:%20don't%20ask%20about%20saving,%20don't%20save,%20and%20add%20helper%20to%20shell%20mode.%0A(setq%20compilation-ask-about-save%20nil)%0A(setq%20compilation-save-buffers-predicate%20'(lambda%20()%20nil))%0A(add-hook%20'shell-mode-hook%20'compilation-shell-minor-mode)%0A%0A;;%20make%20a%20file%20executable%20if%20it%20starts%20with%20#!%0A(add-hook%0A%20'after-save-hook%0A%20'executable-make-buffer-file-executable-if-script-p)%0A%0A%0A(use-package%20company%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-company-mode)%0A%20(use-package%20company-quickhelp%0A%20:ensure%20t%0A%20:config%0A%20(setq%20company-quickhelp-idle-delay%203)%0A%20(company-quickhelp-mode%201)%0A%20)%0A%20(use-package%20company-emoji%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'markdown-mode-hook%20'company-mode)%0A%20(add-hook%20'markdown-mode-hook%20'company-emoji-init)%20%0A%20)%0A%20(use-package%20company-jedi%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:config%20(add-to-list%20'company-backends%20'company-jedi)%20%0A%20)%20%0A%20)%0A%0A%0A(use-package%20flycheck%0A%20:ensure%20t%0A%20:defer%20t%0A%20:commands%20(flycheck-mode)%0A%20:diminish%20""%0A%20:init%20(global-flycheck-mode)%0A%20:bind%0A%20(("M-g%20M-n"%20.%20flycheck-next-error)%0A%20("M-g%20M-p"%20.%20flycheck-previous-error)%0A%20("M-g%20M-="%20.%20flycheck-list-errors))%0A%20:config%0A%20(setq-default%20flycheck-disabled-checkers%20'(emacs-lisp-checkdoc))%0A%20)%0A%0A(use-package%20aggressive-indent%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:commands%20(aggressive-indent-mode)%0A%20:config%20%0A%20(add-to-list%20'aggressive-indent-excluded-modes%20'elpy-mode)%20;;%20aggressive%20indent%20is%20too%20aggressive%20for%20python%0A%20(aggressive-indent-global-mode%201))%0A%0A(use-package%20rainbow-mode%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20yasnippet%0A%20:ensure%20t%0A%20:init%0A%20(yas-global-mode%201)%0A%20)%0A%0A%0A(add-hook%20'prog-mode-hook%20'flyspell-prog-mode)%0A(add-hook%20'prog-mode-hook%20'imenu-add-menubar-index)%0A(add-hook%20'prog-mode-hook%20'aggressive-indent-mode)%0A%0A#+END_SRC%0A**%20Makefile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20my-makefile-hook%0A%20(setq%20indent-tabs-mode%20t)%0A%20)%0A(add-hook%20'makefile-mode-hook%20'my-makefile-hook)%0A#+END_SRC%0A%0A**%20Projectile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20projectile%0A%20:ensure%20t%0A%20:config%20(projectile-global-mode%201)%0A%20:diminish%20projectile-mode%0A%20:init%0A%20(progn%0A%20(setq%20projectile-file-exists-remote-cache-expire%20(*%2030%2060))%0A%20(setq%20projectile-switch-project-action%20'projectile-find-file-dwim)))%0A%0A#+END_SRC%0A%0A**%20Python%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20elpy%0A%20:ensure%20t%0A%20:commands%20(elpy-enable)%0A%20:diminish%20"%F0%9F%90%8D"%0A%20:init%20%0A%20(setq%20elpy-rpc-backend%20"jedi"%0A%20elpy-rpc-project-specific%20't%0A%20)%0A%20(elpy-enable)%0A%20:config%0A%20(elpy-use-ipython%20"ipython3")%20%0A%20(when%20(fboundp%20'flycheck-mode)%0A%20(setq%20elpy-modules%20(delete%20'elpy-module-flymake%20elpy-modules)))%0A%20;;%20fix%20PEP8%20compliance%20on%20save%0A%20(use-package%20py-autopep8%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'elpy-mode-hook%20'py-autopep8-enable-on-save))%0A%20;;%20emacs%20ipython%20notebook%0A%20(use-package%20ein%0A%20:ensure%20t)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Emacs%20lisp%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20paredit%0A%20:ensure%20t%0A%20:commands%20(paredit-mode)%0A%20:config%0A%20(progn%0A%20(defvar%20electrify-return-match%20"%5B\%5D}\)\"%5D"%0A%20"If%20this%20regexp%20matches%20the%20text%20after%20the%20cursor,%20do%20an%20\"electric\"%0A%20return.")%0A%0A%20(defun%20electrify-return-if-match%20(arg)%0A%20"If%20the%20text%20after%20the%20cursor%20matches%0A%20`electrify-return-match'%20then%20open%20and%20indent%20an%20empty%20line%0A%20between%20the%20cursor%20and%20the%20text.%20Move%20the%20cursor%20to%20the%20new%20line."%0A%20(interactive%20"P")%0A%20(let%20((case-fold-search%20nil))%0A%20(if%20(looking-at%20electrify-return-match)%0A%20(save-excursion%20(newline-and-indent)))%0A%20(newline%20arg)%0A%20(indent-according-to-mode)))%0A%20))%0A%0A(defun%20my/lisp-mode%20()%0A%20(paredit-mode%20t)%20%0A%20(turn-on-eldoc-mode)%0A%20(eldoc-add-command%0A%20'paredit-backward-delete%0A%20'paredit-close-round)%0A%20(local-set-key%20(kbd%20"RET")%20'electrify-return-if-match)%0A%20(eldoc-add-command%20'electrify-return-if-match)%0A%20(show-paren-mode%20t))%0A%0A(add-hook%20'emacs-lisp-mode-hook%20'my/lisp-mode)%0A(add-hook%20'eval-expression-minibuffer-setup-hook%20'my/lisp-mode)%0A%0A;;(use-package%20rainbow-delimiters)%0A%0A#+END_SRC%0A%0A**%20Shell%20script%0A**%20Ruby%0A%0ARuby-mode%20is%20included%20with%20Emacs%20(23+).%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ruby-mode%0A%20:diminish%20"%F0%9F%92%8E"%0A%20)%0A%0A;;%20Rubyish%20file%20extensions:%0A(add-to-list%20'auto-mode-alist%0A%20'("\\.\\(?:cap\\|gemspec\\|irbrc\\|gemrc\\|rake\\|rb\\|ru\\|thor\\)\\'"%20%0A%20.%20ruby-mode))%0A(add-to-list%20'auto-mode-alist%0A%20'("\\(?:Brewfile\\|Capfile\\|Gemfile\\(?:\\.%5Ba-zA-Z0-9._-%5D+\\)?\\|%5BrR%5Dakefile\\)\\'"%20%0A%20.%20ruby-mode))%0A%0A;;%20inf-ruby%20gives%20us%20a%20Ruby%20REPL%0A;;%20not%20in%20Melpa-stable.%20TODO%20put%20it%20in%20vendor/%0A(use-package%20inf-ruby%0A%20:config%20%0A%20(add-hook%20'ruby-mode-hook%20'inf-ruby-minor-mode)%0A%20)%0A#+END_SRC%0A%0A**%20Go%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20install%20godef%20w/%20go%20get%20github.com/rogpeppe/godef%0A(use-package%20go-mode%0A%20:ensure%20t%0A%20)%0A%0A;;%20requires%20gocode:%20go%20get%20-u%20github.com/nsf/gocode%0A(use-package%20go-eldoc%0A%20:ensure%20t%0A%20)%0A(use-package%20company-go%0A%20:ensure%20t%0A%20)%0A%0A%0A(add-hook%20'go-mode-hook%20%0A%20(lambda%20()%0A%20(add-hook%20'before-save-hook%20#'gofmt-before-save)%0A%20(local-set-key%20(kbd%20"M-.")%20#'godef-jump)%0A%20(flycheck-mode%201)))%0A(add-hook%20'go-mode-hook%20'go-eldoc-setup)%0A%0A#+END_SRC%0A%0A**%20Web%20mode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20web-mode%0A%20:ensure%20t%0A%20:init%0A%20(setq%20web-mode-enable-auto-pairing%20t)%0A%20(setq%20web-mode-enable-css-colorization%20t)%0A%20(setq%20web-mode-enable-current-element-highlight%20t)%0A%20(setq%20web-mode-enable-current-column-highlight%20t)%0A%20(setq%20web-mode-ac-sources-alist%0A%20'(("css"%20.%20(ac-source-css-property))%0A%20("html"%20.%20(ac-source-words-in-buffer%20ac-source-abbrev)))%0A%20)%0A%20:config%0A%20(add-to-list%20'auto-mode-alist%20'("\\.erb\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.djhtml\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.dtl\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.html?\\'"%20.%20web-mode))%0A%20)%0A#+END_SRC%0A%0A*%20Writing%0A%20General%20writing%20settings.%0A%0A**%20AUCTeX%0A%0A%20-dnf%20install%20-y%20emacs-auctex-%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(when%20(require%20'tex-site%20nil%20'noerror)%0A%20;;%20currently%20using%20Auctex%20from%20Fedora.%0A%20;;%20these%20are%20recommended%20in%20info%0A%20(setq%20TeX-auto-save%20t)%0A%20(setq%20TeX-parse-self%20t)%0A%20;;(setq-default%20TeX-master%20nil)%0A%20;;%20we%20don't%20care%20for%20Computer%20Modern,%20let's%20use%20All.%20The.%20Fonts.%0A%20(setq%20latex-run-command%20"latexmk%20-xelatex")%0A%20;;%20mkiv%20is%20the%20recommended%20ConTeXt%20version%0A%20(setq%20ConTeXt-Mark-version%20"IV")%0A%20)%0A#+END_SRC%0A%0A**%20Proselint%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Requires%20'pip%20install%20proselint'%0A;;%0A;;%20From%20https:/github.com/amperser/proselint/tree/master/plugins/flycheck%0A;;%20(flycheck-define-checker%20proselint%0A;;%20"A%20linter%20for%20prose."%0A;;%20:command%20("proselint"%20source-inplace)%0A;;%20:error-patterns%0A;;%20((warning%20line-start%20(file-name)%20":"%20line%20":"%20column%20":%20"%0A;;%20(id%20(one-or-more%20(not%20(any%20"%20"))))%0A;;%20(message%20(one-or-more%20not-newline)%0A;;%20(zero-or-more%20"\n"%20(any%20"%20")%20(one-or-more%20not-newline)))%0A;;%20line-end))%0A;;%20:modes%20(text-mode%20org-mode%20markdown-mode%20gfm-mode))%0A%0A;;%20(add-to-list%20'flycheck-checkers%20'proselint)%0A%0A;;%20(add-hook%20'text-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'org-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'markdown-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'gfm-mode-hook%20#'flycheck-mode)%0A#+END_SRC%0A**%20Spelling%0A%20Use%20wcheck-mode%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20(use-package%20wcheck-mode%0A;;%20:pin%20gnu%0A;;%20:ensure%20t%0A;;%20:commands%20(wcheck-mode%20wcheck-mode-languages%20wcheck-actions%0A;;%20wcheck-jump-forward%20wcheck-jump-backward)%0A;;%20:init%0A;;%20(setq%20wcheck-language-data%0A;;%20'(("American%20English"%0A;;%20(program%20.%20"aspell")%0A;;%20(args%20"-l"%20"-d"%20"en_US")%0A;;%20(action-program%20.%20"aspell")%0A;;%20(action-args%20"-a"%20"-d"%20"en_US")%0A;;%20(action-parser%20.%20wcheck-parser-ispell-suggestions))%0A;;%20("Finnish"%0A;;%20(program%20.%20"enchant")%0A;;%20(args%20"-l"%20"-d"%20"fi")%0A;;%20(syntax%20.%20my-finnish-syntax-table)%0A;;%20(action-program%20.%20"enchant")%0A;;%20(action-args%20"-a"%20"-d"%20"fi")%0A;;%20(action-parser%20.%20enchant-suggestion-menu))))%0A%0A;;%20:config%0A;;%20(defun%20enchant-suggestions-menu%20(marked-text)%0A;;%20(cons%20(cons%20"%5BAdd%20to%20dictionary%5D"%20'enchant-add-to-dictionary)%0A;;%20(wcheck-parser-ispell-suggestions)))%0A%0A;;%20(defvar%20enchant-dictionaries-dir%20"~/.config/enchant")%0A;;%20(defun%20enchant-add-to-dictionary%20(marked-text)%0A;;%20(let*%20((word%20(aref%20marked-text%200))%0A;;%20(language%20(aref%20marked-text%204))%0A;;%20(file%20(let%20((code%20(nth%201%20(member%20"-d"%20(wcheck-query-language-data%0A;;%20language%20'action-args)))))%0A;;%20(when%20(stringp%20code)%0A;;%20(concat%20(file-name-as-directory%20enchant-dictionaries-dir)%0A;;%20code%20".dic")))))%0A;;%20(when%20(and%20file%20(file-writable-p%20file))%0A;;%20(with-temp-buffer%0A;;%20(insert%20word)%20(newline)%0A;;%20(append-to-file%20(point-min)%20(point-max)%20file)%0A;;%20(message%20"Added%20word%20\"%25s\"%20to%20the%20%25s%20dictionary"%0A;;%20word%20language)))))%0A;;%20)%20%0A%0A;;%20use%20hunspell%20if%20we%20have%20it%0A(when%20(executable-find%20"hunspell")%0A%20(setq-default%20ispell-program-name%20"hunspell")%0A%20(setq%20ispell-really-hunspell%20t))%0A%0A;;%20flyspell%0A(add-hook%20'text-mode-hook%20(lambda%20()%0A%20(flyspell-mode%201)))%0A(add-hook%20'prog-mode-hook%20(lambda%20()%0A%20(flyspell-prog-mode)))%0A%0A%0A#+END_SRC%0A%0A**%20Markdown%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20markdown-mode%0A%20:ensure%20t%0A%20:commands%20(markdown-mode%20gfm-mode)%0A%20:mode%20%0A(("README\\.md\\'"%20.%20gfm-mode)%0A%20("\\.md\\'"%20.%20markdown-mode)%0A%20("\\.markdown\\'"%20.%20markdown-mode))%0A%20:init%20%0A(setq%20markdown-command%20"pandoc%20-f%20markdown%20-t%20html5")%0A)%0A#+END_SRC%0A%0A**%20Pandoc%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pandoc-mode%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'markdown-mode-hook%20'pandoc-mode)%0A%20:config%0A%20(add-hook%20'pandoc-mode-hook%20'pandoc-load-default-settings)%0A%20)%0A#+END_SRC%0A%0A*%20Applications%0A**%20Shells%0A***%20Eshell%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20eshell%0A%20:commands%20eshell%20eshell-command%0A%20:init%0A%20(setq%20eshell-buffer-shorthand%20t%0A%20eshell-cmpl-ignore-case%20t%0A%20eshell-cmpl-cycle-completions%20nil%0A%20eshell-history-size%2010000%0A%20eshell-save-history-on-exit%20t%0A%20eshell-hist-ignoredups%20t%0A%20eshell-glob-case-insensitive%20t%0A%20eshell-scroll-to-bottom-on-input%20'this)%0A%20:config%0A%20(progn%0A%20(require%20'em-smart)%0A%20(setq%20eshell-where-to-jump%20'begin%0A%20eshell-review-quick-commands%20nil%0A%20eshell-smart-space-goes-to-end%20t)%0A%20(require%20'em-cmpl)%0A%20(require%20'em-prompt)%0A%20(require%20'em-term)%0A%20(require%20'esh-opt)%0A%20%0A%20(setenv%20"PAGER"%20"cat")%0A%20(defalias%20'e%20'find-file)%0A%20(defalias%20'ff%20'find-file)%0A%20(defalias%20'vim%20'find-file)%0A%20(defalias%20'emacs%20'find-file-other-window)%0A%20(defalias%20'gd%20'magit-diff-unstaged)%0A%20(defalias%20'gds%20'magit-diff-staged)%0A%20(defun%20eshell/d%20(&rest%20args)%0A%20(dired%20(pop%20args)%20"."))%0A%20%0A%20(defun%20eshell/x%20()%0A%20"Closes%20the%20EShell%20session%20and%20gets%20rid%20of%20the%20EShell%20window."%0A%20(kill-buffer)%0A%20(delete-window))%0A%20%0A%20(defun%20eshell/gst%20(&rest%20args)%0A%20(magit-status%20(pop%20args)%20nil)%0A%20(eshell/echo))%20;;%20The%20echo%20command%20suppresses%20output%0A%0A%20(defun%20eshell/magit%20()%0A%20"Function%20to%20open%20magit-status%20for%20the%20current%20directory"%0A%20(interactive)%0A%20(magit-status%20default-directory))%0A%20%0A%20(add-to-list%20'eshell-visual-commands%20"tmux")%0A%20(add-to-list%20'eshell-visual-commands%20"ssh")%0A%20(add-to-list%20'eshell-visual-commands%20"vim")%0A%20(add-to-list%20'eshell-visual-commands%20"links")%0A%20(add-to-list%20'eshell-visual-commands%20"elinks")%0A%20(add-to-list%20'eshell-visual-commands%20"alsamixer")%0A%20(add-to-list%20'eshell-visual-commands%20"nmtui")%0A%20(add-to-list%20'eshell-visual-commands%20"tail")%0A%0A%20(add-to-list%20'eshell-visual-subcommands%20'(("git"%20"log"%20"diff"%20"show")))%0A%0A%20(defun%20eshell-here%20()%0A%20"https:/github.com/howardabrams/dot-files/blob/master/emacs-eshell.org%0A%20Opens%20up%20a%20new%20shell%20in%20the%20directory%20associated%20with%20the%0A%20current%20buffer's%20file.%20The%20eshell%20is%20renamed%20to%20match%20that%0A%20directory%20to%20make%20multiple%20eshell%20windows%20easier."%0A%20(interactive)%0A%20(let*%20((parent%20(if%20(buffer-file-name)%0A%20(file-name-directory%20(buffer-file-name))%0A%20default-directory))%0A%20(height%20(/%20(window-total-height)%203))%0A%20(name%20(car%20(last%20(split-string%20parent%20"/"%20t)))))%0A%20(split-window-vertically%20(-%20height))%0A%20(other-window%201)%0A%20(eshell%20"new")%0A%20(rename-buffer%20(concat%20"*eshell:%20"%20name%20"*"))%0A%0A%20;;(insert%20(concat%20"ls"))%0A%20;;(eshell-send-input)%0A%20))%0A%0A%20(bind-key%20"C-!"%20'eshell-here)%0A%20(bind-key%20"<f2>"%20'eshell-here)%0A%20))%0A%0A#+END_SRC%0A**%20Dired%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dired%0A%20:commands%20(dired)%0A%20:config%0A%20(setq%20dired-recursive-copies%20'always%0A%20dired-recursive-deletes%20'always%0A%20dired-dwim-target%20t%0A%20;;%20-F%20marks%20links%20with%20@%0A%20dired-ls-F-marks-symlinks%20t%0A%20;;delete-by-moving-to-trash%20t%0A%20;;%20Auto%20refresh%20dired%0A%20global-auto-revert-non-file-buffers%20t%0A%20wdired-allow-to-change-permissions%20t%0A%20wdired-allow-to-redirect-links%20t%0A%20wdired-use-interactive-rename%20nil%20%0A%20wdired-confirm-overwrite%20t)%0A)%0A%0A(add-hook%20'dired-load-hook%0A%20(lambda%20()%0A%20;;%20Bind%20dired-x-find-file.%0A%20(setq%20dired-x-hands-off-my-keys%20nil)%0A%20(load%20"dired-x")%0A%20))%0A%0A;;%20(add-hook%20'dired-mode-hook%0A;;%20(lambda%20()%0A;;%20;;%20Set%20dired-x%20buffer-local%20variables%20here.%20For%20example:%0A;;%20;;(dired-omit-mode%201)%0A;;%20))%0A%0A%0A%0A#+END_SRC%0A%0A*%20Location%20and%20calendar%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A;;%20where%20I%20hang%20my%20hat%0A(setq%20calendar-latitude%2037.9%0A%20calendar-longitude%20122.9%0A%20calendar-location-name%20"Berkeley,%20CA,%20US"%0A%20calendar-time-zone%20480%0A%20calendar-standard-time-zone-name%20"PST"%0A%20calendar-standard-daylight-time-zone-name%20"PDT")%0A%0A(setq%20display-time-24hr-format%20t)%0A%0A(setq%20display-time-world-list%0A%20'(("America/Los_Angeles"%20"California")%0A%20("Europe/Helsinki"%20"Helsinki")%0A%20("UTC"%20"UTC")%0A%20("America/New_York"%20"US%20East")%0A%20("America/Chicago"%20"Chicago")%0A%20("America/Denver"%20"Denver")%0A%20("US/Hawaii"%20"Hawaii")%0A%20("Africa/Dakar"%20"Dakar")%0A%20("Europe/London"%20"London")%0A%20("Europe/Paris"%20"Paris")%0A%20("Europe/Berlin"%20"Berlin")%0A%20("Asia/Kolkata"%20"India")%0A%20("Asia/Shanghai"%20"China")%0A%20("Asia/Tokyo"%20"Tokyo")))%0A%0A(setq%20display-time-world-time-format%0A%20"%25R%20%255Z%20(UTC%25z)%20-%20%25d%20%253h%20-%20%25A")%0A%0A(setq%20holiday-bahai-holidays%20nil)%0A(setq%20holiday-christian-holidays%20nil)%0A(setq%20holiday-hebrew-holidays%20nil)%0A(setq%20holiday-islamic-holidays%20nil)%0A(setq%20holiday-other-holidays%0A%20;;%20Edited%20from%20suomalainen-kalenteri.el%0A%20'((holiday-fixed%201%201%20"Uudenvuodenp%C3%A4iv%C3%A4")%0A%20(holiday-fixed%201%2027%20"Vainojen%20uhrien%20muistop%C3%A4iv%C3%A4")%0A%20(holiday-fixed%202%205%20"J.%20L.%20Runebergin%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%202%206%20"Saamelaisten%20kansallisp%C3%A4iv%C3%A4")%0A%20(holiday-fixed%202%2028%20"Kalevalan%20p%C3%A4iv%C3%A4,%20suomalaisen%20kulttuurin%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%202%2029%20"Karkausp%C3%A4iv%C3%A4")%0A%20(holiday-fixed%203%208%20"Kansainv%C3%A4linen%20naistenp%C3%A4iv%C3%A4")%0A%20(holiday-fixed%203%2019%20"Minna%20Canthin%20p%C3%A4iv%C3%A4,%20tasa-arvon%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-sexp%20'(if%20(>=%20year%202014)%20(list%204%208%20year))%0A%20"Romanien%20kansallisp%C3%A4iv%C3%A4")%0A%20(holiday-fixed%204%209%20"Mikael%20Agricolan%20p%C3%A4iv%C3%A4,%20suomen%20kielen%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%204%2027%20"Kansallinen%20veteraanip%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%205%201%20"Vappu,%20suomalaisen%20ty%C3%B6n%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%205%209%20"Eurooppa-p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%205%2012%20"J.%20V.%20Snellmanin%20p%C3%A4iv%C3%A4,%20suomalaisuuden%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-float%205%200%202%20"%C3%84itienp%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-float%205%200%203%20"Kaatuneitten%20muistop%C3%A4iv%C3%A4%20(liputus,%20puolitangossa)")%0A%20(holiday-fixed%206%204%20"Puolustusvoimain%20lippujuhlan%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%206%205%20"Maailman%20ymp%C3%A4rist%C3%B6p%C3%A4iv%C3%A4")%0A%20(holiday-float%206%206%201%20"Juhannusp%C3%A4iv%C3%A4,%20Suomen%20lipun%20p%C3%A4iv%C3%A4%20(liputus)"%2020)%0A%20(holiday-fixed%207%206%20"Eino%20Leinon%20p%C3%A4iv%C3%A4,%20runon%20ja%20suven%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%2010%2010%20"Aleksis%20Kiven%20p%C3%A4iv%C3%A4,%20suomalaisen%20kirjallisuuden%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%2010%2024%20"YK:n%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-float%2010%206%201%20"Pyh%C3%A4inp%C3%A4iv%C3%A4"%2031)%0A%20(holiday-fixed%2011%206%20"Ruotsalaisuuden%20p%C3%A4iv%C3%A4,%20Kustaa%20Aadolfin%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-float%2011%200%202%20"Is%C3%A4np%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%2011%2020%20"Lapsen%20oikeuksien%20p%C3%A4iv%C3%A4")%0A%20(holiday-fixed%2012%206%20"Itsen%C3%A4isyysp%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-sexp%20'(if%20(>=%20year%202011)%20(list%2012%208%20year))%20"Jean%20Sibeliuksen%20p%C3%A4iv%C3%A4,%20suomalaisen%20musiikin%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20;;%20other%20days%0A%20(holiday-fixed%207%2014%20"Bastille%20Day")%0A%20(holiday-float%2010%201%202%20"Indigenous%20Peoples'%20Day")%0A%20;;%20muslim%20holidays%0A%20(holiday-islamic%209%201%20"Ramadan%20begins")%0A%20(holiday-islamic%2010%201%20"Eid%20al-Fitr")%0A%20(holiday-islamic%2012%2010%20"Eid%20al-Adha")%0A%20;;%20jewish%20holidays%0A%20(holiday-hebrew%207%201%20"Rosh%20Hashanah")%0A%20(holiday-hebrew%207%2010%20"Yom%20Kippur")%0A%20(holiday-hebrew%203%2025%20"Hanukkah")%0A%20;;%20UN%20international%20days%0A%20(holiday-fixed%203%2020%20"International%20Day%20of%20Happiness")%0A%20(holiday-fixed%204%2012%20"International%20Day%20of%20Human%20Space%20Flight")%0A%20(holiday-fixed%204%2030%20"International%20Jazz%20Day")%0A%20(holiday-fixed%206%201%20"Global%20Day%20of%20Parents")%0A%20(holiday-fixed%206%2021%20"International%20Day%20of%20Yoga")%0A%20(holiday-fixed%207%2018%20"Nelson%20Mandela%20International%20Day")%0A%20(holiday-fixed%2011%2019%20"World%20Toilet%20Day")%0A%20(holiday-float%2011%204%203%20"World%20Philosophy%20Day")%0A%20(holiday-fixed%2011%2020%20"Universal%20Children's%20Day")%0A%20))%0A%0A%20%0A%20%0A;;%20(setq%20holiday-local-holidays%0A;;%20'((holiday-fixed%2012%2021%20"BUSD%20Winter%20recess%20start")%0A;;%20(holiday-fixed%206%2017%20"BUSD%20last%20day%20of%20school")))%0A%0A(add-hook%20'calendar-load-hook%20%0A%20(lambda%20()%20(calendar-set-date-style%20'european)))%0A%0A%0A#+END_SRC%20%0A*%20Global%20key%20bindings%0A%0A][Global\ key\ bindings:1]]
(bind-key "RET" 'newline-and-indent)     ;; check back in 2030 if still needed

(bind-key "<f12>" 'other-frame)

;; using ivy for C-s
;;(global-set-key (kbd "C-s") 'swiper)
;;(bind-key "C-S" 'isearch-forward-regexp) ;; use regex variants of search
(bind-key "C-r" 'isearch-backward-regexp)
(bind-key "M-%" 'query-replace-regexp)

;; M-^ is join-line aka delete-indentation
(defun join-next-line ()
  "Join current line with one below."
  (interactive)
  (delete-indentation 1)
  )
(bind-key "C-^" 'join-next-line)

(bind-key "C-+" 'text-scale-increase)
(bind-key "C--" 'text-scale-decrease)

(bind-key "C-c z" 'bury-buffer)
(bind-key "C-x C-b" 'ibuffer)            ;; replace buffer-menu with ibuffer

;;(autoload 'zap-up-to-char "misc"
;;  "Kill up to, but not including ARGth occurrence of CHAR." t)
(bind-key "M-z" 'zap-up-to-char)

(bind-key "C-x m" 'eshell)
(bind-key "C-x M-m" 'shell)

(bind-key "M-/" 'hippie-expand)   ;; use hippie-expand instead of dabbrev
;; Global\ key\ bindings:1 ends here

;; Turn off debug


;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dockerfile-mode%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20docker%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Puppet%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20puppet-mode%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Vagrant%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20vagrant%0A%20:ensure%20t)%0A;;%20(use-package%20vagrant-tramp%0A;;%20:ensure%20t)%0A#+END_SRC%0A%0A*%20Programming%0A**%20General%20programming%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20compilation:%20don't%20ask%20about%20saving,%20don't%20save,%20and%20add%20helper%20to%20shell%20mode.%0A(setq%20compilation-ask-about-save%20nil)%0A(setq%20compilation-save-buffers-predicate%20'(lambda%20()%20nil))%0A(add-hook%20'shell-mode-hook%20'compilation-shell-minor-mode)%0A%0A;;%20make%20a%20file%20executable%20if%20it%20starts%20with%20#!%0A(add-hook%0A%20'after-save-hook%0A%20'executable-make-buffer-file-executable-if-script-p)%0A%0A%0A(use-package%20company%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-company-mode)%0A%20(use-package%20company-quickhelp%0A%20:ensure%20t%0A%20:config%0A%20(setq%20company-quickhelp-idle-delay%203)%0A%20(company-quickhelp-mode%201)%0A%20)%0A%20(use-package%20company-emoji%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'markdown-mode-hook%20'company-mode)%0A%20(add-hook%20'markdown-mode-hook%20'company-emoji-init)%20%0A%20)%0A%20(use-package%20company-jedi%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:config%20(add-to-list%20'company-backends%20'company-jedi)%20%0A%20)%20%0A%20)%0A%0A%0A(use-package%20flycheck%0A%20:ensure%20t%0A%20:defer%20t%0A%20:commands%20(flycheck-mode)%0A%20:diminish%20""%0A%20:init%20(global-flycheck-mode)%0A%20:bind%0A%20(("M-g%20M-n"%20.%20flycheck-next-error)%0A%20("M-g%20M-p"%20.%20flycheck-previous-error)%0A%20("M-g%20M-="%20.%20flycheck-list-errors))%0A%20:config%0A%20(setq-default%20flycheck-disabled-checkers%20'(emacs-lisp-checkdoc))%0A%20)%0A%0A(use-package%20aggressive-indent%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:commands%20(aggressive-indent-mode)%0A%20:config%20%0A%20(add-to-list%20'aggressive-indent-excluded-modes%20'elpy-mode)%20;;%20aggressive%20indent%20is%20too%20aggressive%20for%20python%0A%20(aggressive-indent-global-mode%201))%0A%0A(use-package%20rainbow-mode%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20yasnippet%0A%20:ensure%20t%0A%20:init%0A%20(yas-global-mode%201)%0A%20)%0A%0A%0A(add-hook%20'prog-mode-hook%20'flyspell-prog-mode)%0A(add-hook%20'prog-mode-hook%20'imenu-add-menubar-index)%0A(add-hook%20'prog-mode-hook%20'aggressive-indent-mode)%0A%0A#+END_SRC%0A**%20Makefile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20my-makefile-hook%0A%20(setq%20indent-tabs-mode%20t)%0A%20)%0A(add-hook%20'makefile-mode-hook%20'my-makefile-hook)%0A#+END_SRC%0A%0A**%20Projectile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20projectile%0A%20:ensure%20t%0A%20:config%20(projectile-global-mode%201)%0A%20:diminish%20projectile-mode%0A%20:init%0A%20(progn%0A%20(setq%20projectile-file-exists-remote-cache-expire%20(*%2030%2060))%0A%20(setq%20projectile-switch-project-action%20'projectile-find-file-dwim)))%0A%0A#+END_SRC%0A%0A**%20Python%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20elpy%0A%20:ensure%20t%0A%20:commands%20(elpy-enable)%0A%20:diminish%20"%F0%9F%90%8D"%0A%20:init%20%0A%20(setq%20elpy-rpc-backend%20"jedi"%0A%20elpy-rpc-project-specific%20't%0A%20)%0A%20(elpy-enable)%0A%20:config%0A%20(elpy-use-ipython%20"ipython3")%20%0A%20(when%20(fboundp%20'flycheck-mode)%0A%20(setq%20elpy-modules%20(delete%20'elpy-module-flymake%20elpy-modules)))%0A%20;;%20fix%20PEP8%20compliance%20on%20save%0A%20(use-package%20py-autopep8%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'elpy-mode-hook%20'py-autopep8-enable-on-save))%0A%20;;%20emacs%20ipython%20notebook%0A%20(use-package%20ein%0A%20:ensure%20t)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Emacs%20lisp%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20paredit%0A%20:ensure%20t%0A%20:commands%20(paredit-mode)%0A%20:config%0A%20(progn%0A%20(defvar%20electrify-return-match%20"%5B\%5D}\)\"%5D"%0A%20"If%20this%20regexp%20matches%20the%20text%20after%20the%20cursor,%20do%20an%20\"electric\"%0A%20return.")%0A%0A%20(defun%20electrify-return-if-match%20(arg)%0A%20"If%20the%20text%20after%20the%20cursor%20matches%0A%20`electrify-return-match'%20then%20open%20and%20indent%20an%20empty%20line%0A%20between%20the%20cursor%20and%20the%20text.%20Move%20the%20cursor%20to%20the%20new%20line."%0A%20(interactive%20"P")%0A%20(let%20((case-fold-search%20nil))%0A%20(if%20(looking-at%20electrify-return-match)%0A%20(save-excursion%20(newline-and-indent)))%0A%20(newline%20arg)%0A%20(indent-according-to-mode)))%0A%20))%0A%0A(defun%20my/lisp-mode%20()%0A%20(paredit-mode%20t)%20%0A%20(turn-on-eldoc-mode)%0A%20(eldoc-add-command%0A%20'paredit-backward-delete%0A%20'paredit-close-round)%0A%20(local-set-key%20(kbd%20"RET")%20'electrify-return-if-match)%0A%20(eldoc-add-command%20'electrify-return-if-match)%0A%20(show-paren-mode%20t))%0A%0A(add-hook%20'emacs-lisp-mode-hook%20'my/lisp-mode)%0A(add-hook%20'eval-expression-minibuffer-setup-hook%20'my/lisp-mode)%0A%0A;;(use-package%20rainbow-delimiters)%0A%0A#+END_SRC%0A%0A**%20Shell%20script%0A**%20Ruby%0A%0ARuby-mode%20is%20included%20with%20Emacs%20(23+).%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ruby-mode%0A%20:diminish%20"%F0%9F%92%8E"%0A%20)%0A%0A;;%20Rubyish%20file%20extensions:%0A(add-to-list%20'auto-mode-alist%0A%20'("\\.\\(?:cap\\|gemspec\\|irbrc\\|gemrc\\|rake\\|rb\\|ru\\|thor\\)\\'"%20%0A%20.%20ruby-mode))%0A(add-to-list%20'auto-mode-alist%0A%20'("\\(?:Brewfile\\|Capfile\\|Gemfile\\(?:\\.%5Ba-zA-Z0-9._-%5D+\\)?\\|%5BrR%5Dakefile\\)\\'"%20%0A%20.%20ruby-mode))%0A%0A;;%20inf-ruby%20gives%20us%20a%20Ruby%20REPL%0A;;%20not%20in%20Melpa-stable.%20TODO%20put%20it%20in%20vendor/%0A(use-package%20inf-ruby%0A%20:config%20%0A%20(add-hook%20'ruby-mode-hook%20'inf-ruby-minor-mode)%0A%20)%0A#+END_SRC%0A%0A**%20Go%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20install%20godef%20w/%20go%20get%20github.com/rogpeppe/godef%0A(use-package%20go-mode%0A%20:ensure%20t%0A%20)%0A%0A;;%20requires%20gocode:%20go%20get%20-u%20github.com/nsf/gocode%0A(use-package%20go-eldoc%0A%20:ensure%20t%0A%20)%0A(use-package%20company-go%0A%20:ensure%20t%0A%20)%0A%0A%0A(add-hook%20'go-mode-hook%20%0A%20(lambda%20()%0A%20(add-hook%20'before-save-hook%20#'gofmt-before-save)%0A%20(local-set-key%20(kbd%20"M-.")%20#'godef-jump)%0A%20(flycheck-mode%201)))%0A(add-hook%20'go-mode-hook%20'go-eldoc-setup)%0A%0A#+END_SRC%0A%0A**%20Web%20mode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20web-mode%0A%20:ensure%20t%0A%20:init%0A%20(setq%20web-mode-enable-auto-pairing%20t)%0A%20(setq%20web-mode-enable-css-colorization%20t)%0A%20(setq%20web-mode-enable-current-element-highlight%20t)%0A%20(setq%20web-mode-enable-current-column-highlight%20t)%0A%20(setq%20web-mode-ac-sources-alist%0A%20'(("css"%20.%20(ac-source-css-property))%0A%20("html"%20.%20(ac-source-words-in-buffer%20ac-source-abbrev)))%0A%20)%0A%20:config%0A%20(add-to-list%20'auto-mode-alist%20'("\\.erb\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.djhtml\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.dtl\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.html?\\'"%20.%20web-mode))%0A%20)%0A#+END_SRC%0A%0A*%20Writing%0A%20General%20writing%20settings.%0A%0A**%20AUCTeX%0A%0A%20-dnf%20install%20-y%20emacs-auctex-%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(when%20(require%20'tex-site%20nil%20'noerror)%0A%20;;%20currently%20using%20Auctex%20from%20Fedora.%0A%20;;%20these%20are%20recommended%20in%20info%0A%20(setq%20TeX-auto-save%20t)%0A%20(setq%20TeX-parse-self%20t)%0A%20;;(setq-default%20TeX-master%20nil)%0A%20;;%20we%20don't%20care%20for%20Computer%20Modern,%20let's%20use%20All.%20The.%20Fonts.%0A%20(setq%20latex-run-command%20"latexmk%20-xelatex")%0A%20;;%20mkiv%20is%20the%20recommended%20ConTeXt%20version%0A%20(setq%20ConTeXt-Mark-version%20"IV")%0A%20)%0A#+END_SRC%0A%0A**%20Proselint%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Requires%20'pip%20install%20proselint'%0A;;%0A;;%20From%20https:/github.com/amperser/proselint/tree/master/plugins/flycheck%0A;;%20(flycheck-define-checker%20proselint%0A;;%20"A%20linter%20for%20prose."%0A;;%20:command%20("proselint"%20source-inplace)%0A;;%20:error-patterns%0A;;%20((warning%20line-start%20(file-name)%20":"%20line%20":"%20column%20":%20"%0A;;%20(id%20(one-or-more%20(not%20(any%20"%20"))))%0A;;%20(message%20(one-or-more%20not-newline)%0A;;%20(zero-or-more%20"\n"%20(any%20"%20")%20(one-or-more%20not-newline)))%0A;;%20line-end))%0A;;%20:modes%20(text-mode%20org-mode%20markdown-mode%20gfm-mode))%0A%0A;;%20(add-to-list%20'flycheck-checkers%20'proselint)%0A%0A;;%20(add-hook%20'text-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'org-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'markdown-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'gfm-mode-hook%20#'flycheck-mode)%0A#+END_SRC%0A**%20Spelling%0A%20Use%20wcheck-mode%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20(use-package%20wcheck-mode%0A;;%20:pin%20gnu%0A;;%20:ensure%20t%0A;;%20:commands%20(wcheck-mode%20wcheck-mode-languages%20wcheck-actions%0A;;%20wcheck-jump-forward%20wcheck-jump-backward)%0A;;%20:init%0A;;%20(setq%20wcheck-language-data%0A;;%20'(("American%20English"%0A;;%20(program%20.%20"aspell")%0A;;%20(args%20"-l"%20"-d"%20"en_US")%0A;;%20(action-program%20.%20"aspell")%0A;;%20(action-args%20"-a"%20"-d"%20"en_US")%0A;;%20(action-parser%20.%20wcheck-parser-ispell-suggestions))%0A;;%20("Finnish"%0A;;%20(program%20.%20"enchant")%0A;;%20(args%20"-l"%20"-d"%20"fi")%0A;;%20(syntax%20.%20my-finnish-syntax-table)%0A;;%20(action-program%20.%20"enchant")%0A;;%20(action-args%20"-a"%20"-d"%20"fi")%0A;;%20(action-parser%20.%20enchant-suggestion-menu))))%0A%0A;;%20:config%0A;;%20(defun%20enchant-suggestions-menu%20(marked-text)%0A;;%20(cons%20(cons%20"%5BAdd%20to%20dictionary%5D"%20'enchant-add-to-dictionary)%0A;;%20(wcheck-parser-ispell-suggestions)))%0A%0A;;%20(defvar%20enchant-dictionaries-dir%20"~/.config/enchant")%0A;;%20(defun%20enchant-add-to-dictionary%20(marked-text)%0A;;%20(let*%20((word%20(aref%20marked-text%200))%0A;;%20(language%20(aref%20marked-text%204))%0A;;%20(file%20(let%20((code%20(nth%201%20(member%20"-d"%20(wcheck-query-language-data%0A;;%20language%20'action-args)))))%0A;;%20(when%20(stringp%20code)%0A;;%20(concat%20(file-name-as-directory%20enchant-dictionaries-dir)%0A;;%20code%20".dic")))))%0A;;%20(when%20(and%20file%20(file-writable-p%20file))%0A;;%20(with-temp-buffer%0A;;%20(insert%20word)%20(newline)%0A;;%20(append-to-file%20(point-min)%20(point-max)%20file)%0A;;%20(message%20"Added%20word%20\"%25s\"%20to%20the%20%25s%20dictionary"%0A;;%20word%20language)))))%0A;;%20)%20%0A%0A;;%20use%20hunspell%20if%20we%20have%20it%0A(when%20(executable-find%20"hunspell")%0A%20(setq-default%20ispell-program-name%20"hunspell")%0A%20(setq%20ispell-really-hunspell%20t))%0A%0A;;%20flyspell%0A(add-hook%20'text-mode-hook%20(lambda%20()%0A%20(flyspell-mode%201)))%0A(add-hook%20'prog-mode-hook%20(lambda%20()%0A%20(flyspell-prog-mode)))%0A%0A%0A#+END_SRC%0A%0A**%20Markdown%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20markdown-mode%0A%20:ensure%20t%0A%20:commands%20(markdown-mode%20gfm-mode)%0A%20:mode%20%0A(("README\\.md\\'"%20.%20gfm-mode)%0A%20("\\.md\\'"%20.%20markdown-mode)%0A%20("\\.markdown\\'"%20.%20markdown-mode))%0A%20:init%20%0A(setq%20markdown-command%20"pandoc%20-f%20markdown%20-t%20html5")%0A)%0A#+END_SRC%0A%0A**%20Pandoc%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pandoc-mode%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'markdown-mode-hook%20'pandoc-mode)%0A%20:config%0A%20(add-hook%20'pandoc-mode-hook%20'pandoc-load-default-settings)%0A%20)%0A#+END_SRC%0A%0A*%20Applications%0A**%20Shells%0A***%20Eshell%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20eshell%0A%20:commands%20eshell%20eshell-command%0A%20:init%0A%20(setq%20eshell-buffer-shorthand%20t%0A%20eshell-cmpl-ignore-case%20t%0A%20eshell-cmpl-cycle-completions%20nil%0A%20eshell-history-size%2010000%0A%20eshell-save-history-on-exit%20t%0A%20eshell-hist-ignoredups%20t%0A%20eshell-glob-case-insensitive%20t%0A%20eshell-scroll-to-bottom-on-input%20'this)%0A%20:config%0A%20(progn%0A%20(require%20'em-smart)%0A%20(setq%20eshell-where-to-jump%20'begin%0A%20eshell-review-quick-commands%20nil%0A%20eshell-smart-space-goes-to-end%20t)%0A%20(require%20'em-cmpl)%0A%20(require%20'em-prompt)%0A%20(require%20'em-term)%0A%20(require%20'esh-opt)%0A%20%0A%20(setenv%20"PAGER"%20"cat")%0A%20(defalias%20'e%20'find-file)%0A%20(defalias%20'ff%20'find-file)%0A%20(defalias%20'vim%20'find-file)%0A%20(defalias%20'emacs%20'find-file-other-window)%0A%20(defalias%20'gd%20'magit-diff-unstaged)%0A%20(defalias%20'gds%20'magit-diff-staged)%0A%20(defun%20eshell/d%20(&rest%20args)%0A%20(dired%20(pop%20args)%20"."))%0A%20%0A%20(defun%20eshell/x%20()%0A%20"Closes%20the%20EShell%20session%20and%20gets%20rid%20of%20the%20EShell%20window."%0A%20(kill-buffer)%0A%20(delete-window))%0A%20%0A%20(defun%20eshell/gst%20(&rest%20args)%0A%20(magit-status%20(pop%20args)%20nil)%0A%20(eshell/echo))%20;;%20The%20echo%20command%20suppresses%20output%0A%0A%20(defun%20eshell/magit%20()%0A%20"Function%20to%20open%20magit-status%20for%20the%20current%20directory"%0A%20(interactive)%0A%20(magit-status%20default-directory))%0A%20%0A%20(add-to-list%20'eshell-visual-commands%20"tmux")%0A%20(add-to-list%20'eshell-visual-commands%20"ssh")%0A%20(add-to-list%20'eshell-visual-commands%20"vim")%0A%20(add-to-list%20'eshell-visual-commands%20"links")%0A%20(add-to-list%20'eshell-visual-commands%20"elinks")%0A%20(add-to-list%20'eshell-visual-commands%20"alsamixer")%0A%20(add-to-list%20'eshell-visual-commands%20"nmtui")%0A%20(add-to-list%20'eshell-visual-commands%20"tail")%0A%0A%20(add-to-list%20'eshell-visual-subcommands%20'(("git"%20"log"%20"diff"%20"show")))%0A%0A%20(defun%20eshell-here%20()%0A%20"https:/github.com/howardabrams/dot-files/blob/master/emacs-eshell.org%0A%20Opens%20up%20a%20new%20shell%20in%20the%20directory%20associated%20with%20the%0A%20current%20buffer's%20file.%20The%20eshell%20is%20renamed%20to%20match%20that%0A%20directory%20to%20make%20multiple%20eshell%20windows%20easier."%0A%20(interactive)%0A%20(let*%20((parent%20(if%20(buffer-file-name)%0A%20(file-name-directory%20(buffer-file-name))%0A%20default-directory))%0A%20(height%20(/%20(window-total-height)%203))%0A%20(name%20(car%20(last%20(split-string%20parent%20"/"%20t)))))%0A%20(split-window-vertically%20(-%20height))%0A%20(other-window%201)%0A%20(eshell%20"new")%0A%20(rename-buffer%20(concat%20"*eshell:%20"%20name%20"*"))%0A%0A%20;;(insert%20(concat%20"ls"))%0A%20;;(eshell-send-input)%0A%20))%0A%0A%20(bind-key%20"C-!"%20'eshell-here)%0A%20(bind-key%20"<f2>"%20'eshell-here)%0A%20))%0A%0A#+END_SRC%0A**%20Dired%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dired%0A%20:commands%20(dired)%0A%20:config%0A%20(setq%20dired-recursive-copies%20'always%0A%20dired-recursive-deletes%20'always%0A%20dired-dwim-target%20t%0A%20;;%20-F%20marks%20links%20with%20@%0A%20dired-ls-F-marks-symlinks%20t%0A%20;;delete-by-moving-to-trash%20t%0A%20;;%20Auto%20refresh%20dired%0A%20global-auto-revert-non-file-buffers%20t%0A%20wdired-allow-to-change-permissions%20t%0A%20wdired-allow-to-redirect-links%20t%0A%20wdired-use-interactive-rename%20nil%20%0A%20wdired-confirm-overwrite%20t)%0A)%0A%0A(add-hook%20'dired-load-hook%0A%20(lambda%20()%0A%20;;%20Bind%20dired-x-find-file.%0A%20(setq%20dired-x-hands-off-my-keys%20nil)%0A%20(load%20"dired-x")%0A%20))%0A%0A;;%20(add-hook%20'dired-mode-hook%0A;;%20(lambda%20()%0A;;%20;;%20Set%20dired-x%20buffer-local%20variables%20here.%20For%20example:%0A;;%20;;(dired-omit-mode%201)%0A;;%20))%0A%0A%0A%0A#+END_SRC%0A%0A*%20Location%20and%20calendar%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A;;%20where%20I%20hang%20my%20hat%0A(setq%20calendar-latitude%2037.9%0A%20calendar-longitude%20122.9%0A%20calendar-location-name%20"Berkeley,%20CA,%20US"%0A%20calendar-time-zone%20480%0A%20calendar-standard-time-zone-name%20"PST"%0A%20calendar-standard-daylight-time-zone-name%20"PDT")%0A%0A(setq%20display-time-24hr-format%20t)%0A%0A(setq%20display-time-world-list%0A%20'(("America/Los_Angeles"%20"California")%0A%20("Europe/Helsinki"%20"Helsinki")%0A%20("UTC"%20"UTC")%0A%20("America/New_York"%20"US%20East")%0A%20("America/Chicago"%20"Chicago")%0A%20("America/Denver"%20"Denver")%0A%20("US/Hawaii"%20"Hawaii")%0A%20("Africa/Dakar"%20"Dakar")%0A%20("Europe/London"%20"London")%0A%20("Europe/Paris"%20"Paris")%0A%20("Europe/Berlin"%20"Berlin")%0A%20("Asia/Kolkata"%20"India")%0A%20("Asia/Shanghai"%20"China")%0A%20("Asia/Tokyo"%20"Tokyo")))%0A%0A(setq%20display-time-world-time-format%0A%20"%25R%20%255Z%20(UTC%25z)%20-%20%25d%20%253h%20-%20%25A")%0A%0A(setq%20holiday-bahai-holidays%20nil)%0A(setq%20holiday-christian-holidays%20nil)%0A(setq%20holiday-hebrew-holidays%20nil)%0A(setq%20holiday-islamic-holidays%20nil)%0A(setq%20holiday-other-holidays%0A%20;;%20Edited%20from%20suomalainen-kalenteri.el%0A%20'((holiday-fixed%201%201%20"Uudenvuodenp%C3%A4iv%C3%A4")%0A%20(holiday-fixed%201%2027%20"Vainojen%20uhrien%20muistop%C3%A4iv%C3%A4")%0A%20(holiday-fixed%202%205%20"J.%20L.%20Runebergin%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%202%206%20"Saamelaisten%20kansallisp%C3%A4iv%C3%A4")%0A%20(holiday-fixed%202%2028%20"Kalevalan%20p%C3%A4iv%C3%A4,%20suomalaisen%20kulttuurin%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%202%2029%20"Karkausp%C3%A4iv%C3%A4")%0A%20(holiday-fixed%203%208%20"Kansainv%C3%A4linen%20naistenp%C3%A4iv%C3%A4")%0A%20(holiday-fixed%203%2019%20"Minna%20Canthin%20p%C3%A4iv%C3%A4,%20tasa-arvon%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-sexp%20'(if%20(>=%20year%202014)%20(list%204%208%20year))%0A%20"Romanien%20kansallisp%C3%A4iv%C3%A4")%0A%20(holiday-fixed%204%209%20"Mikael%20Agricolan%20p%C3%A4iv%C3%A4,%20suomen%20kielen%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%204%2027%20"Kansallinen%20veteraanip%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%205%201%20"Vappu,%20suomalaisen%20ty%C3%B6n%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%205%209%20"Eurooppa-p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%205%2012%20"J.%20V.%20Snellmanin%20p%C3%A4iv%C3%A4,%20suomalaisuuden%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-float%205%200%202%20"%C3%84itienp%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-float%205%200%203%20"Kaatuneitten%20muistop%C3%A4iv%C3%A4%20(liputus,%20puolitangossa)")%0A%20(holiday-fixed%206%204%20"Puolustusvoimain%20lippujuhlan%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%206%205%20"Maailman%20ymp%C3%A4rist%C3%B6p%C3%A4iv%C3%A4")%0A%20(holiday-float%206%206%201%20"Juhannusp%C3%A4iv%C3%A4,%20Suomen%20lipun%20p%C3%A4iv%C3%A4%20(liputus)"%2020)%0A%20(holiday-fixed%207%206%20"Eino%20Leinon%20p%C3%A4iv%C3%A4,%20runon%20ja%20suven%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%2010%2010%20"Aleksis%20Kiven%20p%C3%A4iv%C3%A4,%20suomalaisen%20kirjallisuuden%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%2010%2024%20"YK:n%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-float%2010%206%201%20"Pyh%C3%A4inp%C3%A4iv%C3%A4"%2031)%0A%20(holiday-fixed%2011%206%20"Ruotsalaisuuden%20p%C3%A4iv%C3%A4,%20Kustaa%20Aadolfin%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-float%2011%200%202%20"Is%C3%A4np%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%2011%2020%20"Lapsen%20oikeuksien%20p%C3%A4iv%C3%A4")%0A%20(holiday-fixed%2012%206%20"Itsen%C3%A4isyysp%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-sexp%20'(if%20(>=%20year%202011)%20(list%2012%208%20year))%20"Jean%20Sibeliuksen%20p%C3%A4iv%C3%A4,%20suomalaisen%20musiikin%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20;;%20other%20days%0A%20(holiday-fixed%207%2014%20"Bastille%20Day")%0A%20(holiday-float%2010%201%202%20"Indigenous%20Peoples'%20Day")%0A%20;;%20muslim%20holidays%0A%20(holiday-islamic%209%201%20"Ramadan%20begins")%0A%20(holiday-islamic%2010%201%20"Eid%20al-Fitr")%0A%20(holiday-islamic%2012%2010%20"Eid%20al-Adha")%0A%20;;%20jewish%20holidays%0A%20(holiday-hebrew%207%201%20"Rosh%20Hashanah")%0A%20(holiday-hebrew%207%2010%20"Yom%20Kippur")%0A%20(holiday-hebrew%203%2025%20"Hanukkah")%0A%20;;%20UN%20international%20days%0A%20(holiday-fixed%203%2020%20"International%20Day%20of%20Happiness")%0A%20(holiday-fixed%204%2012%20"International%20Day%20of%20Human%20Space%20Flight")%0A%20(holiday-fixed%204%2030%20"International%20Jazz%20Day")%0A%20(holiday-fixed%206%201%20"Global%20Day%20of%20Parents")%0A%20(holiday-fixed%206%2021%20"International%20Day%20of%20Yoga")%0A%20(holiday-fixed%207%2018%20"Nelson%20Mandela%20International%20Day")%0A%20(holiday-fixed%2011%2019%20"World%20Toilet%20Day")%0A%20(holiday-float%2011%204%203%20"World%20Philosophy%20Day")%0A%20(holiday-fixed%2011%2020%20"Universal%20Children's%20Day")%0A%20))%0A%0A%20%0A%20%0A;;%20(setq%20holiday-local-holidays%0A;;%20'((holiday-fixed%2012%2021%20"BUSD%20Winter%20recess%20start")%0A;;%20(holiday-fixed%206%2017%20"BUSD%20last%20day%20of%20school")))%0A%0A(add-hook%20'calendar-load-hook%20%0A%20(lambda%20()%20(calendar-set-date-style%20'european)))%0A%0A%0A#+END_SRC%20%0A*%20Global%20key%20bindings%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(bind-key%20"RET"%20'newline-and-indent)%20;;%20check%20back%20in%202030%20if%20still%20needed%0A%0A(bind-key%20"<f12>"%20'other-frame)%0A%0A;;%20using%20ivy%20for%20C-s%0A;;(global-set-key%20(kbd%20"C-s")%20'swiper)%0A;;(bind-key%20"C-S"%20'isearch-forward-regexp)%20;;%20use%20regex%20variants%20of%20search%0A(bind-key%20"C-r"%20'isearch-backward-regexp)%0A(bind-key%20"M-%25"%20'query-replace-regexp)%0A%0A;;%20M-^%20is%20join-line%20aka%20delete-indentation%0A(defun%20join-next-line%20()%0A%20"Join%20current%20line%20with%20one%20below."%0A%20(interactive)%0A%20(delete-indentation%201)%0A%20)%0A(bind-key%20"C-^"%20'join-next-line)%0A%0A(bind-key%20"C-+"%20'text-scale-increase)%0A(bind-key%20"C--"%20'text-scale-decrease)%0A%0A(bind-key%20"C-c%20z"%20'bury-buffer)%0A(bind-key%20"C-x%20C-b"%20'ibuffer)%20;;%20replace%20buffer-menu%20with%20ibuffer%0A%0A;;(autoload%20'zap-up-to-char%20"misc"%0A;;%20"Kill%20up%20to,%20but%20not%20including%20ARGth%20occurrence%20of%20CHAR."%20t)%0A(bind-key%20"M-z"%20'zap-up-to-char)%0A%0A(bind-key%20"C-x%20m"%20'eshell)%0A(bind-key%20"C-x%20M-m"%20'shell)%0A%0A(bind-key%20"M-/"%20'hippie-expand)%20;;%20use%20hippie-expand%20instead%20of%20dabbrev%0A%0A#+END_SRC%0A%0A*%20End%0A**%20Turn%20off%20debug%0A%0A][Turn\ off\ debug:1]]
(message "init.org: Looks like we got to the end of init OK.")
(setq debug-on-error nil)
(setq debug-on-quit nil)
;; Turn\ off\ debug:1 ends here

;; Load customization system generated variables 
;;    Set Emacs customizations to file custom.el.

;; [[file:emacs.org::%0A%0A***%20Statistics%0A%0A%20Install%20ESS%20from%20Fedora%20repo,%20since%20it's%20a%20slow%20moving%20target%20and%20likely%20to%0A%20be%20new%20enough.%0A%0A%20-dnf%20install%20-y%20R%20emacs-ess-%0A%0A***%20PDF%20Tools%0A%0A%20-dnf%20install%20-y%20poppler-glib-devel-%0A%0A**%20Benchmark%20init%0A%0A%20This%20is%20for%20figuring%20out%20why%20startup%20is%20slow,%20normally%20disabled.%0A%0A%20Installation:%20Run%20make%20inside%20the%20directory%20where%20you%20installed%0A%20benchmark-init,%20this%20will%20produce%20the%20benchmark-init-loaddefs.el%20file.%20Then%0A%20place%20the%20following%20code%20as%20early%20as%20possible%20in%20your%20Emacs%20initialization%0A%20script.%20%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20(add-to-list%20'load-path%20"~/.emacs.d/vendor/benchmark-init-el/")%0A;;%20(require%20'benchmark-init-loaddefs)%0A;;%20(benchmark-init/activate)%0A#+END_SRC%0A%0A*%20Emacs%20general%20options%0A**%20Name%20and%20email%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defvar%20at-sign%20"@")%0A(defvar%20my-domain%20"juvonen.org")%0A;;%20default%20name%20and%20email%20address%0A(setq%20user-full-name%20"Sami%20Juvonen"%0A%20user-email%20(concat%20"sami"%20at-sign%20my-domain)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Turn%20on%20debug%0A%0ARemember%20to%20turn%20it%20off%20at%20end.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20debug-on-error%20t)%0A(setq%20debug-on-quit%20t)%0A#+END_SRC%0A%0A**%20Configure%20package%20manager%0A%0AThis%20configures%20the%20Emacs%20package%20manager.%20I%20try%20to%20keep%20it%20simple:%0A-%20Orgmode%20from%20orgmode.org%0A-%20prefer%20stable(r)%20packages,%20so%20only%20use%20Melpa-stable%20and%20GNU%20Elpa%0A%0AI%20use%20use-package%20for%20loading%20and%20configuring%20all%20packages%20if%20at%20all%20possible.%0AThis%20makes%20this%20configuration%20file%20much%20more%20modular%20and%20manageable.%20I%20hope%0Ato%20avoid%20another%20Emacs%20bankruptcy.%20Been%20there,%20done%20that,%20rm%20-f'd%20.emacs...%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(setq%20load-prefer-newer%20t)%0A%0A(require%20'package)%0A(setq%20package-enable-at-startup%20nil)%0A(setq%20package-archives%0A%20'(("gnu"%20.%20"http:/elpa.gnu.org/packages/")%0A%20("org"%20.%20"http:/orgmode.org/elpa/")%0A%20("melpa-stable"%20.%20"https:/stable.melpa.org/packages/")%0A%20;;("melpa"%20.%20"https:/melpa.org/packages/")%0A%20))%0A%0A(setq%20package-archive-priorities%20'(%0A%20("gnu"%20.%2030)%0A%20("org"%20.%2030)%0A%20("melpa-stable"%20.%2020)%0A%20("melpa"%20.%200)%0A%20))%0A%0A(package-initialize)%0A%0A;;%20These%20don't%20seem%20to%20work%20the%20way%20I%20think%20they%20would.%0A;;%20use-package%20configuration%20-%20needs%20to%20be%20set%20before%20refresh%0A;;(setq%20use-package-always-ensure%20t)%0A;;%20(setq%20use-package-always-pin%20"melpa-stable")%0A%0A;;%20Bootstrap%20`use-package'.%20Install%20it%20if%20not%20installed%20already.%0A(unless%20(package-installed-p%20'use-package)%0A%20(package-refresh-contents)%0A%20(package-install%20'use-package))%0A%0A(eval-when-compile%20(require%20'use-package))%0A(use-package%20bind-key%20;;%20part%20of%20use-package%0A%20:commands%20(bind-key)%20)%0A%0A%0A(defvar%20my/vendor-dir%20(expand-file-name%20"vendor"%20user-emacs-directory))%0A(unless%20(file-directory-p%20my/vendor-dir)%20(make-directory%20my/vendor-dir))%0A(add-to-list%20'load-path%20my/vendor-dir)%0A(dolist%20(pkg%20(directory-files%20my/vendor-dir%20t%20"\\w+"))%0A%20(when%20(file-directory-p%20pkg)%0A%20(add-to-list%20'load-path%20pkg)))%0A%0A%20#+END_SRC%0A%0A**%20Custom%20utility%20functions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20beautify-json%20()%0A%20"Run%20JSON%20through%20Python.%20From%20https:/writequit.org/org/settings.html"%0A%20(interactive)%0A%20(let%20((b%20(if%20mark-active%20(min%20(point)%20(mark))%20(point-min)))%0A%20(e%20(if%20mark-active%20(max%20(point)%20(mark))%20(point-max))))%0A%20(shell-command-on-region%20b%20e%0A%20"python%20-mjson.tool"%20(current-buffer)%20t))%0A%20)%0A%0A(defun%20modi/switch-to-scratch-and-back%20(arg)%0A%20"Toggle%20between%20*scratch-MODE*%20buffer%20and%20the%20current%20buffer.%0AIf%20a%20scratch%20buffer%20does%20not%20exist,%20create%20it%20with%20the%20major%20mode%20set%20to%20that%0Aof%20the%20buffer%20from%20where%20this%20function%20is%20called.%0A%0A%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20the%20current%20buffer's%20major%20mode%0A%20C-0%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`fundamental-mode'%0A%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`org-mode'%0AC-u%20C-u%20COMMAND%20->%20Open/switch%20to%20a%20scratch%20buffer%20in%20`emacs-elisp-mode'%0A%0Asource:%20http:/emacs.stackexchange.com/questions/80/how-can-i-quickly-toggle-between-a-file-and-a-scratch-buffer-having-the-same-m/81#81%0A"%0A%20(interactive%20"p")%0A%20(if%20(and%20(=%20arg%201)%20;%20no%20prefix%0A%20(string-match-p%20"\\*scratch"%20(buffer-name)))%0A%20(switch-to-buffer%20(other-buffer))%0A%20(let%20((mode-str%20(cl-case%20arg%0A%20(0%20"fundamental-mode")%20;%20C-0%0A%20(4%20"org-mode")%20;%20C-u%0A%20(16%20"emacs-lisp-mode")%20;%20C-u%20C-u%0A%20(t%20(format%20"%25s"%20major-mode)))))%20;%20no%20prefix%0A%20(switch-to-buffer%20(get-buffer-create%0A%20(concat%20"*scratch-"%20mode-str%20"*")))%0A%20(funcall%20(intern%20mode-str)))))%20;%20http:/stackoverflow.com/a/7539787/1219634%0A%0A(defalias%20'scratch%20'modi/switch-to-scratch-and-back)%0A%0A;;%20this%20allows%20creating%20dir%20path%20from%20find-file%20automagically.%0A;;%20http:/mbork.pl/2016-07-25_Making_directories_on_the_fly%0A(defun%20make-parent-directory%20()%0A%20"Make%20sure%20the%20directory%20of%20`buffer-file-name'%20exists."%0A%20(make-directory%20(file-name-directory%20buffer-file-name)%20t))%0A%0A(add-hook%20'find-file-not-found-functions%20#'make-parent-directory)%0A%0A;;%0A;;%20From%20http:/cpb83.github.io/post/Org-babel-tangle_building_a_hugo_blog/%0A;;%0A(defun%20hugo-post%20(title)%0A%20(interactive%20"sTitle:%20")%0A%20(org-insert-heading)%20(insert%20title)%0A%20(insert%20(concat%20"\n"%0A%20"#+begin_src%20html%20:tangle%20/tmp/blog/content/post/"%20(replace-regexp-in-string%20"%20"%20"_"%20title)%20".md\n"%0A%20"+++\n"%0A%20"categories%20=%20%5B%5D\n"%0A%20"title%20=%20\""%20title%20"\"\n"%0A%20"date%20=%20\""%20(format-time-string%20"%25Y-%25m-%25d%20%25H:%25M"%20(org-current-time))%20"\n"%0A%20"+++\n"%0A%20"\n\n\n\n"%0A%20"#+end_src")))%0A%0A(defun%20hugo-setup%20()%0A%20;;run%20me%20in%20the%20org%20file%20for%20your%20blog!%0A%20(interactive)%0A%20(shell-command%20"rm%20-rf%20/tmp/blog;%20mkdir%20-p%20/tmp/blog/content/post%20/tmp/blog/themes%20/tmp/blog/layouts/partials/%20/tmp/blog/static/")%0A%20(shell-command%20"git%20clone%20**whatever%20you%20like**%20/tmp/blog/themes/theme")%0A%20(org-babel-tangle))%0A%0A%0A%0A#+END_SRC%0A%0A**%20Emacs%20UI%20and%20global%20settings%0A***%20Startup%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20inhibit-startup-message%20't%20;;%20yes,%20I%20know%20you're%20Emacs%0A%20initial-scratch-message%20""%20;;%20we're%20friends%20already%0A%20inhibit-splash-screen%20t%20;;%20really%0A%20)%20%0A(fset%20'display-startup-echo-area-message%20#'ignore)%20;;%20c'mon!%0A%0A;;%20save%20Emacs%20layout%20on%20exit%0A(desktop-save-mode)%0A%0A%0A#+END_SRC%0A***%20Backups%20and%20cached%20persistence%20data%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20set%20up%20a%20global%20cache%20for%20emacsfluvia%0A(defvar%20my/cache-dir%20)%0A(if%20(eq%20system-type%20'gnu/linux)%0A%20(if%20(eq%20nil%20(getenv%20"XDG_CACHE_HOME"))%0A%20(setq%20my/cache-dir%20(expand-file-name%20".cache/emacs"%20(getenv%20"HOME")))%20%0A%20(setq%20my/cache-dir%20(expand-file-name%20"emacs"%20(getenv%20"XDG_CACHE_HOME"))))%0A%20(setq%20my/cache-dir%20(expand-file-name%20"cache"%20user-emacs-directory))%20%0A%20)%0A%0A(unless%20(file-directory-p%20my/cache-dir)%0A%20(make-directory%20my/cache-dir%20t))%0A(unless%20(file-directory-p%20(expand-file-name%20".gitignore"%20my/cache-dir))%0A%20(with-temp-file%20(expand-file-name%20".gitignore"%20my/cache-dir)%0A%20(insert%20"*\n!.gitignore\n")))%0A%0A(defvar%20my/backup-dir%20(expand-file-name%20"backup"%20my/cache-dir))%0A(unless%20(file-directory-p%20my/backup-dir)%0A%20(make-directory%20my/backup-dir%20t))%0A(setq%20backup-directory-alist%20`((".*"%20.%20,my/backup-dir)))%0A%20%0A(setq%20make-backup-files%20t%20%0A%20backup-by-copying%20t%20;%20don't%20clobber%20symlinks%0A%20version-control%20t%20;%20version%20numbers%20for%20backup%20files%0A%20delete-old-versions%20t%20;%20delete%20excess%20backup%20files%20silently%0A%20delete-by-moving-to-trash%20t%0A%20kept-old-versions%202%20;%20oldest%20versions%20to%20keep%0A%20kept-new-versions%205%20;%20newest%20versions%20to%20keep%0A%20)%0A%0A;;%20Save%20actions%20persistently%20across%20sessions.%0A(use-package%20savehist%0A%20:init%0A%20(setq%20savehist-file%20(expand-file-name%20"history"%20my/cache-dir)%0A%20history-length%201000%0A%20history-delete-duplicates%20t%0A%20savehist-save-minibuffer-history%20t%0A%20savehist-additional-variables%20'(kill-ring%0A%20search-ring%0A%20regexp-search-ring))%0A%20:config%0A%20(savehist-mode%201))%0A;;%20recent%20files%0A(use-package%20recentf%0A%20:init%0A%20(setq%20recentf-max-saved-items%20200%0A%20recentf-max-menu-items%2020%0A%20recentf-save-file%20(expand-file-name%20"recent"%20my/cache-dir))%0A%20:config%0A%20(recentf-mode%20t))%0A%0A;;%20save%20place%20in%20edited%20files%0A(use-package%20saveplace%0A%20:init%0A%20(setq-default%20save-place%20t)%0A%20(setq%20save-place-file%20(expand-file-name%20"places"%20my/cache-dir))%0A%20)%0A%0A;;%20Auto-save%0A;;%20Save%20in%20the%20visited%20file,%20don't%20create%20separate%20autosave%20files.%0A;;%20We%20have%20undo%20and%20git.%0A(setq%20auto-save-visited-file-name%20t%0A%20auto-save-interval%20100%20;;%20default%20is%20300%20chars%0A%20auto-save-timeout%2010%20;;%20default%20is%2030%20sec%0A%20)%0A%0A(if%20(version<%20emacs-version%20"24.4")%0A%20()%20;%20should%20maybe%20do%20something%20here%0A%20;;%20Emacs%2024.4+,%20save%20on%20frame%20focus%20lost.%20May%20be%20good%20enough.%0A%20(add-hook%20'focus-out-hook%20(lambda%20()%20(save-some-buffers%20t))))%0A%0A#+END_SRC%0A***%20Ido%0A%20I%20am%20one%20of%20those%20people%20who%20can't%20seem%20to%20grok%20Helm,%20so%20I%20use%20Ido.%0A%0A%206/2016:%20Now%20disabled,%20using%20Ivy/Swiper/Counsel%20instead.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-everywhere%20t%0A%20ido-enable-flex-matching%20t%0A%20ido-show-dot-for-dired%20t%0A%20ido-enable-dot-prefix%20t%0A%20ido-create-new-buffer%20'always%0A%20ido-max-window-height%200.4%0A%20ido-use-filename-at-point%20'guess%0A%20ido-use-url-at-point%20t%0A%20ido-max-prospects%2020%0A%20ido-max-dir-file-cache%20400%0A%20ido-enter-matching-directory%20t%0A%20ido-use-virtual-buffers%20t%0A%20ido-save-directory-list-file%20(expand-file-name%20"ido.last"%20my/cache-dir)%0A%20ido-default-file-method%20'selected-window%0A%20ido-default-buffer-method%20'selected-window)%0A%20:config%0A%20(ido-mode%20+1)%0A%20)%0A%0A;;%20smex:%20replace%20regular%20M-x%0A;;%20remember%20recently%20and%20most%20frequently%20used%20commands%0A(use-package%20smex%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20smex-history-length%2040%0A%20smex-save-file%20(expand-file-name%20"smex.items"%20my/cache-dir))%0A%20:bind%0A%20(("M-x"%20.%20smex)%0A%20("<menu>"%20.%20smex)%20;;%20linux%20menu%20key%20runs%20execute-extended-command%20by%20default%0A%20("M-X"%20.%20smex-major-mode-commands)%0A%20("C-c%20C-c%20M-x"%20.%20execute-extended-command))%0A%0A%20:config%0A%20(smex-initialize))%0A%0A%20;;;%20smarter%20fuzzy%20matching%20for%20ido%0A(use-package%20flx-ido%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:init%0A%20(setq%20ido-use-faces%20nil)%20;;%20to%20see%20flx%20highlights%0A%20:config%0A%20(flx-ido-mode%201))%0A%0A(use-package%20ido-ubiquitous%0A%20:ensure%20t%0A%20:disabled%20t%0A%20:config%0A%20(ido-ubiquitous-mode%20+1))%0A%0A%0A%0A%0A#+END_SRC%0A%0A***%20Ivy%0A%0AIvy%20is%20another%20piece%20of%20Emacs%20magic%20from%20Oleh%20Krehel%20a.k.a.%20abo-abo.%20It%20works%20in%20the%20same%20%0Aspace%20as%20Ido%20and%20Helm.%20I've%20found%20it%20more%20intuitive%20and%20just%20plain%20awesome%20since%20I%20installed%20it.%0AI'm%20using%20the%20stable%20version%20but%20reading%20his%20blog%20makes%20me%20want%20to%20install%20the%20dev%20version.%20So%0Afar%20I've%20been%20able%20to%20resist.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20swiper%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%0A%20(use-package%20counsel%0A%20:ensure%20t)%0A%20(use-package%20ivy%0A%20:ensure%20t)%0A%20(setq%20ivy-use-virtual-buffers%20t)%0A%20(setq%20ivy-height%2010)%0A%20(setq%20ivy-count-format%20"(%25d/%25d)%20")%0A%20(setq%20magit-completing-read-function%20'ivy-completing-read)%0A%20(setq%20projectile-completion-system%20'ivy)%0A%20:config%0A%20(ivy-mode%201)%0A%20;;%20(global-set-key%20(kbd%20"C-s")%20'swiper)%0A%20;;%20(global-set-key%20(kbd%20"M-x")%20'counsel-M-x)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20C-f")%20'counsel-find-file)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20f")%20'counsel-describe-function)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20v")%20'counsel-describe-variable)%0A%20;;%20(global-set-key%20(kbd%20"C-h%20l")%20'counsel-load-library)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20i")%20'counsel-info-lookup-symbol)%0A%20;;%20(global-set-key%20(kbd%20"<f2>%20u")%20'counsel-unicode-char)%0A%20;;%20;;%20Ivy-based%20interface%20to%20shell%20and%20system%20tools%0A%20;;%20(global-set-key%20(kbd%20"C-c%20g")%20'counsel-git)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20G")%20'counsel-git-grep)%0A%20;;%20(global-set-key%20(kbd%20"C-c%20k")%20'counsel-ag)%0A%20;;%20(global-set-key%20(kbd%20"C-x%20l")%20'counsel-locate)%0A%20;;%20;;(global-set-key%20(kbd%20"C-S-o")%20'counsel-rhythmbox)%0A%20;;%20;;%20ivy-resume%20resumes%20the%20last%20Ivy-based%20completion.%0A%20;;%20(global-set-key%20(kbd%20"C-c%20C-r")%20'ivy-resume)%0A%20:bind%0A%20(("C-s"%20.%20counsel-grep-or-swiper)%0A%20("M-x"%20.%20counsel-M-x)%0A%20("C-x%20C-f"%20.%20counsel-find-file)%0A%20("C-h%20f"%20.%20counsel-describe-function)%0A%20("C-h%20v"%20.%20counsel-describe-variable)%0A%20("C-h%20I"%20.%20counsel-info-lookup-symbol)%0A%20("C-h%20u"%20.%20counsel-unicode-char)%0A%20("C-c%20g"%20.%20counsel-git)%0A%20("C-c%20G"%20.%20counsel-git-grep)%0A%20("C-c%20A"%20.%20counsel-ag)%0A%20("C-c%20L"%20.%20counsel-locate)%0A%20("C-c%20C-r"%20.%20ivy-resume)%0A%20;;%20("C-c%20v"%20.%20ivy-push-view)%20;%20these%20are%20not%20yet%20in%20ivy%20stable%202016-07-31%0A%20;;%20("C-c%20V"%20.%20ivy-pop-view)%0A%20)%0A%20)%0A#+END_SRC%0A%0A***%20Modeline%20information%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20line-number-display-limit-width%2010000)%0A(line-number-mode%20t)%0A(column-number-mode%20t)%20;;%20show%20some%20more%20leg%0A(size-indication-mode%20t)%0A%0A;;%20diminish%20keeps%20modeline%20tidy%0A(use-package%20diminish%0A%20:ensure%20t%0A%20)%0A%0A(diminish%20'auto-fill-function%20"")%0A(diminish%20'buffer-face-mode%20""%20)%0A(diminish%20'google-this-mode%20"")%0A%20%0A%0A%0A#+END_SRC%0A%0A***%20Defaults%20for%20files%20and%20editing%0A****%20Minor%20modes%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(delete-selection-mode%201)%0A(electric-pair-mode%201)%0A%0A(setq%20auto-revert-verbose%20nil)%20;;%20no%20whining%0A(global-auto-revert-mode%201)%20;;%20if%20file%20changes%20on%20disk,%20reread%20it%0A%0A(setq-default%20indent-tabs-mode%20nil%20;;%20we%20don't%20like%20tabs%20by%20default%0A%20tab-width%204%20;;%20not%20too%20wide%0A%20fill-column%2080%0A%20sentence-end-double-space%20nil)%20;;%20not%20in%20high%20school%20any%20more%0A%0A#+END_SRC%0A%0A****%20Hooks%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(add-hook%20'text-mode-hook%20'turn-on-auto-fill)%0A#+END_SRC%0A%0A****%20Misc%20buffer%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(prefer-coding-system%20'utf-8)%20;;%20be%20modern%0A(set-default-coding-systems%20'utf-8)%0A(set-terminal-coding-system%20'utf-8)%0A(set-keyboard-coding-system%20'utf-8)%0A(setq%20default-buffer-file-coding-system%20'utf-8)%0A%0A(setq-default%20find-file-visit-truename%20t)%20;;%20resolve%20symlinks%0A(setq%20view-read-only%20t)%20;;%20visit%20read-only%20files%20in%20view-mode%0A(setq%20confirm-nonexistent-file-or-buffer%20nil)%0A(setq%20next-line-add-newlines%20nil)%0A(setq%20require-final-newline%20t)%0A(setq%20kill-whole-line%20t)%0A%0A%0A;;%20unique%20buffer%20names%0A(use-package%20uniquify%0A%20:config%0A%20(setq%20uniquify-buffer-name-style%20'forward%0A%20uniquify-separator%20"/"%0A%20uniquify-after-kill-buffer-p%20t%0A%20uniquify-ignore-buffers-re%20"^\\*"))%0A%0A;;%20volatile%20highlights%20-%20temporarily%20highlight%20changes%20from%20pasting%20etc%0A(use-package%20volatile-highlights%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%0A%20(volatile-highlights-mode%20t)%0A%20)%0A%0A(use-package%20ibuffer%0A%20:commands%20(ibuffer)%0A%20:bind%20("C-x%20C-b"%20.%20ibuffer))%0A%0A(use-package%20which-func%0A%20:init%0A%20(setq%20which-func-unknown%20"")%0A%20:config%0A%20(which-function-mode)%0A%20)%0A%0A(add-to-list%20'display-buffer-alist%0A%20'("wclock"%20.%20((display-buffer-pop-up-window)%20.%0A%20((inhibit-same-window%20.%20t)))%20%0A%20))%0A#+END_SRC%0A%0A****%20TODO%20Set%20libraries%20unwritable%20%0A%0A%20Need%20to%20make%20this%20toggleable%20-%20package-install%20also%20thinks%20it's%20unwritable%0A%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Always%20open%20installed%20Emacs%20files%20as%20read-only.%20From%20EmacsWiki.%0A;;%20(dir-locals-set-class-variables%0A;;%20'unwritable-directory%0A;;%20'((nil%20.%20((buffer-read-only%20.%20t)))))%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"elpa"%20user-emacs-directory)%20'unwritable-directory)%0A;;%20(dir-locals-set-directory-class%20(expand-file-name%20"vendor"%20user-emacs-directory)%20'unwritable-directory)%0A#+END_SRC%0A%0A***%20Defaults%20for%20user%20interaction%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(fset%20'yes-or-no-p%20'y-or-n-p)%20;;%20less%20rsi%0A(setq%20suggest-key-bindings%206%20;;%20be%20friendly,%20show%20for%206s%0A%20echo-keystrokes%200.5)%20;;%20default%20is%201s%0A%0A(setq%20enable-recursive-minibuffers%20t)%0A%0A(global-hl-line-mode%201)%0A(setq%20show-paren-delay%200)%0A(show-paren-mode%201)%0A%0A(blink-cursor-mode%20nil)%20;;%20stop%20the%20madness%0A;;(setq%20visible-bell%20t)%20;;%20be%20less%20annoying%0A;;(setq%20ring-bell-function%20'ignore)%20%0A(defun%20my/terminal-visible-bell%20()%0A%20"A%20friendlier%20visual%20bell%20effect.%20Flash%20the%20modeline."%0A%20(invert-face%20'mode-line)%0A%20(run-with-timer%200.1%20nil%20'invert-face%20'mode-line))%0A%20%0A%20(setq%20visible-bell%20nil%0A%20ring-bell-function%20'my/terminal-visible-bell)%0A%0A;;%20scrolling.%20TODO:%20experiment%0A(setq%20scroll-margin%202%0A%20scroll-conservatively%2010000%0A%20scroll-preserve-screen-position%201)%0A%0A(setq%20ediff-window-setup-function%20'ediff-setup-windows-plain)%0A%0A(setq%20read-file-name-completion-ignore-case%20t)%20;;%20case-insensitive%20completion%0A%0A(setq%20hippie-expand-try-functions-list%20'(try-expand-dabbrev%0A%20try-expand-dabbrev-all-buffers%0A%20try-expand-dabbrev-from-kill%0A%20try-complete-file-name-partially%0A%20try-complete-file-name%0A%20try-expand-all-abbrevs%0A%20try-expand-list%0A%20try-expand-line%0A%20try-complete-lisp-symbol-partially%0A%20try-complete-lisp-symbol))%0A%0A(setq%20tab-always-indent%20'complete)%0A(add-to-list%20'completion-styles%20'initials%20t)%0A%0A#+END_SRC%0A%0A***%20Regular%20expressions%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20re-builder%0A%20:config%20(setq%20reb-re-syntax%20'rx))%0A%0A#+END_SRC%0A%0A***%20Performance%20options%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20gc-cons-threshold%20(*%2050%201024%201024)%20;;%208%20->%20100MB%0A%20large-file-warning-threshold%20(*%20100%201024%201024)%0A%20message-log-max%2016384)%0A%0A;;%20seed%20pseudo-random%20number%20generator%0A(random%20t)%0A#+END_SRC%0A%0A***%20Looks:%20fonts%20and%20themes%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20use%20bbatsov's%20ported%20Solarized%20theme%20%0A(use-package%20solarized-theme%0A%20:ensure%20t%0A%20:init%0A%20(setq%20solarized-use-variable-pitch%20nil%0A%20;;%20Prefer%20italics%20over%20bold%0A%20solarized-use-less-bold%20t%0A%20solarized-use-more-italic%20t%0A%20;;%20Emphasize%20docstrings%0A%20solarized-distinct-doc-face%20t%20%0A%20;;%20make%20the%20fringe%20stand%20out%20from%20the%20background%0A%20solarized-distinct-fringe-background%20t%0A%20;;%20make%20the%20modeline%20high%20contrast%0A%20solarized-high-contrast-mode-line%20nil%0A%20;;%20colors%20for%20indicators%20such%20as%20git:gutter,%20flycheck%20and%20similar%0A%20solarized-emphasize-indicators%20t%0A%20;;%20size%20of%20org-mode%20headlines%20(but%20keep%20other%20size-changes)%0A%20solarized-scale-org-headlines%20t%0A%20;;%20Avoid%20all%20font-size%20changes%0A%20;;%20solarized-height-minus-1%201%0A%20;;%20solarized-height-plus-1%201%0A%20;;%20solarized-height-plus-2%201%0A%20;;%20solarized-height-plus-3%201%0A%20;;%20solarized-height-plus-4%201%0A%20)%0A%20:config%0A%20(load-theme%20'solarized-light%20'no-confirm)%0A)%0A%0A;;%20(set-face-attribute%20'default%20nil%0A;;%20:family%20"Source%20Code%20Pro"%20:height%20115%20:weight%20'regular%20:width%20'semi-condensed)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Source%20Sans%20Pro"%20:height%20125%20:weight%20'regular)%0A(set-face-attribute%20'default%20nil%0A%20:family%20"Fira%20Mono"%20:height%20120%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Fira%20Sans"%20:height%20125%20:weight%20'regular)%0A;;%20(set-face-attribute%20'variable-pitch%20nil%0A;;%20:family%20"Linux%20Biolinum%20O"%20:height%20140%20:weight%20'regular)%0A%20;;%20(set-face-attribute%20'variable-pitch%20nil%0A%20;;%20:family%20"Lato"%20:height%20130%20:weight%20'medium)%0A(set-face-attribute%20'variable-pitch%20nil%0A%20:family%20"DejaVu%20Sans%20Book"%20:height%20130%20:weight%20'regular)%0A%0A(global-font-lock-mode%20t)%0A(setq%20x-underline-at-descent-line%20t)%0A%0A(set-face-background%20hl-line-face%20"white"%20)%0A%0A(add-hook%20'text-mode-hook%20'variable-pitch-mode)%0A(add-hook%20'Info-mode-hook%20'variable-pitch-mode)%0A%0A%0A(use-package%20beacon%0A%20:pin%20gnu%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:init%20(beacon-mode%201)%0A%20)%0A%0A#+END_SRC%0A%0A***%20Emacs%20windows%0AWinner-mode%20returns%20the%20previous%20window%20layout%20with%20C-c%20<left>%20in%20case%0Asomething%20messed%20it%20up.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20split-height-threshold%20nil)%0A(setq%20split-width-threshold%20150)%0A%0A(use-package%20winner%0A%20:ensure%20t%0A%20:defer%2010%0A%20:config%0A%20(winner-mode%201)%0A%20)%0A%0A%0A#+END_SRC%0A%0A***%20Emacs%20frames%0AEmacs%20frames%20are%20what%20the%20OS%20calls%20"windows".%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%20;;%20don't%20want%20these%0A%20(when%20(functionp%20'set-scroll-bar-mode)%20(set-scroll-bar-mode%20'nil))%0A%20(when%20(functionp%20'blink-cursor-mode)%20(blink-cursor-mode%20-1))%0A%20(when%20(functionp%20'tool-bar-mode)%20(tool-bar-mode%20-1))%0A%0A%20;;%20losing%20my%20neckbeard%20cred%20with%20these:%0A%20(when%20(functionp%20'mouse-wheel-mode)%20(mouse-wheel-mode%201))%0A%20(when%20(functionp%20'menu-bar-mode)%20(menu-bar-mode%201))%0A%20(when%20(functionp%20'tooltip-mode)%20(tooltip-mode%201))%0A%0A;;%20more%20useful%20frame%20title,%20that%20show%20either%20a%20file%20or%20a%0A;;%20buffer%20name%20(if%20the%20buffer%20isn't%20visiting%20a%20file)%0A(setq%20frame-title-format%0A%20'((:eval%20(if%20(buffer-file-name)%0A%20(abbreviate-file-name%20(buffer-file-name))%20"%25b")))%0A%20)%0A%0A;;%20clipboardy%20thingies%0A(setq%20x-select-enable-clipboard%20t%0A%20x-select-enable-primary%20t%0A%20save-interprogram-paste-before-kill%20t)%0A#+END_SRC%0A%0A***%20Navigation%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20avy%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:init%20(avy-setup-default)%0A%20:bind%20%0A%20(("M-g%20g"%20.%20avy-goto-line)%0A%20("M-g%20M-g"%20.%20avy-goto-line)%0A%20("C-\\"%20.%20avy-goto-char-2)%0A%20("M-g%20c"%20.%20avy-goto-char-timer))%0A%20)%0A%0A%0A%20(use-package%20ace-window%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:bind%20("C-x%20o"%20.%20ace-window)%0A%20;;:config%0A%20;;(setq%20aw-keys%20'(?a%20?s%20?d%20?f%20?g%20?h%20?j%20?k%20?l))%0A%20)%0A%0A%20;;%20imenu%20rescan%0A%20(setq%20imenu-auto-rescan%20t)%0A%0A#+END_SRC%0A%0A***%20Expand-region%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20expand-region%0A%20:ensure%20t%0A%20:bind%20("C-="%20.%20er/expand-region))%0A#+END_SRC%0A%0A**%20Utilities%0A***%20Encryption%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(setq%20epg-gpg-program%20"gpg2")%0A(setq%20epa-file-encrypt-to%20'(user-email))%0A#+END_SRC%0A%0A***%20Google%20this%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20google-this%0A%20:diminish%20t%0A%20:config%0A%20(google-this-mode%201)%0A%20)%0A#+END_SRC%0A%0A***%20Undo-tree%0A%0A7/2016:%20disabled%20because%20getting%20weird%20tracebacks.%0ATODO:%20file%20a%20bug?%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%20(use-package%20undo-tree%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:diminish%20""%0A%20:config%20(global-undo-tree-mode)%20%0A%20)%0A#+END_SRC%0A%0A***%20Lorem%20ipsum%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A(use-package%20lorem-ipsum%0A%20:load-path%20"vendor/emacs-lorem-ipsum"%0A%20:commands%20(lorem-ipsum-insert-paragraphs%20lorem-ipsum-insert-sentences)%0A%20)%0A%0A#+END_SRC%0A***%20Crux%0A%0ACrux%20is%20Bozhidar%20Batsov's%20Collection%20of%20Ridiculously%20Useful%20eXtensions.%20It%20is%0Awhat%20it%20says%20on%20the%20tin,%20versions%20of%20useful%20functions%20that%20are%20part%20of%20many%20init.el.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20crux%0A%20:ensure%20t%0A%20:bind%0A%20(("C-a"%20.%20crux-move-beginning-of-line)%0A%20("C-c%20n"%20.%20crux-cleanup-buffer-or-region)%0A%20("C-c%20C-e"%20.%20crux-eval-and-replace)%0A%20("C-c%202"%20.%20crux-duplicate-current-line-or-region)%0A%20("C-c%203"%20.%20crux-duplicate-and-comment-current-line-or-region)%0A%20("C-c%20r"%20.%20crux-rename-file-and-buffer)%0A%20("C-c%20R"%20.%20crux-reopen-as-root)%0A%20("C-c%20o"%20.%20crux-open-with))%0A%20:config%0A%20(crux-with-region-or-buffer%20indent-region)%0A%20(crux-with-region-or-buffer%20untabify)%0A%20(crux-with-region-or-line%20comment-or-uncomment-region)%0A%20)%0A#+END_SRC%0A%0A***%20Version%20Control%0A%0AMagit%20alone%20along%20with%20Orgmode%20would%20be%20enough%20reason%20to%20use%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20magit%0A%20:ensure%20t%0A%20:diminish%20"g"%0A%20:commands%20(magit-status)%0A%20:bind%20%0A%20(("<f8>"%20.%20magit-status))%0A%20)%0A%0A(use-package%20with-editor%0A%20:ensure%20t%0A%20:config%0A%20(shell-command-with-editor-mode)%0A%20)%0A%0A(use-package%20git-timemachine%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20diff-hl%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-diff-hl-mode)%0A%20)%0A%20#+END_SRC%0A%0A***%20Searching%0A****%20Ack%0A%0A%20Ack%20supports%20ack,%20ag,%20git%20grep,%20etc.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ack%0A%20:ensure%20t%0A%20:pin%20gnu%0A%20:commands%20ack)%0A%0A%20#+END_SRC%0A***%20Tramp%0A%0ADon't%20run%20an%20editor%20on%20a%20server,%20edit%20the%20files%20from%20the%20comfort%20of%20a%20local%20Emacs.%0A%0A%20#+BEGIN_SRC%20emacs-lisp%0A(use-package%20tramp%0A%20:config%0A%20(setq%20tramp-default-method%20"ssh")%0A%20)%0A%20#+END_SRC%0A%0A***%20PDF%20Tools%0A%0APDF%20Tools%20requires%20=dnf%20install%20-y%20poppler-glib-devel=%20on%20Fedora.%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pdf-tools%0A%20:ensure%20t%0A%20:defer%0A%20:config%0A%20(pdf-tools-install)%0A%20)%0A#+END_SRC%0A%0A***%20YASnippets%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20yasnippet%0A%20:defer%20t%0A%20:if%20(not%20noninteractive)%0A%20:diminish%20yas-minor-mode%0A%20:commands%20(yas-global-mode%20yas-minor-mode)%20%0A%20)%0A#+END_SRC%0A%0A*%20Orgmode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20org%0A%20:ensure%20org-plus-contrib%0A%20:defer%20t%0A%20:pin%20org%0A%20:bind%20%0A%20(("C-c%20l"%20.%20org-store-link)%0A%20("C-c%20a"%20.%20org-agenda)%0A%20("C-c%20c"%20.%20org-capture)%0A%20("C-c%20b"%20.%20org-iswitchb)%0A%20("C-c%20t"%20.%20org-time-stamp-inactive))%20;%20flycheck%20steals%20C-c%20!%20map%0A%20:init%0A%20(eval-after-load%20'ox%20'(require%20'ox-koma-letter))%0A%20(eval-after-load%20'ox-latex%0A%20'(add-to-list%20'org-latex-packages-alist%20'("AUTO"%20"babel"%20t)%20t)%20%0A%20)%0A%20:config%20%0A%20(setq%20org-modules%20'(org-crypt%20org-docview%20org-habit%20org-info%0A%20org-protocol%20org-bookmark%20org-bullets%0A%20org-checklist%20org-eshell%20org-learn%20org-man%20%0A%20org-toc)%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("py"%20"\n#+BEGIN_SRC%20python\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("el"%20"\n#+BEGIN_SRC%20emacs-lisp\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"emacs-lisp\">\n?\n</src>")%0A%20)%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("sh"%20"\n#+BEGIN_SRC%20sh\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"sh\">\n?\n</src>")%0A%20)%20%0A%0A%20(setq%20org-directory%20"~/Documents/Org"%0A%20org-agenda-files%20(list%20"~/Documents/Org")%0A%20org-default-notes-file%20"~/Documents/Org/notes.org.gpg"%0A%20org-startup-folded%20"contents"%0A%20org-archive-folder%20"~/Documents/Org/.archive"%0A%20org-special-ctrl-a/e%20t%0A%20;;org-ctrl-k-protect-subtree%20t%0A%20org-catch-invisible-edits%20'show%20;%20TODO%20check%20'smart%0A%20org-return-follows-link%20t%0A%20org-src-fontify-natively%20t%0A%20org-src-tab-acts-natively%20t%0A%20org-src-preserve-indentation%20t%0A%20org-support-shift-select%20t%0A%20)%0A%20(setq%20org-ellipsis%20"%E2%80%A6")%0A%20(setq%20org-todo-keywords%0A%20(quote%20((sequence%20"TODO(t)"%20"NEXT(n)"%20"|"%20"DONE(d)")%0A%20(sequence%20"WAITING(w@/!)"%20"HOLD(h@/!)"%20"|"%20"CANCELLED(c@/!)"%20%0A%20"PHONE"%20"MEETING")%0A%20))%0A%20)%0A%20(setq%20org-use-fast-todo-selection%20t)%0A%20(setq%20org-treat-S-cursor-todo-selection-as-state-change%20nil)%0A%20(setq%20org-todo-state-tags-triggers%0A%20(quote%20(("CANCELLED"%20("CANCELLED"%20.%20t))%0A%20("WAITING"%20("WAITING"%20.%20t))%0A%20("HOLD"%20("WAITING")%20("HOLD"%20.%20t))%0A%20(done%20("WAITING")%20("HOLD"))%0A%20("TODO"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("NEXT"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20("DONE"%20("WAITING")%20("CANCELLED")%20("HOLD"))%0A%20))%0A%20)%0A%20(setq%20org-capture-templates%0A%20'(("t"%20"Todo"%20entry%0A%20(file+headline%20"~/Documents/Org/todo.org"%20"Tasks")%0A%20"*%20TODO%20%25?\n%20%25i\n%20%25a")%0A%20("n"%20"Note"%20entry%0A%20(file+headline%20"~/Documents/Org/notes.org.gpg"%20"Unorganized")%0A%20"*%20%25?\n%20%25i\n%20%25a")%0A%20("j"%20"Journal"%20entry%0A%20(file+datetree%20"~/Documents/Org/journal.org.gpg")%0A%20"*%20%25u%20%25?\n%20%25i\n%20%25a")%0A%20)%0A%20)%0A%20(add-hook%20'org-mode-hook%0A%20(lambda%20()%20(imenu-add-to-menubar%20"Index")%0A%20(org-bullets-mode%201))%20%0A%20)%0A%0A%20(org-babel-do-load-languages%0A%20'org-babel-load-languages%0A%20'(%0A%20(calc%20.%20t)%0A%20(ditaa%20.%20t)%0A%20(dot%20.%20t)%0A%20(emacs-lisp%20.%20t)%0A%20(gnuplot%20.%20t)%0A%20(js%20.%20t)%0A%20(makefile%20.%20t)%0A%20(python%20.%20t)%0A%20(R%20.%20t)%0A%20(ruby%20.%20t)%0A%20(sh%20.%20t)%0A%20))%0A%0A%20(setq%20texcmd%20"latexmk%20-xelatex")%0A%20(setq%20org-latex-pdf-process%20(list%20texcmd))%0A%20%0A%20)%20;;%20End%20of%20use-package%20org%0A%0A(use-package%20org-bullets%0A%20:init%20(setq%20org-bullets-bullet-list%20'("%E2%97%8F"%20"%E2%98%85"%20"%E2%9D%80"%20"%E2%96%BA"%20"%E2%80%A2"%20"%E2%96%B8"%20"%E2%98%A2"))%0A%20:defer%20t%0A%20:ensure%20t%0A%20:commands%20(org-bullets-mode)%0A%20)%0A%0A(use-package%20ob-ipython%0A%20:load-path%20"vendor/ob-ipython"%0A%20:defer%20t%0A%20:config%20%0A%20(setq%20ob-ipython-command%20"ipython3")%0A%20(add-to-list%20'org-structure-template-alist%0A%20'("ipy"%20"\n#+BEGIN_SRC%20ipython%20:session\n?\n#+END_SRC\n"%0A%20"<src%20lang=\"python\">\n?\n</src>"))%0A%20)%0A%0A(use-package%20ox-pandoc%0A%20:defer%20t%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gcal%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20org-gnome%0A%20:ensure%20t%0A%20)%0A%0A%20%0A#+END_SRC%0A%0A*%20System%20admin%0A**%20Ansible%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20yaml-mode%0A%20:ensure%20t%0A%20:init%20%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yml$"%20.%20yaml-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.yaml$"%20.%20yaml-mode))%0A%20(add-hook%20'yaml-mode-hook%0A%20'(lambda%20()%0A%20(define-key%20yaml-mode-map%20"\C-m"%20'newline-and-indent)))%0A%20)%0A%0A(use-package%20ansible%0A%20:ensure%20t%0A%20;;:config%20(ansible::set-default-keymap)%0A%20)%0A%0A(use-package%20ansible-doc%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'yaml-mode-hook%20#'ansible-doc-mode)%0A%20)%0A%0A(use-package%20company-ansible%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Docker%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dockerfile-mode%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20docker%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Puppet%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20puppet-mode%0A%20:ensure%20t%0A%20)%0A#+END_SRC%0A%0A**%20Vagrant%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20vagrant%0A%20:ensure%20t)%0A;;%20(use-package%20vagrant-tramp%0A;;%20:ensure%20t)%0A#+END_SRC%0A%0A*%20Programming%0A**%20General%20programming%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20compilation:%20don't%20ask%20about%20saving,%20don't%20save,%20and%20add%20helper%20to%20shell%20mode.%0A(setq%20compilation-ask-about-save%20nil)%0A(setq%20compilation-save-buffers-predicate%20'(lambda%20()%20nil))%0A(add-hook%20'shell-mode-hook%20'compilation-shell-minor-mode)%0A%0A;;%20make%20a%20file%20executable%20if%20it%20starts%20with%20#!%0A(add-hook%0A%20'after-save-hook%0A%20'executable-make-buffer-file-executable-if-script-p)%0A%0A%0A(use-package%20company%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:config%0A%20(global-company-mode)%0A%20(use-package%20company-quickhelp%0A%20:ensure%20t%0A%20:config%0A%20(setq%20company-quickhelp-idle-delay%203)%0A%20(company-quickhelp-mode%201)%0A%20)%0A%20(use-package%20company-emoji%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'markdown-mode-hook%20'company-mode)%0A%20(add-hook%20'markdown-mode-hook%20'company-emoji-init)%20%0A%20)%0A%20(use-package%20company-jedi%0A%20:disabled%20t%0A%20:ensure%20t%0A%20:config%20(add-to-list%20'company-backends%20'company-jedi)%20%0A%20)%20%0A%20)%0A%0A%0A(use-package%20flycheck%0A%20:ensure%20t%0A%20:defer%20t%0A%20:commands%20(flycheck-mode)%0A%20:diminish%20""%0A%20:init%20(global-flycheck-mode)%0A%20:bind%0A%20(("M-g%20M-n"%20.%20flycheck-next-error)%0A%20("M-g%20M-p"%20.%20flycheck-previous-error)%0A%20("M-g%20M-="%20.%20flycheck-list-errors))%0A%20:config%0A%20(setq-default%20flycheck-disabled-checkers%20'(emacs-lisp-checkdoc))%0A%20)%0A%0A(use-package%20aggressive-indent%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20:commands%20(aggressive-indent-mode)%0A%20:config%20%0A%20(add-to-list%20'aggressive-indent-excluded-modes%20'elpy-mode)%20;;%20aggressive%20indent%20is%20too%20aggressive%20for%20python%0A%20(aggressive-indent-global-mode%201))%0A%0A(use-package%20rainbow-mode%0A%20:pin%20gnu%0A%20:ensure%20t%0A%20)%0A%0A(use-package%20yasnippet%0A%20:ensure%20t%0A%20:init%0A%20(yas-global-mode%201)%0A%20)%0A%0A%0A(add-hook%20'prog-mode-hook%20'flyspell-prog-mode)%0A(add-hook%20'prog-mode-hook%20'imenu-add-menubar-index)%0A(add-hook%20'prog-mode-hook%20'aggressive-indent-mode)%0A%0A#+END_SRC%0A**%20Makefile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(defun%20my-makefile-hook%0A%20(setq%20indent-tabs-mode%20t)%0A%20)%0A(add-hook%20'makefile-mode-hook%20'my-makefile-hook)%0A#+END_SRC%0A%0A**%20Projectile%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20projectile%0A%20:ensure%20t%0A%20:config%20(projectile-global-mode%201)%0A%20:diminish%20projectile-mode%0A%20:init%0A%20(progn%0A%20(setq%20projectile-file-exists-remote-cache-expire%20(*%2030%2060))%0A%20(setq%20projectile-switch-project-action%20'projectile-find-file-dwim)))%0A%0A#+END_SRC%0A%0A**%20Python%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20elpy%0A%20:ensure%20t%0A%20:commands%20(elpy-enable)%0A%20:diminish%20"%F0%9F%90%8D"%0A%20:init%20%0A%20(setq%20elpy-rpc-backend%20"jedi"%0A%20elpy-rpc-project-specific%20't%0A%20)%0A%20(elpy-enable)%0A%20:config%0A%20(elpy-use-ipython%20"ipython3")%20%0A%20(when%20(fboundp%20'flycheck-mode)%0A%20(setq%20elpy-modules%20(delete%20'elpy-module-flymake%20elpy-modules)))%0A%20;;%20fix%20PEP8%20compliance%20on%20save%0A%20(use-package%20py-autopep8%0A%20:ensure%20t%0A%20:config%0A%20(add-hook%20'elpy-mode-hook%20'py-autopep8-enable-on-save))%0A%20;;%20emacs%20ipython%20notebook%0A%20(use-package%20ein%0A%20:ensure%20t)%0A%20)%0A%0A#+END_SRC%0A%0A**%20Emacs%20lisp%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20paredit%0A%20:ensure%20t%0A%20:commands%20(paredit-mode)%0A%20:config%0A%20(progn%0A%20(defvar%20electrify-return-match%20"%5B\%5D}\)\"%5D"%0A%20"If%20this%20regexp%20matches%20the%20text%20after%20the%20cursor,%20do%20an%20\"electric\"%0A%20return.")%0A%0A%20(defun%20electrify-return-if-match%20(arg)%0A%20"If%20the%20text%20after%20the%20cursor%20matches%0A%20`electrify-return-match'%20then%20open%20and%20indent%20an%20empty%20line%0A%20between%20the%20cursor%20and%20the%20text.%20Move%20the%20cursor%20to%20the%20new%20line."%0A%20(interactive%20"P")%0A%20(let%20((case-fold-search%20nil))%0A%20(if%20(looking-at%20electrify-return-match)%0A%20(save-excursion%20(newline-and-indent)))%0A%20(newline%20arg)%0A%20(indent-according-to-mode)))%0A%20))%0A%0A(defun%20my/lisp-mode%20()%0A%20(paredit-mode%20t)%20%0A%20(turn-on-eldoc-mode)%0A%20(eldoc-add-command%0A%20'paredit-backward-delete%0A%20'paredit-close-round)%0A%20(local-set-key%20(kbd%20"RET")%20'electrify-return-if-match)%0A%20(eldoc-add-command%20'electrify-return-if-match)%0A%20(show-paren-mode%20t))%0A%0A(add-hook%20'emacs-lisp-mode-hook%20'my/lisp-mode)%0A(add-hook%20'eval-expression-minibuffer-setup-hook%20'my/lisp-mode)%0A%0A;;(use-package%20rainbow-delimiters)%0A%0A#+END_SRC%0A%0A**%20Shell%20script%0A**%20Ruby%0A%0ARuby-mode%20is%20included%20with%20Emacs%20(23+).%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20ruby-mode%0A%20:diminish%20"%F0%9F%92%8E"%0A%20)%0A%0A;;%20Rubyish%20file%20extensions:%0A(add-to-list%20'auto-mode-alist%0A%20'("\\.\\(?:cap\\|gemspec\\|irbrc\\|gemrc\\|rake\\|rb\\|ru\\|thor\\)\\'"%20%0A%20.%20ruby-mode))%0A(add-to-list%20'auto-mode-alist%0A%20'("\\(?:Brewfile\\|Capfile\\|Gemfile\\(?:\\.%5Ba-zA-Z0-9._-%5D+\\)?\\|%5BrR%5Dakefile\\)\\'"%20%0A%20.%20ruby-mode))%0A%0A;;%20inf-ruby%20gives%20us%20a%20Ruby%20REPL%0A;;%20not%20in%20Melpa-stable.%20TODO%20put%20it%20in%20vendor/%0A(use-package%20inf-ruby%0A%20:config%20%0A%20(add-hook%20'ruby-mode-hook%20'inf-ruby-minor-mode)%0A%20)%0A#+END_SRC%0A%0A**%20Go%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A;;%20install%20godef%20w/%20go%20get%20github.com/rogpeppe/godef%0A(use-package%20go-mode%0A%20:ensure%20t%0A%20)%0A%0A;;%20requires%20gocode:%20go%20get%20-u%20github.com/nsf/gocode%0A(use-package%20go-eldoc%0A%20:ensure%20t%0A%20)%0A(use-package%20company-go%0A%20:ensure%20t%0A%20)%0A%0A%0A(add-hook%20'go-mode-hook%20%0A%20(lambda%20()%0A%20(add-hook%20'before-save-hook%20#'gofmt-before-save)%0A%20(local-set-key%20(kbd%20"M-.")%20#'godef-jump)%0A%20(flycheck-mode%201)))%0A(add-hook%20'go-mode-hook%20'go-eldoc-setup)%0A%0A#+END_SRC%0A%0A**%20Web%20mode%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20web-mode%0A%20:ensure%20t%0A%20:init%0A%20(setq%20web-mode-enable-auto-pairing%20t)%0A%20(setq%20web-mode-enable-css-colorization%20t)%0A%20(setq%20web-mode-enable-current-element-highlight%20t)%0A%20(setq%20web-mode-enable-current-column-highlight%20t)%0A%20(setq%20web-mode-ac-sources-alist%0A%20'(("css"%20.%20(ac-source-css-property))%0A%20("html"%20.%20(ac-source-words-in-buffer%20ac-source-abbrev)))%0A%20)%0A%20:config%0A%20(add-to-list%20'auto-mode-alist%20'("\\.erb\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.djhtml\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.dtl\\'"%20.%20web-mode))%0A%20(add-to-list%20'auto-mode-alist%20'("\\.html?\\'"%20.%20web-mode))%0A%20)%0A#+END_SRC%0A%0A*%20Writing%0A%20General%20writing%20settings.%0A%0A**%20AUCTeX%0A%0A%20-dnf%20install%20-y%20emacs-auctex-%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(when%20(require%20'tex-site%20nil%20'noerror)%0A%20;;%20currently%20using%20Auctex%20from%20Fedora.%0A%20;;%20these%20are%20recommended%20in%20info%0A%20(setq%20TeX-auto-save%20t)%0A%20(setq%20TeX-parse-self%20t)%0A%20;;(setq-default%20TeX-master%20nil)%0A%20;;%20we%20don't%20care%20for%20Computer%20Modern,%20let's%20use%20All.%20The.%20Fonts.%0A%20(setq%20latex-run-command%20"latexmk%20-xelatex")%0A%20;;%20mkiv%20is%20the%20recommended%20ConTeXt%20version%0A%20(setq%20ConTeXt-Mark-version%20"IV")%0A%20)%0A#+END_SRC%0A%0A**%20Proselint%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20Requires%20'pip%20install%20proselint'%0A;;%0A;;%20From%20https:/github.com/amperser/proselint/tree/master/plugins/flycheck%0A;;%20(flycheck-define-checker%20proselint%0A;;%20"A%20linter%20for%20prose."%0A;;%20:command%20("proselint"%20source-inplace)%0A;;%20:error-patterns%0A;;%20((warning%20line-start%20(file-name)%20":"%20line%20":"%20column%20":%20"%0A;;%20(id%20(one-or-more%20(not%20(any%20"%20"))))%0A;;%20(message%20(one-or-more%20not-newline)%0A;;%20(zero-or-more%20"\n"%20(any%20"%20")%20(one-or-more%20not-newline)))%0A;;%20line-end))%0A;;%20:modes%20(text-mode%20org-mode%20markdown-mode%20gfm-mode))%0A%0A;;%20(add-to-list%20'flycheck-checkers%20'proselint)%0A%0A;;%20(add-hook%20'text-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'org-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'markdown-mode-hook%20#'flycheck-mode)%0A;;%20(add-hook%20'gfm-mode-hook%20#'flycheck-mode)%0A#+END_SRC%0A**%20Spelling%0A%20Use%20wcheck-mode%0A#+BEGIN_SRC%20emacs-lisp%0A;;%20(use-package%20wcheck-mode%0A;;%20:pin%20gnu%0A;;%20:ensure%20t%0A;;%20:commands%20(wcheck-mode%20wcheck-mode-languages%20wcheck-actions%0A;;%20wcheck-jump-forward%20wcheck-jump-backward)%0A;;%20:init%0A;;%20(setq%20wcheck-language-data%0A;;%20'(("American%20English"%0A;;%20(program%20.%20"aspell")%0A;;%20(args%20"-l"%20"-d"%20"en_US")%0A;;%20(action-program%20.%20"aspell")%0A;;%20(action-args%20"-a"%20"-d"%20"en_US")%0A;;%20(action-parser%20.%20wcheck-parser-ispell-suggestions))%0A;;%20("Finnish"%0A;;%20(program%20.%20"enchant")%0A;;%20(args%20"-l"%20"-d"%20"fi")%0A;;%20(syntax%20.%20my-finnish-syntax-table)%0A;;%20(action-program%20.%20"enchant")%0A;;%20(action-args%20"-a"%20"-d"%20"fi")%0A;;%20(action-parser%20.%20enchant-suggestion-menu))))%0A%0A;;%20:config%0A;;%20(defun%20enchant-suggestions-menu%20(marked-text)%0A;;%20(cons%20(cons%20"%5BAdd%20to%20dictionary%5D"%20'enchant-add-to-dictionary)%0A;;%20(wcheck-parser-ispell-suggestions)))%0A%0A;;%20(defvar%20enchant-dictionaries-dir%20"~/.config/enchant")%0A;;%20(defun%20enchant-add-to-dictionary%20(marked-text)%0A;;%20(let*%20((word%20(aref%20marked-text%200))%0A;;%20(language%20(aref%20marked-text%204))%0A;;%20(file%20(let%20((code%20(nth%201%20(member%20"-d"%20(wcheck-query-language-data%0A;;%20language%20'action-args)))))%0A;;%20(when%20(stringp%20code)%0A;;%20(concat%20(file-name-as-directory%20enchant-dictionaries-dir)%0A;;%20code%20".dic")))))%0A;;%20(when%20(and%20file%20(file-writable-p%20file))%0A;;%20(with-temp-buffer%0A;;%20(insert%20word)%20(newline)%0A;;%20(append-to-file%20(point-min)%20(point-max)%20file)%0A;;%20(message%20"Added%20word%20\"%25s\"%20to%20the%20%25s%20dictionary"%0A;;%20word%20language)))))%0A;;%20)%20%0A%0A;;%20use%20hunspell%20if%20we%20have%20it%0A(when%20(executable-find%20"hunspell")%0A%20(setq-default%20ispell-program-name%20"hunspell")%0A%20(setq%20ispell-really-hunspell%20t))%0A%0A;;%20flyspell%0A(add-hook%20'text-mode-hook%20(lambda%20()%0A%20(flyspell-mode%201)))%0A(add-hook%20'prog-mode-hook%20(lambda%20()%0A%20(flyspell-prog-mode)))%0A%0A%0A#+END_SRC%0A%0A**%20Markdown%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A(use-package%20markdown-mode%0A%20:ensure%20t%0A%20:commands%20(markdown-mode%20gfm-mode)%0A%20:mode%20%0A(("README\\.md\\'"%20.%20gfm-mode)%0A%20("\\.md\\'"%20.%20markdown-mode)%0A%20("\\.markdown\\'"%20.%20markdown-mode))%0A%20:init%20%0A(setq%20markdown-command%20"pandoc%20-f%20markdown%20-t%20html5")%0A)%0A#+END_SRC%0A%0A**%20Pandoc%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20pandoc-mode%0A%20:ensure%20t%0A%20:init%0A%20(add-hook%20'markdown-mode-hook%20'pandoc-mode)%0A%20:config%0A%20(add-hook%20'pandoc-mode-hook%20'pandoc-load-default-settings)%0A%20)%0A#+END_SRC%0A%0A*%20Applications%0A**%20Shells%0A***%20Eshell%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20eshell%0A%20:commands%20eshell%20eshell-command%0A%20:init%0A%20(setq%20eshell-buffer-shorthand%20t%0A%20eshell-cmpl-ignore-case%20t%0A%20eshell-cmpl-cycle-completions%20nil%0A%20eshell-history-size%2010000%0A%20eshell-save-history-on-exit%20t%0A%20eshell-hist-ignoredups%20t%0A%20eshell-glob-case-insensitive%20t%0A%20eshell-scroll-to-bottom-on-input%20'this)%0A%20:config%0A%20(progn%0A%20(require%20'em-smart)%0A%20(setq%20eshell-where-to-jump%20'begin%0A%20eshell-review-quick-commands%20nil%0A%20eshell-smart-space-goes-to-end%20t)%0A%20(require%20'em-cmpl)%0A%20(require%20'em-prompt)%0A%20(require%20'em-term)%0A%20(require%20'esh-opt)%0A%20%0A%20(setenv%20"PAGER"%20"cat")%0A%20(defalias%20'e%20'find-file)%0A%20(defalias%20'ff%20'find-file)%0A%20(defalias%20'vim%20'find-file)%0A%20(defalias%20'emacs%20'find-file-other-window)%0A%20(defalias%20'gd%20'magit-diff-unstaged)%0A%20(defalias%20'gds%20'magit-diff-staged)%0A%20(defun%20eshell/d%20(&rest%20args)%0A%20(dired%20(pop%20args)%20"."))%0A%20%0A%20(defun%20eshell/x%20()%0A%20"Closes%20the%20EShell%20session%20and%20gets%20rid%20of%20the%20EShell%20window."%0A%20(kill-buffer)%0A%20(delete-window))%0A%20%0A%20(defun%20eshell/gst%20(&rest%20args)%0A%20(magit-status%20(pop%20args)%20nil)%0A%20(eshell/echo))%20;;%20The%20echo%20command%20suppresses%20output%0A%0A%20(defun%20eshell/magit%20()%0A%20"Function%20to%20open%20magit-status%20for%20the%20current%20directory"%0A%20(interactive)%0A%20(magit-status%20default-directory))%0A%20%0A%20(add-to-list%20'eshell-visual-commands%20"tmux")%0A%20(add-to-list%20'eshell-visual-commands%20"ssh")%0A%20(add-to-list%20'eshell-visual-commands%20"vim")%0A%20(add-to-list%20'eshell-visual-commands%20"links")%0A%20(add-to-list%20'eshell-visual-commands%20"elinks")%0A%20(add-to-list%20'eshell-visual-commands%20"alsamixer")%0A%20(add-to-list%20'eshell-visual-commands%20"nmtui")%0A%20(add-to-list%20'eshell-visual-commands%20"tail")%0A%0A%20(add-to-list%20'eshell-visual-subcommands%20'(("git"%20"log"%20"diff"%20"show")))%0A%0A%20(defun%20eshell-here%20()%0A%20"https:/github.com/howardabrams/dot-files/blob/master/emacs-eshell.org%0A%20Opens%20up%20a%20new%20shell%20in%20the%20directory%20associated%20with%20the%0A%20current%20buffer's%20file.%20The%20eshell%20is%20renamed%20to%20match%20that%0A%20directory%20to%20make%20multiple%20eshell%20windows%20easier."%0A%20(interactive)%0A%20(let*%20((parent%20(if%20(buffer-file-name)%0A%20(file-name-directory%20(buffer-file-name))%0A%20default-directory))%0A%20(height%20(/%20(window-total-height)%203))%0A%20(name%20(car%20(last%20(split-string%20parent%20"/"%20t)))))%0A%20(split-window-vertically%20(-%20height))%0A%20(other-window%201)%0A%20(eshell%20"new")%0A%20(rename-buffer%20(concat%20"*eshell:%20"%20name%20"*"))%0A%0A%20;;(insert%20(concat%20"ls"))%0A%20;;(eshell-send-input)%0A%20))%0A%0A%20(bind-key%20"C-!"%20'eshell-here)%0A%20(bind-key%20"<f2>"%20'eshell-here)%0A%20))%0A%0A#+END_SRC%0A**%20Dired%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(use-package%20dired%0A%20:commands%20(dired)%0A%20:config%0A%20(setq%20dired-recursive-copies%20'always%0A%20dired-recursive-deletes%20'always%0A%20dired-dwim-target%20t%0A%20;;%20-F%20marks%20links%20with%20@%0A%20dired-ls-F-marks-symlinks%20t%0A%20;;delete-by-moving-to-trash%20t%0A%20;;%20Auto%20refresh%20dired%0A%20global-auto-revert-non-file-buffers%20t%0A%20wdired-allow-to-change-permissions%20t%0A%20wdired-allow-to-redirect-links%20t%0A%20wdired-use-interactive-rename%20nil%20%0A%20wdired-confirm-overwrite%20t)%0A)%0A%0A(add-hook%20'dired-load-hook%0A%20(lambda%20()%0A%20;;%20Bind%20dired-x-find-file.%0A%20(setq%20dired-x-hands-off-my-keys%20nil)%0A%20(load%20"dired-x")%0A%20))%0A%0A;;%20(add-hook%20'dired-mode-hook%0A;;%20(lambda%20()%0A;;%20;;%20Set%20dired-x%20buffer-local%20variables%20here.%20For%20example:%0A;;%20;;(dired-omit-mode%201)%0A;;%20))%0A%0A%0A%0A#+END_SRC%0A%0A*%20Location%20and%20calendar%0A%0A#+BEGIN_SRC%20emacs-lisp%0A%0A%0A;;%20where%20I%20hang%20my%20hat%0A(setq%20calendar-latitude%2037.9%0A%20calendar-longitude%20122.9%0A%20calendar-location-name%20"Berkeley,%20CA,%20US"%0A%20calendar-time-zone%20480%0A%20calendar-standard-time-zone-name%20"PST"%0A%20calendar-standard-daylight-time-zone-name%20"PDT")%0A%0A(setq%20display-time-24hr-format%20t)%0A%0A(setq%20display-time-world-list%0A%20'(("America/Los_Angeles"%20"California")%0A%20("Europe/Helsinki"%20"Helsinki")%0A%20("UTC"%20"UTC")%0A%20("America/New_York"%20"US%20East")%0A%20("America/Chicago"%20"Chicago")%0A%20("America/Denver"%20"Denver")%0A%20("US/Hawaii"%20"Hawaii")%0A%20("Africa/Dakar"%20"Dakar")%0A%20("Europe/London"%20"London")%0A%20("Europe/Paris"%20"Paris")%0A%20("Europe/Berlin"%20"Berlin")%0A%20("Asia/Kolkata"%20"India")%0A%20("Asia/Shanghai"%20"China")%0A%20("Asia/Tokyo"%20"Tokyo")))%0A%0A(setq%20display-time-world-time-format%0A%20"%25R%20%255Z%20(UTC%25z)%20-%20%25d%20%253h%20-%20%25A")%0A%0A(setq%20holiday-bahai-holidays%20nil)%0A(setq%20holiday-christian-holidays%20nil)%0A(setq%20holiday-hebrew-holidays%20nil)%0A(setq%20holiday-islamic-holidays%20nil)%0A(setq%20holiday-other-holidays%0A%20;;%20Edited%20from%20suomalainen-kalenteri.el%0A%20'((holiday-fixed%201%201%20"Uudenvuodenp%C3%A4iv%C3%A4")%0A%20(holiday-fixed%201%2027%20"Vainojen%20uhrien%20muistop%C3%A4iv%C3%A4")%0A%20(holiday-fixed%202%205%20"J.%20L.%20Runebergin%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%202%206%20"Saamelaisten%20kansallisp%C3%A4iv%C3%A4")%0A%20(holiday-fixed%202%2028%20"Kalevalan%20p%C3%A4iv%C3%A4,%20suomalaisen%20kulttuurin%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%202%2029%20"Karkausp%C3%A4iv%C3%A4")%0A%20(holiday-fixed%203%208%20"Kansainv%C3%A4linen%20naistenp%C3%A4iv%C3%A4")%0A%20(holiday-fixed%203%2019%20"Minna%20Canthin%20p%C3%A4iv%C3%A4,%20tasa-arvon%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-sexp%20'(if%20(>=%20year%202014)%20(list%204%208%20year))%0A%20"Romanien%20kansallisp%C3%A4iv%C3%A4")%0A%20(holiday-fixed%204%209%20"Mikael%20Agricolan%20p%C3%A4iv%C3%A4,%20suomen%20kielen%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%204%2027%20"Kansallinen%20veteraanip%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%205%201%20"Vappu,%20suomalaisen%20ty%C3%B6n%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%205%209%20"Eurooppa-p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%205%2012%20"J.%20V.%20Snellmanin%20p%C3%A4iv%C3%A4,%20suomalaisuuden%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-float%205%200%202%20"%C3%84itienp%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-float%205%200%203%20"Kaatuneitten%20muistop%C3%A4iv%C3%A4%20(liputus,%20puolitangossa)")%0A%20(holiday-fixed%206%204%20"Puolustusvoimain%20lippujuhlan%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%206%205%20"Maailman%20ymp%C3%A4rist%C3%B6p%C3%A4iv%C3%A4")%0A%20(holiday-float%206%206%201%20"Juhannusp%C3%A4iv%C3%A4,%20Suomen%20lipun%20p%C3%A4iv%C3%A4%20(liputus)"%2020)%0A%20(holiday-fixed%207%206%20"Eino%20Leinon%20p%C3%A4iv%C3%A4,%20runon%20ja%20suven%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%2010%2010%20"Aleksis%20Kiven%20p%C3%A4iv%C3%A4,%20suomalaisen%20kirjallisuuden%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%2010%2024%20"YK:n%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-float%2010%206%201%20"Pyh%C3%A4inp%C3%A4iv%C3%A4"%2031)%0A%20(holiday-fixed%2011%206%20"Ruotsalaisuuden%20p%C3%A4iv%C3%A4,%20Kustaa%20Aadolfin%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-float%2011%200%202%20"Is%C3%A4np%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-fixed%2011%2020%20"Lapsen%20oikeuksien%20p%C3%A4iv%C3%A4")%0A%20(holiday-fixed%2012%206%20"Itsen%C3%A4isyysp%C3%A4iv%C3%A4%20(liputus)")%0A%20(holiday-sexp%20'(if%20(>=%20year%202011)%20(list%2012%208%20year))%20"Jean%20Sibeliuksen%20p%C3%A4iv%C3%A4,%20suomalaisen%20musiikin%20p%C3%A4iv%C3%A4%20(liputus)")%0A%20;;%20other%20days%0A%20(holiday-fixed%207%2014%20"Bastille%20Day")%0A%20(holiday-float%2010%201%202%20"Indigenous%20Peoples'%20Day")%0A%20;;%20muslim%20holidays%0A%20(holiday-islamic%209%201%20"Ramadan%20begins")%0A%20(holiday-islamic%2010%201%20"Eid%20al-Fitr")%0A%20(holiday-islamic%2012%2010%20"Eid%20al-Adha")%0A%20;;%20jewish%20holidays%0A%20(holiday-hebrew%207%201%20"Rosh%20Hashanah")%0A%20(holiday-hebrew%207%2010%20"Yom%20Kippur")%0A%20(holiday-hebrew%203%2025%20"Hanukkah")%0A%20;;%20UN%20international%20days%0A%20(holiday-fixed%203%2020%20"International%20Day%20of%20Happiness")%0A%20(holiday-fixed%204%2012%20"International%20Day%20of%20Human%20Space%20Flight")%0A%20(holiday-fixed%204%2030%20"International%20Jazz%20Day")%0A%20(holiday-fixed%206%201%20"Global%20Day%20of%20Parents")%0A%20(holiday-fixed%206%2021%20"International%20Day%20of%20Yoga")%0A%20(holiday-fixed%207%2018%20"Nelson%20Mandela%20International%20Day")%0A%20(holiday-fixed%2011%2019%20"World%20Toilet%20Day")%0A%20(holiday-float%2011%204%203%20"World%20Philosophy%20Day")%0A%20(holiday-fixed%2011%2020%20"Universal%20Children's%20Day")%0A%20))%0A%0A%20%0A%20%0A;;%20(setq%20holiday-local-holidays%0A;;%20'((holiday-fixed%2012%2021%20"BUSD%20Winter%20recess%20start")%0A;;%20(holiday-fixed%206%2017%20"BUSD%20last%20day%20of%20school")))%0A%0A(add-hook%20'calendar-load-hook%20%0A%20(lambda%20()%20(calendar-set-date-style%20'european)))%0A%0A%0A#+END_SRC%20%0A*%20Global%20key%20bindings%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(bind-key%20"RET"%20'newline-and-indent)%20;;%20check%20back%20in%202030%20if%20still%20needed%0A%0A(bind-key%20"<f12>"%20'other-frame)%0A%0A;;%20using%20ivy%20for%20C-s%0A;;(global-set-key%20(kbd%20"C-s")%20'swiper)%0A;;(bind-key%20"C-S"%20'isearch-forward-regexp)%20;;%20use%20regex%20variants%20of%20search%0A(bind-key%20"C-r"%20'isearch-backward-regexp)%0A(bind-key%20"M-%25"%20'query-replace-regexp)%0A%0A;;%20M-^%20is%20join-line%20aka%20delete-indentation%0A(defun%20join-next-line%20()%0A%20"Join%20current%20line%20with%20one%20below."%0A%20(interactive)%0A%20(delete-indentation%201)%0A%20)%0A(bind-key%20"C-^"%20'join-next-line)%0A%0A(bind-key%20"C-+"%20'text-scale-increase)%0A(bind-key%20"C--"%20'text-scale-decrease)%0A%0A(bind-key%20"C-c%20z"%20'bury-buffer)%0A(bind-key%20"C-x%20C-b"%20'ibuffer)%20;;%20replace%20buffer-menu%20with%20ibuffer%0A%0A;;(autoload%20'zap-up-to-char%20"misc"%0A;;%20"Kill%20up%20to,%20but%20not%20including%20ARGth%20occurrence%20of%20CHAR."%20t)%0A(bind-key%20"M-z"%20'zap-up-to-char)%0A%0A(bind-key%20"C-x%20m"%20'eshell)%0A(bind-key%20"C-x%20M-m"%20'shell)%0A%0A(bind-key%20"M-/"%20'hippie-expand)%20;;%20use%20hippie-expand%20instead%20of%20dabbrev%0A%0A#+END_SRC%0A%0A*%20End%0A**%20Turn%20off%20debug%0A%0A#+BEGIN_SRC%20emacs-lisp%0A(message%20"init.org:%20Looks%20like%20we%20got%20to%20the%20end%20of%20init%20OK.")%0A(setq%20debug-on-error%20nil)%0A(setq%20debug-on-quit%20nil)%0A#+END_SRC%0A%0A**%20Load%20customization%20system%20generated%20variables%20%0A%20Set%20Emacs%20customizations%20to%20file%20custom.el.%0A][Load\ customization\ system\ generated\ variables:1]]
  (setq custom-file (expand-file-name "custom.el" user-emacs-directory))
  (load custom-file)
;; Load\ customization\ system\ generated\ variables:1 ends here
